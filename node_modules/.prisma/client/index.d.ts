
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model community
 * 
 */
export type community = $Result.DefaultSelection<Prisma.$communityPayload>
/**
 * Model community_points
 * 
 */
export type community_points = $Result.DefaultSelection<Prisma.$community_pointsPayload>
/**
 * Model courier
 * 
 */
export type courier = $Result.DefaultSelection<Prisma.$courierPayload>
/**
 * Model courier_points
 * 
 */
export type courier_points = $Result.DefaultSelection<Prisma.$courier_pointsPayload>
/**
 * Model dropbox
 * 
 */
export type dropbox = $Result.DefaultSelection<Prisma.$dropboxPayload>
/**
 * Model management
 * 
 */
export type management = $Result.DefaultSelection<Prisma.$managementPayload>
/**
 * Model pickup_waste
 * 
 */
export type pickup_waste = $Result.DefaultSelection<Prisma.$pickup_wastePayload>
/**
 * Model waste
 * 
 */
export type waste = $Result.DefaultSelection<Prisma.$wastePayload>
/**
 * Model waste_type
 * 
 */
export type waste_type = $Result.DefaultSelection<Prisma.$waste_typePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const courier_status: {
  Pending: 'Pending',
  Approved: 'Approved',
  Reject: 'Reject'
};

export type courier_status = (typeof courier_status)[keyof typeof courier_status]


export const dropbox_district_address: {
  Bandung_Utara: 'Bandung_Utara',
  Bandung_Selatan: 'Bandung_Selatan',
  Bandung_Timur: 'Bandung_Timur',
  Bandung_Barat: 'Bandung_Barat',
  Cimahi: 'Cimahi',
  Kabupaten_Bandung: 'Kabupaten_Bandung',
  Kabupaten_Bandung_Barat: 'Kabupaten_Bandung_Barat'
};

export type dropbox_district_address = (typeof dropbox_district_address)[keyof typeof dropbox_district_address]


export const dropbox_status: {
  Full: 'Full',
  Available: 'Available'
};

export type dropbox_status = (typeof dropbox_status)[keyof typeof dropbox_status]


export const pickup_waste_pickup_status: {
  pending: 'pending',
  accepted: 'accepted',
  completed: 'completed',
  cancelled: 'cancelled'
};

export type pickup_waste_pickup_status = (typeof pickup_waste_pickup_status)[keyof typeof pickup_waste_pickup_status]


export const waste_type_waste_type_name: {
  Large_Household_Apllience: 'Large_Household_Apllience',
  Small_Household_Appliances: 'Small_Household_Appliances',
  IT_Equipment: 'IT_Equipment',
  Lamps: 'Lamps',
  Toys: 'Toys',
  Screens_and_Monitors: 'Screens_and_Monitors',
  Other_Electronic_Devices: 'Other_Electronic_Devices'
};

export type waste_type_waste_type_name = (typeof waste_type_waste_type_name)[keyof typeof waste_type_waste_type_name]

}

export type courier_status = $Enums.courier_status

export const courier_status: typeof $Enums.courier_status

export type dropbox_district_address = $Enums.dropbox_district_address

export const dropbox_district_address: typeof $Enums.dropbox_district_address

export type dropbox_status = $Enums.dropbox_status

export const dropbox_status: typeof $Enums.dropbox_status

export type pickup_waste_pickup_status = $Enums.pickup_waste_pickup_status

export const pickup_waste_pickup_status: typeof $Enums.pickup_waste_pickup_status

export type waste_type_waste_type_name = $Enums.waste_type_waste_type_name

export const waste_type_waste_type_name: typeof $Enums.waste_type_waste_type_name

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Communities
 * const communities = await prisma.community.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Communities
   * const communities = await prisma.community.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.community`: Exposes CRUD operations for the **community** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communities
    * const communities = await prisma.community.findMany()
    * ```
    */
  get community(): Prisma.communityDelegate<ExtArgs>;

  /**
   * `prisma.community_points`: Exposes CRUD operations for the **community_points** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Community_points
    * const community_points = await prisma.community_points.findMany()
    * ```
    */
  get community_points(): Prisma.community_pointsDelegate<ExtArgs>;

  /**
   * `prisma.courier`: Exposes CRUD operations for the **courier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Couriers
    * const couriers = await prisma.courier.findMany()
    * ```
    */
  get courier(): Prisma.courierDelegate<ExtArgs>;

  /**
   * `prisma.courier_points`: Exposes CRUD operations for the **courier_points** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Courier_points
    * const courier_points = await prisma.courier_points.findMany()
    * ```
    */
  get courier_points(): Prisma.courier_pointsDelegate<ExtArgs>;

  /**
   * `prisma.dropbox`: Exposes CRUD operations for the **dropbox** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dropboxes
    * const dropboxes = await prisma.dropbox.findMany()
    * ```
    */
  get dropbox(): Prisma.dropboxDelegate<ExtArgs>;

  /**
   * `prisma.management`: Exposes CRUD operations for the **management** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Managements
    * const managements = await prisma.management.findMany()
    * ```
    */
  get management(): Prisma.managementDelegate<ExtArgs>;

  /**
   * `prisma.pickup_waste`: Exposes CRUD operations for the **pickup_waste** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pickup_wastes
    * const pickup_wastes = await prisma.pickup_waste.findMany()
    * ```
    */
  get pickup_waste(): Prisma.pickup_wasteDelegate<ExtArgs>;

  /**
   * `prisma.waste`: Exposes CRUD operations for the **waste** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wastes
    * const wastes = await prisma.waste.findMany()
    * ```
    */
  get waste(): Prisma.wasteDelegate<ExtArgs>;

  /**
   * `prisma.waste_type`: Exposes CRUD operations for the **waste_type** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Waste_types
    * const waste_types = await prisma.waste_type.findMany()
    * ```
    */
  get waste_type(): Prisma.waste_typeDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.21.1
   * Query Engine version: bf0e5e8a04cada8225617067eaa03d041e2bba36
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    community: 'community',
    community_points: 'community_points',
    courier: 'courier',
    courier_points: 'courier_points',
    dropbox: 'dropbox',
    management: 'management',
    pickup_waste: 'pickup_waste',
    waste: 'waste',
    waste_type: 'waste_type'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "community" | "community_points" | "courier" | "courier_points" | "dropbox" | "management" | "pickup_waste" | "waste" | "waste_type"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      community: {
        payload: Prisma.$communityPayload<ExtArgs>
        fields: Prisma.communityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.communityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.communityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findFirst: {
            args: Prisma.communityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.communityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          findMany: {
            args: Prisma.communityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>[]
          }
          create: {
            args: Prisma.communityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          createMany: {
            args: Prisma.communityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.communityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          update: {
            args: Prisma.communityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          deleteMany: {
            args: Prisma.communityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.communityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.communityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$communityPayload>
          }
          aggregate: {
            args: Prisma.CommunityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity>
          }
          groupBy: {
            args: Prisma.communityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunityGroupByOutputType>[]
          }
          count: {
            args: Prisma.communityCountArgs<ExtArgs>
            result: $Utils.Optional<CommunityCountAggregateOutputType> | number
          }
        }
      }
      community_points: {
        payload: Prisma.$community_pointsPayload<ExtArgs>
        fields: Prisma.community_pointsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.community_pointsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.community_pointsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>
          }
          findFirst: {
            args: Prisma.community_pointsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.community_pointsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>
          }
          findMany: {
            args: Prisma.community_pointsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>[]
          }
          create: {
            args: Prisma.community_pointsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>
          }
          createMany: {
            args: Prisma.community_pointsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.community_pointsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>
          }
          update: {
            args: Prisma.community_pointsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>
          }
          deleteMany: {
            args: Prisma.community_pointsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.community_pointsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.community_pointsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$community_pointsPayload>
          }
          aggregate: {
            args: Prisma.Community_pointsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity_points>
          }
          groupBy: {
            args: Prisma.community_pointsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Community_pointsGroupByOutputType>[]
          }
          count: {
            args: Prisma.community_pointsCountArgs<ExtArgs>
            result: $Utils.Optional<Community_pointsCountAggregateOutputType> | number
          }
        }
      }
      courier: {
        payload: Prisma.$courierPayload<ExtArgs>
        fields: Prisma.courierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.courierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.courierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>
          }
          findFirst: {
            args: Prisma.courierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.courierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>
          }
          findMany: {
            args: Prisma.courierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>[]
          }
          create: {
            args: Prisma.courierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>
          }
          createMany: {
            args: Prisma.courierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.courierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>
          }
          update: {
            args: Prisma.courierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>
          }
          deleteMany: {
            args: Prisma.courierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.courierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.courierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courierPayload>
          }
          aggregate: {
            args: Prisma.CourierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourier>
          }
          groupBy: {
            args: Prisma.courierGroupByArgs<ExtArgs>
            result: $Utils.Optional<CourierGroupByOutputType>[]
          }
          count: {
            args: Prisma.courierCountArgs<ExtArgs>
            result: $Utils.Optional<CourierCountAggregateOutputType> | number
          }
        }
      }
      courier_points: {
        payload: Prisma.$courier_pointsPayload<ExtArgs>
        fields: Prisma.courier_pointsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.courier_pointsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.courier_pointsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>
          }
          findFirst: {
            args: Prisma.courier_pointsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.courier_pointsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>
          }
          findMany: {
            args: Prisma.courier_pointsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>[]
          }
          create: {
            args: Prisma.courier_pointsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>
          }
          createMany: {
            args: Prisma.courier_pointsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.courier_pointsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>
          }
          update: {
            args: Prisma.courier_pointsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>
          }
          deleteMany: {
            args: Prisma.courier_pointsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.courier_pointsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.courier_pointsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$courier_pointsPayload>
          }
          aggregate: {
            args: Prisma.Courier_pointsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourier_points>
          }
          groupBy: {
            args: Prisma.courier_pointsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Courier_pointsGroupByOutputType>[]
          }
          count: {
            args: Prisma.courier_pointsCountArgs<ExtArgs>
            result: $Utils.Optional<Courier_pointsCountAggregateOutputType> | number
          }
        }
      }
      dropbox: {
        payload: Prisma.$dropboxPayload<ExtArgs>
        fields: Prisma.dropboxFieldRefs
        operations: {
          findUnique: {
            args: Prisma.dropboxFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.dropboxFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>
          }
          findFirst: {
            args: Prisma.dropboxFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.dropboxFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>
          }
          findMany: {
            args: Prisma.dropboxFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>[]
          }
          create: {
            args: Prisma.dropboxCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>
          }
          createMany: {
            args: Prisma.dropboxCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.dropboxDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>
          }
          update: {
            args: Prisma.dropboxUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>
          }
          deleteMany: {
            args: Prisma.dropboxDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.dropboxUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.dropboxUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dropboxPayload>
          }
          aggregate: {
            args: Prisma.DropboxAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDropbox>
          }
          groupBy: {
            args: Prisma.dropboxGroupByArgs<ExtArgs>
            result: $Utils.Optional<DropboxGroupByOutputType>[]
          }
          count: {
            args: Prisma.dropboxCountArgs<ExtArgs>
            result: $Utils.Optional<DropboxCountAggregateOutputType> | number
          }
        }
      }
      management: {
        payload: Prisma.$managementPayload<ExtArgs>
        fields: Prisma.managementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.managementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.managementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>
          }
          findFirst: {
            args: Prisma.managementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.managementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>
          }
          findMany: {
            args: Prisma.managementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>[]
          }
          create: {
            args: Prisma.managementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>
          }
          createMany: {
            args: Prisma.managementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.managementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>
          }
          update: {
            args: Prisma.managementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>
          }
          deleteMany: {
            args: Prisma.managementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.managementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.managementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$managementPayload>
          }
          aggregate: {
            args: Prisma.ManagementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateManagement>
          }
          groupBy: {
            args: Prisma.managementGroupByArgs<ExtArgs>
            result: $Utils.Optional<ManagementGroupByOutputType>[]
          }
          count: {
            args: Prisma.managementCountArgs<ExtArgs>
            result: $Utils.Optional<ManagementCountAggregateOutputType> | number
          }
        }
      }
      pickup_waste: {
        payload: Prisma.$pickup_wastePayload<ExtArgs>
        fields: Prisma.pickup_wasteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pickup_wasteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pickup_wasteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>
          }
          findFirst: {
            args: Prisma.pickup_wasteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pickup_wasteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>
          }
          findMany: {
            args: Prisma.pickup_wasteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>[]
          }
          create: {
            args: Prisma.pickup_wasteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>
          }
          createMany: {
            args: Prisma.pickup_wasteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.pickup_wasteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>
          }
          update: {
            args: Prisma.pickup_wasteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>
          }
          deleteMany: {
            args: Prisma.pickup_wasteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pickup_wasteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.pickup_wasteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pickup_wastePayload>
          }
          aggregate: {
            args: Prisma.Pickup_wasteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePickup_waste>
          }
          groupBy: {
            args: Prisma.pickup_wasteGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pickup_wasteGroupByOutputType>[]
          }
          count: {
            args: Prisma.pickup_wasteCountArgs<ExtArgs>
            result: $Utils.Optional<Pickup_wasteCountAggregateOutputType> | number
          }
        }
      }
      waste: {
        payload: Prisma.$wastePayload<ExtArgs>
        fields: Prisma.wasteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wasteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wasteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>
          }
          findFirst: {
            args: Prisma.wasteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wasteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>
          }
          findMany: {
            args: Prisma.wasteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>[]
          }
          create: {
            args: Prisma.wasteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>
          }
          createMany: {
            args: Prisma.wasteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wasteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>
          }
          update: {
            args: Prisma.wasteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>
          }
          deleteMany: {
            args: Prisma.wasteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wasteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wasteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wastePayload>
          }
          aggregate: {
            args: Prisma.WasteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWaste>
          }
          groupBy: {
            args: Prisma.wasteGroupByArgs<ExtArgs>
            result: $Utils.Optional<WasteGroupByOutputType>[]
          }
          count: {
            args: Prisma.wasteCountArgs<ExtArgs>
            result: $Utils.Optional<WasteCountAggregateOutputType> | number
          }
        }
      }
      waste_type: {
        payload: Prisma.$waste_typePayload<ExtArgs>
        fields: Prisma.waste_typeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.waste_typeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.waste_typeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>
          }
          findFirst: {
            args: Prisma.waste_typeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.waste_typeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>
          }
          findMany: {
            args: Prisma.waste_typeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>[]
          }
          create: {
            args: Prisma.waste_typeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>
          }
          createMany: {
            args: Prisma.waste_typeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.waste_typeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>
          }
          update: {
            args: Prisma.waste_typeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>
          }
          deleteMany: {
            args: Prisma.waste_typeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.waste_typeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.waste_typeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$waste_typePayload>
          }
          aggregate: {
            args: Prisma.Waste_typeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWaste_type>
          }
          groupBy: {
            args: Prisma.waste_typeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Waste_typeGroupByOutputType>[]
          }
          count: {
            args: Prisma.waste_typeCountArgs<ExtArgs>
            result: $Utils.Optional<Waste_typeCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CommunityCountOutputType
   */

  export type CommunityCountOutputType = {
    community_points: number
    pickup_waste: number
  }

  export type CommunityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_points?: boolean | CommunityCountOutputTypeCountCommunity_pointsArgs
    pickup_waste?: boolean | CommunityCountOutputTypeCountPickup_wasteArgs
  }

  // Custom InputTypes
  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityCountOutputType
     */
    select?: CommunityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountCommunity_pointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_pointsWhereInput
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountPickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pickup_wasteWhereInput
  }


  /**
   * Count Type CourierCountOutputType
   */

  export type CourierCountOutputType = {
    courier_points: number
    pickup_waste: number
  }

  export type CourierCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courier_points?: boolean | CourierCountOutputTypeCountCourier_pointsArgs
    pickup_waste?: boolean | CourierCountOutputTypeCountPickup_wasteArgs
  }

  // Custom InputTypes
  /**
   * CourierCountOutputType without action
   */
  export type CourierCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourierCountOutputType
     */
    select?: CourierCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CourierCountOutputType without action
   */
  export type CourierCountOutputTypeCountCourier_pointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: courier_pointsWhereInput
  }

  /**
   * CourierCountOutputType without action
   */
  export type CourierCountOutputTypeCountPickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pickup_wasteWhereInput
  }


  /**
   * Count Type DropboxCountOutputType
   */

  export type DropboxCountOutputType = {
    pickup_waste: number
  }

  export type DropboxCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pickup_waste?: boolean | DropboxCountOutputTypeCountPickup_wasteArgs
  }

  // Custom InputTypes
  /**
   * DropboxCountOutputType without action
   */
  export type DropboxCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DropboxCountOutputType
     */
    select?: DropboxCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DropboxCountOutputType without action
   */
  export type DropboxCountOutputTypeCountPickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pickup_wasteWhereInput
  }


  /**
   * Count Type ManagementCountOutputType
   */

  export type ManagementCountOutputType = {
    pickup_waste: number
  }

  export type ManagementCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pickup_waste?: boolean | ManagementCountOutputTypeCountPickup_wasteArgs
  }

  // Custom InputTypes
  /**
   * ManagementCountOutputType without action
   */
  export type ManagementCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManagementCountOutputType
     */
    select?: ManagementCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ManagementCountOutputType without action
   */
  export type ManagementCountOutputTypeCountPickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pickup_wasteWhereInput
  }


  /**
   * Count Type Waste_typeCountOutputType
   */

  export type Waste_typeCountOutputType = {
    waste: number
  }

  export type Waste_typeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    waste?: boolean | Waste_typeCountOutputTypeCountWasteArgs
  }

  // Custom InputTypes
  /**
   * Waste_typeCountOutputType without action
   */
  export type Waste_typeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waste_typeCountOutputType
     */
    select?: Waste_typeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Waste_typeCountOutputType without action
   */
  export type Waste_typeCountOutputTypeCountWasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wasteWhereInput
  }


  /**
   * Models
   */

  /**
   * Model community
   */

  export type AggregateCommunity = {
    _count: CommunityCountAggregateOutputType | null
    _avg: CommunityAvgAggregateOutputType | null
    _sum: CommunitySumAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  export type CommunityAvgAggregateOutputType = {
    community_id: number | null
  }

  export type CommunitySumAggregateOutputType = {
    community_id: number | null
  }

  export type CommunityMinAggregateOutputType = {
    community_id: number | null
    name: string | null
    email: string | null
    password: string | null
    phone: string | null
    date_of_birth: Date | null
    address: string | null
    photo: string | null
    is_verified: boolean | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommunityMaxAggregateOutputType = {
    community_id: number | null
    name: string | null
    email: string | null
    password: string | null
    phone: string | null
    date_of_birth: Date | null
    address: string | null
    photo: string | null
    is_verified: boolean | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CommunityCountAggregateOutputType = {
    community_id: number
    name: number
    email: number
    password: number
    phone: number
    date_of_birth: number
    address: number
    photo: number
    is_verified: number
    otp_code: number
    otp_expiry: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CommunityAvgAggregateInputType = {
    community_id?: true
  }

  export type CommunitySumAggregateInputType = {
    community_id?: true
  }

  export type CommunityMinAggregateInputType = {
    community_id?: true
    name?: true
    email?: true
    password?: true
    phone?: true
    date_of_birth?: true
    address?: true
    photo?: true
    is_verified?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
  }

  export type CommunityMaxAggregateInputType = {
    community_id?: true
    name?: true
    email?: true
    password?: true
    phone?: true
    date_of_birth?: true
    address?: true
    photo?: true
    is_verified?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
  }

  export type CommunityCountAggregateInputType = {
    community_id?: true
    name?: true
    email?: true
    password?: true
    phone?: true
    date_of_birth?: true
    address?: true
    photo?: true
    is_verified?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CommunityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community to aggregate.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned communities
    **/
    _count?: true | CommunityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommunityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommunitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunityMaxAggregateInputType
  }

  export type GetCommunityAggregateType<T extends CommunityAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity[P]>
      : GetScalarType<T[P], AggregateCommunity[P]>
  }




  export type communityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: communityWhereInput
    orderBy?: communityOrderByWithAggregationInput | communityOrderByWithAggregationInput[]
    by: CommunityScalarFieldEnum[] | CommunityScalarFieldEnum
    having?: communityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunityCountAggregateInputType | true
    _avg?: CommunityAvgAggregateInputType
    _sum?: CommunitySumAggregateInputType
    _min?: CommunityMinAggregateInputType
    _max?: CommunityMaxAggregateInputType
  }

  export type CommunityGroupByOutputType = {
    community_id: number
    name: string
    email: string
    password: string | null
    phone: string | null
    date_of_birth: Date | null
    address: string | null
    photo: string | null
    is_verified: boolean | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: CommunityCountAggregateOutputType | null
    _avg: CommunityAvgAggregateOutputType | null
    _sum: CommunitySumAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  type GetCommunityGroupByPayload<T extends communityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunityGroupByOutputType[P]>
            : GetScalarType<T[P], CommunityGroupByOutputType[P]>
        }
      >
    >


  export type communitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    community_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    date_of_birth?: boolean
    address?: boolean
    photo?: boolean
    is_verified?: boolean
    otp_code?: boolean
    otp_expiry?: boolean
    created_at?: boolean
    updated_at?: boolean
    community_points?: boolean | community$community_pointsArgs<ExtArgs>
    pickup_waste?: boolean | community$pickup_wasteArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>


  export type communitySelectScalar = {
    community_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    date_of_birth?: boolean
    address?: boolean
    photo?: boolean
    is_verified?: boolean
    otp_code?: boolean
    otp_expiry?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type communityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community_points?: boolean | community$community_pointsArgs<ExtArgs>
    pickup_waste?: boolean | community$pickup_wasteArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $communityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community"
    objects: {
      community_points: Prisma.$community_pointsPayload<ExtArgs>[]
      pickup_waste: Prisma.$pickup_wastePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      community_id: number
      name: string
      email: string
      password: string | null
      phone: string | null
      date_of_birth: Date | null
      address: string | null
      photo: string | null
      is_verified: boolean | null
      otp_code: string | null
      otp_expiry: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["community"]>
    composites: {}
  }

  type communityGetPayload<S extends boolean | null | undefined | communityDefaultArgs> = $Result.GetResult<Prisma.$communityPayload, S>

  type communityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<communityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CommunityCountAggregateInputType | true
    }

  export interface communityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community'], meta: { name: 'community' } }
    /**
     * Find zero or one Community that matches the filter.
     * @param {communityFindUniqueArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends communityFindUniqueArgs>(args: SelectSubset<T, communityFindUniqueArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Community that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {communityFindUniqueOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends communityFindUniqueOrThrowArgs>(args: SelectSubset<T, communityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Community that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends communityFindFirstArgs>(args?: SelectSubset<T, communityFindFirstArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Community that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindFirstOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends communityFindFirstOrThrowArgs>(args?: SelectSubset<T, communityFindFirstOrThrowArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Communities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communities
     * const communities = await prisma.community.findMany()
     * 
     * // Get first 10 Communities
     * const communities = await prisma.community.findMany({ take: 10 })
     * 
     * // Only select the `community_id`
     * const communityWithCommunity_idOnly = await prisma.community.findMany({ select: { community_id: true } })
     * 
     */
    findMany<T extends communityFindManyArgs>(args?: SelectSubset<T, communityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Community.
     * @param {communityCreateArgs} args - Arguments to create a Community.
     * @example
     * // Create one Community
     * const Community = await prisma.community.create({
     *   data: {
     *     // ... data to create a Community
     *   }
     * })
     * 
     */
    create<T extends communityCreateArgs>(args: SelectSubset<T, communityCreateArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Communities.
     * @param {communityCreateManyArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends communityCreateManyArgs>(args?: SelectSubset<T, communityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Community.
     * @param {communityDeleteArgs} args - Arguments to delete one Community.
     * @example
     * // Delete one Community
     * const Community = await prisma.community.delete({
     *   where: {
     *     // ... filter to delete one Community
     *   }
     * })
     * 
     */
    delete<T extends communityDeleteArgs>(args: SelectSubset<T, communityDeleteArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Community.
     * @param {communityUpdateArgs} args - Arguments to update one Community.
     * @example
     * // Update one Community
     * const community = await prisma.community.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends communityUpdateArgs>(args: SelectSubset<T, communityUpdateArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Communities.
     * @param {communityDeleteManyArgs} args - Arguments to filter Communities to delete.
     * @example
     * // Delete a few Communities
     * const { count } = await prisma.community.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends communityDeleteManyArgs>(args?: SelectSubset<T, communityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends communityUpdateManyArgs>(args: SelectSubset<T, communityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community.
     * @param {communityUpsertArgs} args - Arguments to update or create a Community.
     * @example
     * // Update or create a Community
     * const community = await prisma.community.upsert({
     *   create: {
     *     // ... data to create a Community
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community we want to update
     *   }
     * })
     */
    upsert<T extends communityUpsertArgs>(args: SelectSubset<T, communityUpsertArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityCountArgs} args - Arguments to filter Communities to count.
     * @example
     * // Count the number of Communities
     * const count = await prisma.community.count({
     *   where: {
     *     // ... the filter for the Communities we want to count
     *   }
     * })
    **/
    count<T extends communityCountArgs>(
      args?: Subset<T, communityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunityAggregateArgs>(args: Subset<T, CommunityAggregateArgs>): Prisma.PrismaPromise<GetCommunityAggregateType<T>>

    /**
     * Group by Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {communityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends communityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: communityGroupByArgs['orderBy'] }
        : { orderBy?: communityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, communityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community model
   */
  readonly fields: communityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__communityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community_points<T extends community$community_pointsArgs<ExtArgs> = {}>(args?: Subset<T, community$community_pointsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "findMany"> | Null>
    pickup_waste<T extends community$pickup_wasteArgs<ExtArgs> = {}>(args?: Subset<T, community$pickup_wasteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community model
   */ 
  interface communityFieldRefs {
    readonly community_id: FieldRef<"community", 'Int'>
    readonly name: FieldRef<"community", 'String'>
    readonly email: FieldRef<"community", 'String'>
    readonly password: FieldRef<"community", 'String'>
    readonly phone: FieldRef<"community", 'String'>
    readonly date_of_birth: FieldRef<"community", 'DateTime'>
    readonly address: FieldRef<"community", 'String'>
    readonly photo: FieldRef<"community", 'String'>
    readonly is_verified: FieldRef<"community", 'Boolean'>
    readonly otp_code: FieldRef<"community", 'String'>
    readonly otp_expiry: FieldRef<"community", 'DateTime'>
    readonly created_at: FieldRef<"community", 'DateTime'>
    readonly updated_at: FieldRef<"community", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community findUnique
   */
  export type communityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findUniqueOrThrow
   */
  export type communityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community findFirst
   */
  export type communityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findFirstOrThrow
   */
  export type communityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which community to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community findMany
   */
  export type communityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter, which communities to fetch.
     */
    where?: communityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of communities to fetch.
     */
    orderBy?: communityOrderByWithRelationInput | communityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing communities.
     */
    cursor?: communityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` communities.
     */
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * community create
   */
  export type communityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to create a community.
     */
    data: XOR<communityCreateInput, communityUncheckedCreateInput>
  }

  /**
   * community createMany
   */
  export type communityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many communities.
     */
    data: communityCreateManyInput | communityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community update
   */
  export type communityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The data needed to update a community.
     */
    data: XOR<communityUpdateInput, communityUncheckedUpdateInput>
    /**
     * Choose, which community to update.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community updateMany
   */
  export type communityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update communities.
     */
    data: XOR<communityUpdateManyMutationInput, communityUncheckedUpdateManyInput>
    /**
     * Filter which communities to update
     */
    where?: communityWhereInput
  }

  /**
   * community upsert
   */
  export type communityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * The filter to search for the community to update in case it exists.
     */
    where: communityWhereUniqueInput
    /**
     * In case the community found by the `where` argument doesn't exist, create a new community with this data.
     */
    create: XOR<communityCreateInput, communityUncheckedCreateInput>
    /**
     * In case the community was found with the provided `where` argument, update it with this data.
     */
    update: XOR<communityUpdateInput, communityUncheckedUpdateInput>
  }

  /**
   * community delete
   */
  export type communityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    /**
     * Filter which community to delete.
     */
    where: communityWhereUniqueInput
  }

  /**
   * community deleteMany
   */
  export type communityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which communities to delete
     */
    where?: communityWhereInput
  }

  /**
   * community.community_points
   */
  export type community$community_pointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    where?: community_pointsWhereInput
    orderBy?: community_pointsOrderByWithRelationInput | community_pointsOrderByWithRelationInput[]
    cursor?: community_pointsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Community_pointsScalarFieldEnum | Community_pointsScalarFieldEnum[]
  }

  /**
   * community.pickup_waste
   */
  export type community$pickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    where?: pickup_wasteWhereInput
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    cursor?: pickup_wasteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * community without action
   */
  export type communityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
  }


  /**
   * Model community_points
   */

  export type AggregateCommunity_points = {
    _count: Community_pointsCountAggregateOutputType | null
    _avg: Community_pointsAvgAggregateOutputType | null
    _sum: Community_pointsSumAggregateOutputType | null
    _min: Community_pointsMinAggregateOutputType | null
    _max: Community_pointsMaxAggregateOutputType | null
  }

  export type Community_pointsAvgAggregateOutputType = {
    points_id: number | null
    community_id: number | null
    total_points: number | null
  }

  export type Community_pointsSumAggregateOutputType = {
    points_id: number | null
    community_id: number | null
    total_points: number | null
  }

  export type Community_pointsMinAggregateOutputType = {
    points_id: number | null
    community_id: number | null
    total_points: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_pointsMaxAggregateOutputType = {
    points_id: number | null
    community_id: number | null
    total_points: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Community_pointsCountAggregateOutputType = {
    points_id: number
    community_id: number
    total_points: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Community_pointsAvgAggregateInputType = {
    points_id?: true
    community_id?: true
    total_points?: true
  }

  export type Community_pointsSumAggregateInputType = {
    points_id?: true
    community_id?: true
    total_points?: true
  }

  export type Community_pointsMinAggregateInputType = {
    points_id?: true
    community_id?: true
    total_points?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_pointsMaxAggregateInputType = {
    points_id?: true
    community_id?: true
    total_points?: true
    created_at?: true
    updated_at?: true
  }

  export type Community_pointsCountAggregateInputType = {
    points_id?: true
    community_id?: true
    total_points?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Community_pointsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_points to aggregate.
     */
    where?: community_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_points to fetch.
     */
    orderBy?: community_pointsOrderByWithRelationInput | community_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: community_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_points.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned community_points
    **/
    _count?: true | Community_pointsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Community_pointsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Community_pointsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Community_pointsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Community_pointsMaxAggregateInputType
  }

  export type GetCommunity_pointsAggregateType<T extends Community_pointsAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity_points]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity_points[P]>
      : GetScalarType<T[P], AggregateCommunity_points[P]>
  }




  export type community_pointsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: community_pointsWhereInput
    orderBy?: community_pointsOrderByWithAggregationInput | community_pointsOrderByWithAggregationInput[]
    by: Community_pointsScalarFieldEnum[] | Community_pointsScalarFieldEnum
    having?: community_pointsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Community_pointsCountAggregateInputType | true
    _avg?: Community_pointsAvgAggregateInputType
    _sum?: Community_pointsSumAggregateInputType
    _min?: Community_pointsMinAggregateInputType
    _max?: Community_pointsMaxAggregateInputType
  }

  export type Community_pointsGroupByOutputType = {
    points_id: number
    community_id: number | null
    total_points: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Community_pointsCountAggregateOutputType | null
    _avg: Community_pointsAvgAggregateOutputType | null
    _sum: Community_pointsSumAggregateOutputType | null
    _min: Community_pointsMinAggregateOutputType | null
    _max: Community_pointsMaxAggregateOutputType | null
  }

  type GetCommunity_pointsGroupByPayload<T extends community_pointsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Community_pointsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Community_pointsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Community_pointsGroupByOutputType[P]>
            : GetScalarType<T[P], Community_pointsGroupByOutputType[P]>
        }
      >
    >


  export type community_pointsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    points_id?: boolean
    community_id?: boolean
    total_points?: boolean
    created_at?: boolean
    updated_at?: boolean
    community?: boolean | community_points$communityArgs<ExtArgs>
  }, ExtArgs["result"]["community_points"]>


  export type community_pointsSelectScalar = {
    points_id?: boolean
    community_id?: boolean
    total_points?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type community_pointsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    community?: boolean | community_points$communityArgs<ExtArgs>
  }

  export type $community_pointsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "community_points"
    objects: {
      community: Prisma.$communityPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      points_id: number
      community_id: number | null
      total_points: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["community_points"]>
    composites: {}
  }

  type community_pointsGetPayload<S extends boolean | null | undefined | community_pointsDefaultArgs> = $Result.GetResult<Prisma.$community_pointsPayload, S>

  type community_pointsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<community_pointsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Community_pointsCountAggregateInputType | true
    }

  export interface community_pointsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['community_points'], meta: { name: 'community_points' } }
    /**
     * Find zero or one Community_points that matches the filter.
     * @param {community_pointsFindUniqueArgs} args - Arguments to find a Community_points
     * @example
     * // Get one Community_points
     * const community_points = await prisma.community_points.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends community_pointsFindUniqueArgs>(args: SelectSubset<T, community_pointsFindUniqueArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Community_points that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {community_pointsFindUniqueOrThrowArgs} args - Arguments to find a Community_points
     * @example
     * // Get one Community_points
     * const community_points = await prisma.community_points.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends community_pointsFindUniqueOrThrowArgs>(args: SelectSubset<T, community_pointsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Community_points that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_pointsFindFirstArgs} args - Arguments to find a Community_points
     * @example
     * // Get one Community_points
     * const community_points = await prisma.community_points.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends community_pointsFindFirstArgs>(args?: SelectSubset<T, community_pointsFindFirstArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Community_points that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_pointsFindFirstOrThrowArgs} args - Arguments to find a Community_points
     * @example
     * // Get one Community_points
     * const community_points = await prisma.community_points.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends community_pointsFindFirstOrThrowArgs>(args?: SelectSubset<T, community_pointsFindFirstOrThrowArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Community_points that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_pointsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Community_points
     * const community_points = await prisma.community_points.findMany()
     * 
     * // Get first 10 Community_points
     * const community_points = await prisma.community_points.findMany({ take: 10 })
     * 
     * // Only select the `points_id`
     * const community_pointsWithPoints_idOnly = await prisma.community_points.findMany({ select: { points_id: true } })
     * 
     */
    findMany<T extends community_pointsFindManyArgs>(args?: SelectSubset<T, community_pointsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Community_points.
     * @param {community_pointsCreateArgs} args - Arguments to create a Community_points.
     * @example
     * // Create one Community_points
     * const Community_points = await prisma.community_points.create({
     *   data: {
     *     // ... data to create a Community_points
     *   }
     * })
     * 
     */
    create<T extends community_pointsCreateArgs>(args: SelectSubset<T, community_pointsCreateArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Community_points.
     * @param {community_pointsCreateManyArgs} args - Arguments to create many Community_points.
     * @example
     * // Create many Community_points
     * const community_points = await prisma.community_points.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends community_pointsCreateManyArgs>(args?: SelectSubset<T, community_pointsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Community_points.
     * @param {community_pointsDeleteArgs} args - Arguments to delete one Community_points.
     * @example
     * // Delete one Community_points
     * const Community_points = await prisma.community_points.delete({
     *   where: {
     *     // ... filter to delete one Community_points
     *   }
     * })
     * 
     */
    delete<T extends community_pointsDeleteArgs>(args: SelectSubset<T, community_pointsDeleteArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Community_points.
     * @param {community_pointsUpdateArgs} args - Arguments to update one Community_points.
     * @example
     * // Update one Community_points
     * const community_points = await prisma.community_points.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends community_pointsUpdateArgs>(args: SelectSubset<T, community_pointsUpdateArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Community_points.
     * @param {community_pointsDeleteManyArgs} args - Arguments to filter Community_points to delete.
     * @example
     * // Delete a few Community_points
     * const { count } = await prisma.community_points.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends community_pointsDeleteManyArgs>(args?: SelectSubset<T, community_pointsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Community_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_pointsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Community_points
     * const community_points = await prisma.community_points.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends community_pointsUpdateManyArgs>(args: SelectSubset<T, community_pointsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Community_points.
     * @param {community_pointsUpsertArgs} args - Arguments to update or create a Community_points.
     * @example
     * // Update or create a Community_points
     * const community_points = await prisma.community_points.upsert({
     *   create: {
     *     // ... data to create a Community_points
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community_points we want to update
     *   }
     * })
     */
    upsert<T extends community_pointsUpsertArgs>(args: SelectSubset<T, community_pointsUpsertArgs<ExtArgs>>): Prisma__community_pointsClient<$Result.GetResult<Prisma.$community_pointsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Community_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_pointsCountArgs} args - Arguments to filter Community_points to count.
     * @example
     * // Count the number of Community_points
     * const count = await prisma.community_points.count({
     *   where: {
     *     // ... the filter for the Community_points we want to count
     *   }
     * })
    **/
    count<T extends community_pointsCountArgs>(
      args?: Subset<T, community_pointsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Community_pointsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Community_pointsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Community_pointsAggregateArgs>(args: Subset<T, Community_pointsAggregateArgs>): Prisma.PrismaPromise<GetCommunity_pointsAggregateType<T>>

    /**
     * Group by Community_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {community_pointsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends community_pointsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: community_pointsGroupByArgs['orderBy'] }
        : { orderBy?: community_pointsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, community_pointsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunity_pointsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the community_points model
   */
  readonly fields: community_pointsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for community_points.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__community_pointsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    community<T extends community_points$communityArgs<ExtArgs> = {}>(args?: Subset<T, community_points$communityArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the community_points model
   */ 
  interface community_pointsFieldRefs {
    readonly points_id: FieldRef<"community_points", 'Int'>
    readonly community_id: FieldRef<"community_points", 'Int'>
    readonly total_points: FieldRef<"community_points", 'Int'>
    readonly created_at: FieldRef<"community_points", 'DateTime'>
    readonly updated_at: FieldRef<"community_points", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * community_points findUnique
   */
  export type community_pointsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * Filter, which community_points to fetch.
     */
    where: community_pointsWhereUniqueInput
  }

  /**
   * community_points findUniqueOrThrow
   */
  export type community_pointsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * Filter, which community_points to fetch.
     */
    where: community_pointsWhereUniqueInput
  }

  /**
   * community_points findFirst
   */
  export type community_pointsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * Filter, which community_points to fetch.
     */
    where?: community_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_points to fetch.
     */
    orderBy?: community_pointsOrderByWithRelationInput | community_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_points.
     */
    cursor?: community_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_points.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_points.
     */
    distinct?: Community_pointsScalarFieldEnum | Community_pointsScalarFieldEnum[]
  }

  /**
   * community_points findFirstOrThrow
   */
  export type community_pointsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * Filter, which community_points to fetch.
     */
    where?: community_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_points to fetch.
     */
    orderBy?: community_pointsOrderByWithRelationInput | community_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for community_points.
     */
    cursor?: community_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_points.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of community_points.
     */
    distinct?: Community_pointsScalarFieldEnum | Community_pointsScalarFieldEnum[]
  }

  /**
   * community_points findMany
   */
  export type community_pointsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * Filter, which community_points to fetch.
     */
    where?: community_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of community_points to fetch.
     */
    orderBy?: community_pointsOrderByWithRelationInput | community_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing community_points.
     */
    cursor?: community_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` community_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` community_points.
     */
    skip?: number
    distinct?: Community_pointsScalarFieldEnum | Community_pointsScalarFieldEnum[]
  }

  /**
   * community_points create
   */
  export type community_pointsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * The data needed to create a community_points.
     */
    data?: XOR<community_pointsCreateInput, community_pointsUncheckedCreateInput>
  }

  /**
   * community_points createMany
   */
  export type community_pointsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many community_points.
     */
    data: community_pointsCreateManyInput | community_pointsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * community_points update
   */
  export type community_pointsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * The data needed to update a community_points.
     */
    data: XOR<community_pointsUpdateInput, community_pointsUncheckedUpdateInput>
    /**
     * Choose, which community_points to update.
     */
    where: community_pointsWhereUniqueInput
  }

  /**
   * community_points updateMany
   */
  export type community_pointsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update community_points.
     */
    data: XOR<community_pointsUpdateManyMutationInput, community_pointsUncheckedUpdateManyInput>
    /**
     * Filter which community_points to update
     */
    where?: community_pointsWhereInput
  }

  /**
   * community_points upsert
   */
  export type community_pointsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * The filter to search for the community_points to update in case it exists.
     */
    where: community_pointsWhereUniqueInput
    /**
     * In case the community_points found by the `where` argument doesn't exist, create a new community_points with this data.
     */
    create: XOR<community_pointsCreateInput, community_pointsUncheckedCreateInput>
    /**
     * In case the community_points was found with the provided `where` argument, update it with this data.
     */
    update: XOR<community_pointsUpdateInput, community_pointsUncheckedUpdateInput>
  }

  /**
   * community_points delete
   */
  export type community_pointsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
    /**
     * Filter which community_points to delete.
     */
    where: community_pointsWhereUniqueInput
  }

  /**
   * community_points deleteMany
   */
  export type community_pointsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which community_points to delete
     */
    where?: community_pointsWhereInput
  }

  /**
   * community_points.community
   */
  export type community_points$communityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    where?: communityWhereInput
  }

  /**
   * community_points without action
   */
  export type community_pointsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community_points
     */
    select?: community_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: community_pointsInclude<ExtArgs> | null
  }


  /**
   * Model courier
   */

  export type AggregateCourier = {
    _count: CourierCountAggregateOutputType | null
    _avg: CourierAvgAggregateOutputType | null
    _sum: CourierSumAggregateOutputType | null
    _min: CourierMinAggregateOutputType | null
    _max: CourierMaxAggregateOutputType | null
  }

  export type CourierAvgAggregateOutputType = {
    courier_id: number | null
  }

  export type CourierSumAggregateOutputType = {
    courier_id: number | null
  }

  export type CourierMinAggregateOutputType = {
    courier_id: number | null
    name: string | null
    email: string | null
    password: string | null
    phone: string | null
    date_of_birth: Date | null
    address: string | null
    account_number: string | null
    nik: string | null
    ktp_url: string | null
    kk_url: string | null
    photo: string | null
    is_verified: boolean | null
    status: $Enums.courier_status | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CourierMaxAggregateOutputType = {
    courier_id: number | null
    name: string | null
    email: string | null
    password: string | null
    phone: string | null
    date_of_birth: Date | null
    address: string | null
    account_number: string | null
    nik: string | null
    ktp_url: string | null
    kk_url: string | null
    photo: string | null
    is_verified: boolean | null
    status: $Enums.courier_status | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CourierCountAggregateOutputType = {
    courier_id: number
    name: number
    email: number
    password: number
    phone: number
    date_of_birth: number
    address: number
    account_number: number
    nik: number
    ktp_url: number
    kk_url: number
    photo: number
    is_verified: number
    status: number
    otp_code: number
    otp_expiry: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CourierAvgAggregateInputType = {
    courier_id?: true
  }

  export type CourierSumAggregateInputType = {
    courier_id?: true
  }

  export type CourierMinAggregateInputType = {
    courier_id?: true
    name?: true
    email?: true
    password?: true
    phone?: true
    date_of_birth?: true
    address?: true
    account_number?: true
    nik?: true
    ktp_url?: true
    kk_url?: true
    photo?: true
    is_verified?: true
    status?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
  }

  export type CourierMaxAggregateInputType = {
    courier_id?: true
    name?: true
    email?: true
    password?: true
    phone?: true
    date_of_birth?: true
    address?: true
    account_number?: true
    nik?: true
    ktp_url?: true
    kk_url?: true
    photo?: true
    is_verified?: true
    status?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
  }

  export type CourierCountAggregateInputType = {
    courier_id?: true
    name?: true
    email?: true
    password?: true
    phone?: true
    date_of_birth?: true
    address?: true
    account_number?: true
    nik?: true
    ktp_url?: true
    kk_url?: true
    photo?: true
    is_verified?: true
    status?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CourierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courier to aggregate.
     */
    where?: courierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of couriers to fetch.
     */
    orderBy?: courierOrderByWithRelationInput | courierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: courierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` couriers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` couriers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned couriers
    **/
    _count?: true | CourierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CourierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CourierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CourierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CourierMaxAggregateInputType
  }

  export type GetCourierAggregateType<T extends CourierAggregateArgs> = {
        [P in keyof T & keyof AggregateCourier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourier[P]>
      : GetScalarType<T[P], AggregateCourier[P]>
  }




  export type courierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: courierWhereInput
    orderBy?: courierOrderByWithAggregationInput | courierOrderByWithAggregationInput[]
    by: CourierScalarFieldEnum[] | CourierScalarFieldEnum
    having?: courierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CourierCountAggregateInputType | true
    _avg?: CourierAvgAggregateInputType
    _sum?: CourierSumAggregateInputType
    _min?: CourierMinAggregateInputType
    _max?: CourierMaxAggregateInputType
  }

  export type CourierGroupByOutputType = {
    courier_id: number
    name: string
    email: string
    password: string | null
    phone: string | null
    date_of_birth: Date | null
    address: string | null
    account_number: string | null
    nik: string | null
    ktp_url: string | null
    kk_url: string | null
    photo: string | null
    is_verified: boolean | null
    status: $Enums.courier_status | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: CourierCountAggregateOutputType | null
    _avg: CourierAvgAggregateOutputType | null
    _sum: CourierSumAggregateOutputType | null
    _min: CourierMinAggregateOutputType | null
    _max: CourierMaxAggregateOutputType | null
  }

  type GetCourierGroupByPayload<T extends courierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CourierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CourierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CourierGroupByOutputType[P]>
            : GetScalarType<T[P], CourierGroupByOutputType[P]>
        }
      >
    >


  export type courierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    courier_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    date_of_birth?: boolean
    address?: boolean
    account_number?: boolean
    nik?: boolean
    ktp_url?: boolean
    kk_url?: boolean
    photo?: boolean
    is_verified?: boolean
    status?: boolean
    otp_code?: boolean
    otp_expiry?: boolean
    created_at?: boolean
    updated_at?: boolean
    courier_points?: boolean | courier$courier_pointsArgs<ExtArgs>
    pickup_waste?: boolean | courier$pickup_wasteArgs<ExtArgs>
    _count?: boolean | CourierCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["courier"]>


  export type courierSelectScalar = {
    courier_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    phone?: boolean
    date_of_birth?: boolean
    address?: boolean
    account_number?: boolean
    nik?: boolean
    ktp_url?: boolean
    kk_url?: boolean
    photo?: boolean
    is_verified?: boolean
    status?: boolean
    otp_code?: boolean
    otp_expiry?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type courierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courier_points?: boolean | courier$courier_pointsArgs<ExtArgs>
    pickup_waste?: boolean | courier$pickup_wasteArgs<ExtArgs>
    _count?: boolean | CourierCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $courierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "courier"
    objects: {
      courier_points: Prisma.$courier_pointsPayload<ExtArgs>[]
      pickup_waste: Prisma.$pickup_wastePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      courier_id: number
      name: string
      email: string
      password: string | null
      phone: string | null
      date_of_birth: Date | null
      address: string | null
      account_number: string | null
      nik: string | null
      ktp_url: string | null
      kk_url: string | null
      photo: string | null
      is_verified: boolean | null
      status: $Enums.courier_status | null
      otp_code: string | null
      otp_expiry: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["courier"]>
    composites: {}
  }

  type courierGetPayload<S extends boolean | null | undefined | courierDefaultArgs> = $Result.GetResult<Prisma.$courierPayload, S>

  type courierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<courierFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CourierCountAggregateInputType | true
    }

  export interface courierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['courier'], meta: { name: 'courier' } }
    /**
     * Find zero or one Courier that matches the filter.
     * @param {courierFindUniqueArgs} args - Arguments to find a Courier
     * @example
     * // Get one Courier
     * const courier = await prisma.courier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends courierFindUniqueArgs>(args: SelectSubset<T, courierFindUniqueArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Courier that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {courierFindUniqueOrThrowArgs} args - Arguments to find a Courier
     * @example
     * // Get one Courier
     * const courier = await prisma.courier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends courierFindUniqueOrThrowArgs>(args: SelectSubset<T, courierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Courier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierFindFirstArgs} args - Arguments to find a Courier
     * @example
     * // Get one Courier
     * const courier = await prisma.courier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends courierFindFirstArgs>(args?: SelectSubset<T, courierFindFirstArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Courier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierFindFirstOrThrowArgs} args - Arguments to find a Courier
     * @example
     * // Get one Courier
     * const courier = await prisma.courier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends courierFindFirstOrThrowArgs>(args?: SelectSubset<T, courierFindFirstOrThrowArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Couriers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Couriers
     * const couriers = await prisma.courier.findMany()
     * 
     * // Get first 10 Couriers
     * const couriers = await prisma.courier.findMany({ take: 10 })
     * 
     * // Only select the `courier_id`
     * const courierWithCourier_idOnly = await prisma.courier.findMany({ select: { courier_id: true } })
     * 
     */
    findMany<T extends courierFindManyArgs>(args?: SelectSubset<T, courierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Courier.
     * @param {courierCreateArgs} args - Arguments to create a Courier.
     * @example
     * // Create one Courier
     * const Courier = await prisma.courier.create({
     *   data: {
     *     // ... data to create a Courier
     *   }
     * })
     * 
     */
    create<T extends courierCreateArgs>(args: SelectSubset<T, courierCreateArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Couriers.
     * @param {courierCreateManyArgs} args - Arguments to create many Couriers.
     * @example
     * // Create many Couriers
     * const courier = await prisma.courier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends courierCreateManyArgs>(args?: SelectSubset<T, courierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Courier.
     * @param {courierDeleteArgs} args - Arguments to delete one Courier.
     * @example
     * // Delete one Courier
     * const Courier = await prisma.courier.delete({
     *   where: {
     *     // ... filter to delete one Courier
     *   }
     * })
     * 
     */
    delete<T extends courierDeleteArgs>(args: SelectSubset<T, courierDeleteArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Courier.
     * @param {courierUpdateArgs} args - Arguments to update one Courier.
     * @example
     * // Update one Courier
     * const courier = await prisma.courier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends courierUpdateArgs>(args: SelectSubset<T, courierUpdateArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Couriers.
     * @param {courierDeleteManyArgs} args - Arguments to filter Couriers to delete.
     * @example
     * // Delete a few Couriers
     * const { count } = await prisma.courier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends courierDeleteManyArgs>(args?: SelectSubset<T, courierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Couriers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Couriers
     * const courier = await prisma.courier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends courierUpdateManyArgs>(args: SelectSubset<T, courierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Courier.
     * @param {courierUpsertArgs} args - Arguments to update or create a Courier.
     * @example
     * // Update or create a Courier
     * const courier = await prisma.courier.upsert({
     *   create: {
     *     // ... data to create a Courier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Courier we want to update
     *   }
     * })
     */
    upsert<T extends courierUpsertArgs>(args: SelectSubset<T, courierUpsertArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Couriers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierCountArgs} args - Arguments to filter Couriers to count.
     * @example
     * // Count the number of Couriers
     * const count = await prisma.courier.count({
     *   where: {
     *     // ... the filter for the Couriers we want to count
     *   }
     * })
    **/
    count<T extends courierCountArgs>(
      args?: Subset<T, courierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CourierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Courier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CourierAggregateArgs>(args: Subset<T, CourierAggregateArgs>): Prisma.PrismaPromise<GetCourierAggregateType<T>>

    /**
     * Group by Courier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends courierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: courierGroupByArgs['orderBy'] }
        : { orderBy?: courierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, courierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the courier model
   */
  readonly fields: courierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for courier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__courierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    courier_points<T extends courier$courier_pointsArgs<ExtArgs> = {}>(args?: Subset<T, courier$courier_pointsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "findMany"> | Null>
    pickup_waste<T extends courier$pickup_wasteArgs<ExtArgs> = {}>(args?: Subset<T, courier$pickup_wasteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the courier model
   */ 
  interface courierFieldRefs {
    readonly courier_id: FieldRef<"courier", 'Int'>
    readonly name: FieldRef<"courier", 'String'>
    readonly email: FieldRef<"courier", 'String'>
    readonly password: FieldRef<"courier", 'String'>
    readonly phone: FieldRef<"courier", 'String'>
    readonly date_of_birth: FieldRef<"courier", 'DateTime'>
    readonly address: FieldRef<"courier", 'String'>
    readonly account_number: FieldRef<"courier", 'String'>
    readonly nik: FieldRef<"courier", 'String'>
    readonly ktp_url: FieldRef<"courier", 'String'>
    readonly kk_url: FieldRef<"courier", 'String'>
    readonly photo: FieldRef<"courier", 'String'>
    readonly is_verified: FieldRef<"courier", 'Boolean'>
    readonly status: FieldRef<"courier", 'courier_status'>
    readonly otp_code: FieldRef<"courier", 'String'>
    readonly otp_expiry: FieldRef<"courier", 'DateTime'>
    readonly created_at: FieldRef<"courier", 'DateTime'>
    readonly updated_at: FieldRef<"courier", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * courier findUnique
   */
  export type courierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * Filter, which courier to fetch.
     */
    where: courierWhereUniqueInput
  }

  /**
   * courier findUniqueOrThrow
   */
  export type courierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * Filter, which courier to fetch.
     */
    where: courierWhereUniqueInput
  }

  /**
   * courier findFirst
   */
  export type courierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * Filter, which courier to fetch.
     */
    where?: courierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of couriers to fetch.
     */
    orderBy?: courierOrderByWithRelationInput | courierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for couriers.
     */
    cursor?: courierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` couriers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` couriers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of couriers.
     */
    distinct?: CourierScalarFieldEnum | CourierScalarFieldEnum[]
  }

  /**
   * courier findFirstOrThrow
   */
  export type courierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * Filter, which courier to fetch.
     */
    where?: courierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of couriers to fetch.
     */
    orderBy?: courierOrderByWithRelationInput | courierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for couriers.
     */
    cursor?: courierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` couriers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` couriers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of couriers.
     */
    distinct?: CourierScalarFieldEnum | CourierScalarFieldEnum[]
  }

  /**
   * courier findMany
   */
  export type courierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * Filter, which couriers to fetch.
     */
    where?: courierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of couriers to fetch.
     */
    orderBy?: courierOrderByWithRelationInput | courierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing couriers.
     */
    cursor?: courierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` couriers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` couriers.
     */
    skip?: number
    distinct?: CourierScalarFieldEnum | CourierScalarFieldEnum[]
  }

  /**
   * courier create
   */
  export type courierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * The data needed to create a courier.
     */
    data: XOR<courierCreateInput, courierUncheckedCreateInput>
  }

  /**
   * courier createMany
   */
  export type courierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many couriers.
     */
    data: courierCreateManyInput | courierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * courier update
   */
  export type courierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * The data needed to update a courier.
     */
    data: XOR<courierUpdateInput, courierUncheckedUpdateInput>
    /**
     * Choose, which courier to update.
     */
    where: courierWhereUniqueInput
  }

  /**
   * courier updateMany
   */
  export type courierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update couriers.
     */
    data: XOR<courierUpdateManyMutationInput, courierUncheckedUpdateManyInput>
    /**
     * Filter which couriers to update
     */
    where?: courierWhereInput
  }

  /**
   * courier upsert
   */
  export type courierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * The filter to search for the courier to update in case it exists.
     */
    where: courierWhereUniqueInput
    /**
     * In case the courier found by the `where` argument doesn't exist, create a new courier with this data.
     */
    create: XOR<courierCreateInput, courierUncheckedCreateInput>
    /**
     * In case the courier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<courierUpdateInput, courierUncheckedUpdateInput>
  }

  /**
   * courier delete
   */
  export type courierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    /**
     * Filter which courier to delete.
     */
    where: courierWhereUniqueInput
  }

  /**
   * courier deleteMany
   */
  export type courierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which couriers to delete
     */
    where?: courierWhereInput
  }

  /**
   * courier.courier_points
   */
  export type courier$courier_pointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    where?: courier_pointsWhereInput
    orderBy?: courier_pointsOrderByWithRelationInput | courier_pointsOrderByWithRelationInput[]
    cursor?: courier_pointsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Courier_pointsScalarFieldEnum | Courier_pointsScalarFieldEnum[]
  }

  /**
   * courier.pickup_waste
   */
  export type courier$pickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    where?: pickup_wasteWhereInput
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    cursor?: pickup_wasteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * courier without action
   */
  export type courierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
  }


  /**
   * Model courier_points
   */

  export type AggregateCourier_points = {
    _count: Courier_pointsCountAggregateOutputType | null
    _avg: Courier_pointsAvgAggregateOutputType | null
    _sum: Courier_pointsSumAggregateOutputType | null
    _min: Courier_pointsMinAggregateOutputType | null
    _max: Courier_pointsMaxAggregateOutputType | null
  }

  export type Courier_pointsAvgAggregateOutputType = {
    points_id: number | null
    courier_id: number | null
    total_points: number | null
  }

  export type Courier_pointsSumAggregateOutputType = {
    points_id: number | null
    courier_id: number | null
    total_points: number | null
  }

  export type Courier_pointsMinAggregateOutputType = {
    points_id: number | null
    courier_id: number | null
    total_points: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Courier_pointsMaxAggregateOutputType = {
    points_id: number | null
    courier_id: number | null
    total_points: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Courier_pointsCountAggregateOutputType = {
    points_id: number
    courier_id: number
    total_points: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Courier_pointsAvgAggregateInputType = {
    points_id?: true
    courier_id?: true
    total_points?: true
  }

  export type Courier_pointsSumAggregateInputType = {
    points_id?: true
    courier_id?: true
    total_points?: true
  }

  export type Courier_pointsMinAggregateInputType = {
    points_id?: true
    courier_id?: true
    total_points?: true
    created_at?: true
    updated_at?: true
  }

  export type Courier_pointsMaxAggregateInputType = {
    points_id?: true
    courier_id?: true
    total_points?: true
    created_at?: true
    updated_at?: true
  }

  export type Courier_pointsCountAggregateInputType = {
    points_id?: true
    courier_id?: true
    total_points?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Courier_pointsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courier_points to aggregate.
     */
    where?: courier_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courier_points to fetch.
     */
    orderBy?: courier_pointsOrderByWithRelationInput | courier_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: courier_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courier_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courier_points.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned courier_points
    **/
    _count?: true | Courier_pointsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Courier_pointsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Courier_pointsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Courier_pointsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Courier_pointsMaxAggregateInputType
  }

  export type GetCourier_pointsAggregateType<T extends Courier_pointsAggregateArgs> = {
        [P in keyof T & keyof AggregateCourier_points]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourier_points[P]>
      : GetScalarType<T[P], AggregateCourier_points[P]>
  }




  export type courier_pointsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: courier_pointsWhereInput
    orderBy?: courier_pointsOrderByWithAggregationInput | courier_pointsOrderByWithAggregationInput[]
    by: Courier_pointsScalarFieldEnum[] | Courier_pointsScalarFieldEnum
    having?: courier_pointsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Courier_pointsCountAggregateInputType | true
    _avg?: Courier_pointsAvgAggregateInputType
    _sum?: Courier_pointsSumAggregateInputType
    _min?: Courier_pointsMinAggregateInputType
    _max?: Courier_pointsMaxAggregateInputType
  }

  export type Courier_pointsGroupByOutputType = {
    points_id: number
    courier_id: number | null
    total_points: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Courier_pointsCountAggregateOutputType | null
    _avg: Courier_pointsAvgAggregateOutputType | null
    _sum: Courier_pointsSumAggregateOutputType | null
    _min: Courier_pointsMinAggregateOutputType | null
    _max: Courier_pointsMaxAggregateOutputType | null
  }

  type GetCourier_pointsGroupByPayload<T extends courier_pointsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Courier_pointsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Courier_pointsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Courier_pointsGroupByOutputType[P]>
            : GetScalarType<T[P], Courier_pointsGroupByOutputType[P]>
        }
      >
    >


  export type courier_pointsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    points_id?: boolean
    courier_id?: boolean
    total_points?: boolean
    created_at?: boolean
    updated_at?: boolean
    courier?: boolean | courier_points$courierArgs<ExtArgs>
  }, ExtArgs["result"]["courier_points"]>


  export type courier_pointsSelectScalar = {
    points_id?: boolean
    courier_id?: boolean
    total_points?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type courier_pointsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    courier?: boolean | courier_points$courierArgs<ExtArgs>
  }

  export type $courier_pointsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "courier_points"
    objects: {
      courier: Prisma.$courierPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      points_id: number
      courier_id: number | null
      total_points: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["courier_points"]>
    composites: {}
  }

  type courier_pointsGetPayload<S extends boolean | null | undefined | courier_pointsDefaultArgs> = $Result.GetResult<Prisma.$courier_pointsPayload, S>

  type courier_pointsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<courier_pointsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Courier_pointsCountAggregateInputType | true
    }

  export interface courier_pointsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['courier_points'], meta: { name: 'courier_points' } }
    /**
     * Find zero or one Courier_points that matches the filter.
     * @param {courier_pointsFindUniqueArgs} args - Arguments to find a Courier_points
     * @example
     * // Get one Courier_points
     * const courier_points = await prisma.courier_points.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends courier_pointsFindUniqueArgs>(args: SelectSubset<T, courier_pointsFindUniqueArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Courier_points that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {courier_pointsFindUniqueOrThrowArgs} args - Arguments to find a Courier_points
     * @example
     * // Get one Courier_points
     * const courier_points = await prisma.courier_points.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends courier_pointsFindUniqueOrThrowArgs>(args: SelectSubset<T, courier_pointsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Courier_points that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courier_pointsFindFirstArgs} args - Arguments to find a Courier_points
     * @example
     * // Get one Courier_points
     * const courier_points = await prisma.courier_points.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends courier_pointsFindFirstArgs>(args?: SelectSubset<T, courier_pointsFindFirstArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Courier_points that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courier_pointsFindFirstOrThrowArgs} args - Arguments to find a Courier_points
     * @example
     * // Get one Courier_points
     * const courier_points = await prisma.courier_points.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends courier_pointsFindFirstOrThrowArgs>(args?: SelectSubset<T, courier_pointsFindFirstOrThrowArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Courier_points that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courier_pointsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Courier_points
     * const courier_points = await prisma.courier_points.findMany()
     * 
     * // Get first 10 Courier_points
     * const courier_points = await prisma.courier_points.findMany({ take: 10 })
     * 
     * // Only select the `points_id`
     * const courier_pointsWithPoints_idOnly = await prisma.courier_points.findMany({ select: { points_id: true } })
     * 
     */
    findMany<T extends courier_pointsFindManyArgs>(args?: SelectSubset<T, courier_pointsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Courier_points.
     * @param {courier_pointsCreateArgs} args - Arguments to create a Courier_points.
     * @example
     * // Create one Courier_points
     * const Courier_points = await prisma.courier_points.create({
     *   data: {
     *     // ... data to create a Courier_points
     *   }
     * })
     * 
     */
    create<T extends courier_pointsCreateArgs>(args: SelectSubset<T, courier_pointsCreateArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Courier_points.
     * @param {courier_pointsCreateManyArgs} args - Arguments to create many Courier_points.
     * @example
     * // Create many Courier_points
     * const courier_points = await prisma.courier_points.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends courier_pointsCreateManyArgs>(args?: SelectSubset<T, courier_pointsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Courier_points.
     * @param {courier_pointsDeleteArgs} args - Arguments to delete one Courier_points.
     * @example
     * // Delete one Courier_points
     * const Courier_points = await prisma.courier_points.delete({
     *   where: {
     *     // ... filter to delete one Courier_points
     *   }
     * })
     * 
     */
    delete<T extends courier_pointsDeleteArgs>(args: SelectSubset<T, courier_pointsDeleteArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Courier_points.
     * @param {courier_pointsUpdateArgs} args - Arguments to update one Courier_points.
     * @example
     * // Update one Courier_points
     * const courier_points = await prisma.courier_points.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends courier_pointsUpdateArgs>(args: SelectSubset<T, courier_pointsUpdateArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Courier_points.
     * @param {courier_pointsDeleteManyArgs} args - Arguments to filter Courier_points to delete.
     * @example
     * // Delete a few Courier_points
     * const { count } = await prisma.courier_points.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends courier_pointsDeleteManyArgs>(args?: SelectSubset<T, courier_pointsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courier_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courier_pointsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Courier_points
     * const courier_points = await prisma.courier_points.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends courier_pointsUpdateManyArgs>(args: SelectSubset<T, courier_pointsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Courier_points.
     * @param {courier_pointsUpsertArgs} args - Arguments to update or create a Courier_points.
     * @example
     * // Update or create a Courier_points
     * const courier_points = await prisma.courier_points.upsert({
     *   create: {
     *     // ... data to create a Courier_points
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Courier_points we want to update
     *   }
     * })
     */
    upsert<T extends courier_pointsUpsertArgs>(args: SelectSubset<T, courier_pointsUpsertArgs<ExtArgs>>): Prisma__courier_pointsClient<$Result.GetResult<Prisma.$courier_pointsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Courier_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courier_pointsCountArgs} args - Arguments to filter Courier_points to count.
     * @example
     * // Count the number of Courier_points
     * const count = await prisma.courier_points.count({
     *   where: {
     *     // ... the filter for the Courier_points we want to count
     *   }
     * })
    **/
    count<T extends courier_pointsCountArgs>(
      args?: Subset<T, courier_pointsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Courier_pointsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Courier_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Courier_pointsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Courier_pointsAggregateArgs>(args: Subset<T, Courier_pointsAggregateArgs>): Prisma.PrismaPromise<GetCourier_pointsAggregateType<T>>

    /**
     * Group by Courier_points.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {courier_pointsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends courier_pointsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: courier_pointsGroupByArgs['orderBy'] }
        : { orderBy?: courier_pointsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, courier_pointsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourier_pointsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the courier_points model
   */
  readonly fields: courier_pointsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for courier_points.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__courier_pointsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    courier<T extends courier_points$courierArgs<ExtArgs> = {}>(args?: Subset<T, courier_points$courierArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the courier_points model
   */ 
  interface courier_pointsFieldRefs {
    readonly points_id: FieldRef<"courier_points", 'Int'>
    readonly courier_id: FieldRef<"courier_points", 'Int'>
    readonly total_points: FieldRef<"courier_points", 'Int'>
    readonly created_at: FieldRef<"courier_points", 'DateTime'>
    readonly updated_at: FieldRef<"courier_points", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * courier_points findUnique
   */
  export type courier_pointsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * Filter, which courier_points to fetch.
     */
    where: courier_pointsWhereUniqueInput
  }

  /**
   * courier_points findUniqueOrThrow
   */
  export type courier_pointsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * Filter, which courier_points to fetch.
     */
    where: courier_pointsWhereUniqueInput
  }

  /**
   * courier_points findFirst
   */
  export type courier_pointsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * Filter, which courier_points to fetch.
     */
    where?: courier_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courier_points to fetch.
     */
    orderBy?: courier_pointsOrderByWithRelationInput | courier_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courier_points.
     */
    cursor?: courier_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courier_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courier_points.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courier_points.
     */
    distinct?: Courier_pointsScalarFieldEnum | Courier_pointsScalarFieldEnum[]
  }

  /**
   * courier_points findFirstOrThrow
   */
  export type courier_pointsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * Filter, which courier_points to fetch.
     */
    where?: courier_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courier_points to fetch.
     */
    orderBy?: courier_pointsOrderByWithRelationInput | courier_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courier_points.
     */
    cursor?: courier_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courier_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courier_points.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courier_points.
     */
    distinct?: Courier_pointsScalarFieldEnum | Courier_pointsScalarFieldEnum[]
  }

  /**
   * courier_points findMany
   */
  export type courier_pointsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * Filter, which courier_points to fetch.
     */
    where?: courier_pointsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courier_points to fetch.
     */
    orderBy?: courier_pointsOrderByWithRelationInput | courier_pointsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing courier_points.
     */
    cursor?: courier_pointsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courier_points from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courier_points.
     */
    skip?: number
    distinct?: Courier_pointsScalarFieldEnum | Courier_pointsScalarFieldEnum[]
  }

  /**
   * courier_points create
   */
  export type courier_pointsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * The data needed to create a courier_points.
     */
    data?: XOR<courier_pointsCreateInput, courier_pointsUncheckedCreateInput>
  }

  /**
   * courier_points createMany
   */
  export type courier_pointsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many courier_points.
     */
    data: courier_pointsCreateManyInput | courier_pointsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * courier_points update
   */
  export type courier_pointsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * The data needed to update a courier_points.
     */
    data: XOR<courier_pointsUpdateInput, courier_pointsUncheckedUpdateInput>
    /**
     * Choose, which courier_points to update.
     */
    where: courier_pointsWhereUniqueInput
  }

  /**
   * courier_points updateMany
   */
  export type courier_pointsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update courier_points.
     */
    data: XOR<courier_pointsUpdateManyMutationInput, courier_pointsUncheckedUpdateManyInput>
    /**
     * Filter which courier_points to update
     */
    where?: courier_pointsWhereInput
  }

  /**
   * courier_points upsert
   */
  export type courier_pointsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * The filter to search for the courier_points to update in case it exists.
     */
    where: courier_pointsWhereUniqueInput
    /**
     * In case the courier_points found by the `where` argument doesn't exist, create a new courier_points with this data.
     */
    create: XOR<courier_pointsCreateInput, courier_pointsUncheckedCreateInput>
    /**
     * In case the courier_points was found with the provided `where` argument, update it with this data.
     */
    update: XOR<courier_pointsUpdateInput, courier_pointsUncheckedUpdateInput>
  }

  /**
   * courier_points delete
   */
  export type courier_pointsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
    /**
     * Filter which courier_points to delete.
     */
    where: courier_pointsWhereUniqueInput
  }

  /**
   * courier_points deleteMany
   */
  export type courier_pointsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courier_points to delete
     */
    where?: courier_pointsWhereInput
  }

  /**
   * courier_points.courier
   */
  export type courier_points$courierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    where?: courierWhereInput
  }

  /**
   * courier_points without action
   */
  export type courier_pointsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier_points
     */
    select?: courier_pointsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courier_pointsInclude<ExtArgs> | null
  }


  /**
   * Model dropbox
   */

  export type AggregateDropbox = {
    _count: DropboxCountAggregateOutputType | null
    _avg: DropboxAvgAggregateOutputType | null
    _sum: DropboxSumAggregateOutputType | null
    _min: DropboxMinAggregateOutputType | null
    _max: DropboxMaxAggregateOutputType | null
  }

  export type DropboxAvgAggregateOutputType = {
    dropbox_id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
    capacity: number | null
  }

  export type DropboxSumAggregateOutputType = {
    dropbox_id: number | null
    longitude: Decimal | null
    latitude: Decimal | null
    capacity: number | null
  }

  export type DropboxMinAggregateOutputType = {
    dropbox_id: number | null
    name: string | null
    address: string | null
    district_address: $Enums.dropbox_district_address | null
    longitude: Decimal | null
    latitude: Decimal | null
    capacity: number | null
    status: $Enums.dropbox_status | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DropboxMaxAggregateOutputType = {
    dropbox_id: number | null
    name: string | null
    address: string | null
    district_address: $Enums.dropbox_district_address | null
    longitude: Decimal | null
    latitude: Decimal | null
    capacity: number | null
    status: $Enums.dropbox_status | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DropboxCountAggregateOutputType = {
    dropbox_id: number
    name: number
    address: number
    district_address: number
    longitude: number
    latitude: number
    capacity: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DropboxAvgAggregateInputType = {
    dropbox_id?: true
    longitude?: true
    latitude?: true
    capacity?: true
  }

  export type DropboxSumAggregateInputType = {
    dropbox_id?: true
    longitude?: true
    latitude?: true
    capacity?: true
  }

  export type DropboxMinAggregateInputType = {
    dropbox_id?: true
    name?: true
    address?: true
    district_address?: true
    longitude?: true
    latitude?: true
    capacity?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type DropboxMaxAggregateInputType = {
    dropbox_id?: true
    name?: true
    address?: true
    district_address?: true
    longitude?: true
    latitude?: true
    capacity?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type DropboxCountAggregateInputType = {
    dropbox_id?: true
    name?: true
    address?: true
    district_address?: true
    longitude?: true
    latitude?: true
    capacity?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DropboxAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dropbox to aggregate.
     */
    where?: dropboxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dropboxes to fetch.
     */
    orderBy?: dropboxOrderByWithRelationInput | dropboxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: dropboxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dropboxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dropboxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned dropboxes
    **/
    _count?: true | DropboxCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DropboxAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DropboxSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DropboxMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DropboxMaxAggregateInputType
  }

  export type GetDropboxAggregateType<T extends DropboxAggregateArgs> = {
        [P in keyof T & keyof AggregateDropbox]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDropbox[P]>
      : GetScalarType<T[P], AggregateDropbox[P]>
  }




  export type dropboxGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dropboxWhereInput
    orderBy?: dropboxOrderByWithAggregationInput | dropboxOrderByWithAggregationInput[]
    by: DropboxScalarFieldEnum[] | DropboxScalarFieldEnum
    having?: dropboxScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DropboxCountAggregateInputType | true
    _avg?: DropboxAvgAggregateInputType
    _sum?: DropboxSumAggregateInputType
    _min?: DropboxMinAggregateInputType
    _max?: DropboxMaxAggregateInputType
  }

  export type DropboxGroupByOutputType = {
    dropbox_id: number
    name: string
    address: string
    district_address: $Enums.dropbox_district_address | null
    longitude: Decimal | null
    latitude: Decimal | null
    capacity: number | null
    status: $Enums.dropbox_status | null
    created_at: Date | null
    updated_at: Date | null
    _count: DropboxCountAggregateOutputType | null
    _avg: DropboxAvgAggregateOutputType | null
    _sum: DropboxSumAggregateOutputType | null
    _min: DropboxMinAggregateOutputType | null
    _max: DropboxMaxAggregateOutputType | null
  }

  type GetDropboxGroupByPayload<T extends dropboxGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DropboxGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DropboxGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DropboxGroupByOutputType[P]>
            : GetScalarType<T[P], DropboxGroupByOutputType[P]>
        }
      >
    >


  export type dropboxSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    dropbox_id?: boolean
    name?: boolean
    address?: boolean
    district_address?: boolean
    longitude?: boolean
    latitude?: boolean
    capacity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    pickup_waste?: boolean | dropbox$pickup_wasteArgs<ExtArgs>
    _count?: boolean | DropboxCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dropbox"]>


  export type dropboxSelectScalar = {
    dropbox_id?: boolean
    name?: boolean
    address?: boolean
    district_address?: boolean
    longitude?: boolean
    latitude?: boolean
    capacity?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type dropboxInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pickup_waste?: boolean | dropbox$pickup_wasteArgs<ExtArgs>
    _count?: boolean | DropboxCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $dropboxPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dropbox"
    objects: {
      pickup_waste: Prisma.$pickup_wastePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      dropbox_id: number
      name: string
      address: string
      district_address: $Enums.dropbox_district_address | null
      longitude: Prisma.Decimal | null
      latitude: Prisma.Decimal | null
      capacity: number | null
      status: $Enums.dropbox_status | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["dropbox"]>
    composites: {}
  }

  type dropboxGetPayload<S extends boolean | null | undefined | dropboxDefaultArgs> = $Result.GetResult<Prisma.$dropboxPayload, S>

  type dropboxCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<dropboxFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DropboxCountAggregateInputType | true
    }

  export interface dropboxDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dropbox'], meta: { name: 'dropbox' } }
    /**
     * Find zero or one Dropbox that matches the filter.
     * @param {dropboxFindUniqueArgs} args - Arguments to find a Dropbox
     * @example
     * // Get one Dropbox
     * const dropbox = await prisma.dropbox.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends dropboxFindUniqueArgs>(args: SelectSubset<T, dropboxFindUniqueArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Dropbox that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {dropboxFindUniqueOrThrowArgs} args - Arguments to find a Dropbox
     * @example
     * // Get one Dropbox
     * const dropbox = await prisma.dropbox.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends dropboxFindUniqueOrThrowArgs>(args: SelectSubset<T, dropboxFindUniqueOrThrowArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Dropbox that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dropboxFindFirstArgs} args - Arguments to find a Dropbox
     * @example
     * // Get one Dropbox
     * const dropbox = await prisma.dropbox.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends dropboxFindFirstArgs>(args?: SelectSubset<T, dropboxFindFirstArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Dropbox that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dropboxFindFirstOrThrowArgs} args - Arguments to find a Dropbox
     * @example
     * // Get one Dropbox
     * const dropbox = await prisma.dropbox.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends dropboxFindFirstOrThrowArgs>(args?: SelectSubset<T, dropboxFindFirstOrThrowArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Dropboxes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dropboxFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dropboxes
     * const dropboxes = await prisma.dropbox.findMany()
     * 
     * // Get first 10 Dropboxes
     * const dropboxes = await prisma.dropbox.findMany({ take: 10 })
     * 
     * // Only select the `dropbox_id`
     * const dropboxWithDropbox_idOnly = await prisma.dropbox.findMany({ select: { dropbox_id: true } })
     * 
     */
    findMany<T extends dropboxFindManyArgs>(args?: SelectSubset<T, dropboxFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Dropbox.
     * @param {dropboxCreateArgs} args - Arguments to create a Dropbox.
     * @example
     * // Create one Dropbox
     * const Dropbox = await prisma.dropbox.create({
     *   data: {
     *     // ... data to create a Dropbox
     *   }
     * })
     * 
     */
    create<T extends dropboxCreateArgs>(args: SelectSubset<T, dropboxCreateArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Dropboxes.
     * @param {dropboxCreateManyArgs} args - Arguments to create many Dropboxes.
     * @example
     * // Create many Dropboxes
     * const dropbox = await prisma.dropbox.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends dropboxCreateManyArgs>(args?: SelectSubset<T, dropboxCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Dropbox.
     * @param {dropboxDeleteArgs} args - Arguments to delete one Dropbox.
     * @example
     * // Delete one Dropbox
     * const Dropbox = await prisma.dropbox.delete({
     *   where: {
     *     // ... filter to delete one Dropbox
     *   }
     * })
     * 
     */
    delete<T extends dropboxDeleteArgs>(args: SelectSubset<T, dropboxDeleteArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Dropbox.
     * @param {dropboxUpdateArgs} args - Arguments to update one Dropbox.
     * @example
     * // Update one Dropbox
     * const dropbox = await prisma.dropbox.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends dropboxUpdateArgs>(args: SelectSubset<T, dropboxUpdateArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Dropboxes.
     * @param {dropboxDeleteManyArgs} args - Arguments to filter Dropboxes to delete.
     * @example
     * // Delete a few Dropboxes
     * const { count } = await prisma.dropbox.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends dropboxDeleteManyArgs>(args?: SelectSubset<T, dropboxDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dropboxes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dropboxUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dropboxes
     * const dropbox = await prisma.dropbox.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends dropboxUpdateManyArgs>(args: SelectSubset<T, dropboxUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Dropbox.
     * @param {dropboxUpsertArgs} args - Arguments to update or create a Dropbox.
     * @example
     * // Update or create a Dropbox
     * const dropbox = await prisma.dropbox.upsert({
     *   create: {
     *     // ... data to create a Dropbox
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dropbox we want to update
     *   }
     * })
     */
    upsert<T extends dropboxUpsertArgs>(args: SelectSubset<T, dropboxUpsertArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Dropboxes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dropboxCountArgs} args - Arguments to filter Dropboxes to count.
     * @example
     * // Count the number of Dropboxes
     * const count = await prisma.dropbox.count({
     *   where: {
     *     // ... the filter for the Dropboxes we want to count
     *   }
     * })
    **/
    count<T extends dropboxCountArgs>(
      args?: Subset<T, dropboxCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DropboxCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dropbox.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DropboxAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DropboxAggregateArgs>(args: Subset<T, DropboxAggregateArgs>): Prisma.PrismaPromise<GetDropboxAggregateType<T>>

    /**
     * Group by Dropbox.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dropboxGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends dropboxGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: dropboxGroupByArgs['orderBy'] }
        : { orderBy?: dropboxGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, dropboxGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDropboxGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dropbox model
   */
  readonly fields: dropboxFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dropbox.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__dropboxClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pickup_waste<T extends dropbox$pickup_wasteArgs<ExtArgs> = {}>(args?: Subset<T, dropbox$pickup_wasteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the dropbox model
   */ 
  interface dropboxFieldRefs {
    readonly dropbox_id: FieldRef<"dropbox", 'Int'>
    readonly name: FieldRef<"dropbox", 'String'>
    readonly address: FieldRef<"dropbox", 'String'>
    readonly district_address: FieldRef<"dropbox", 'dropbox_district_address'>
    readonly longitude: FieldRef<"dropbox", 'Decimal'>
    readonly latitude: FieldRef<"dropbox", 'Decimal'>
    readonly capacity: FieldRef<"dropbox", 'Int'>
    readonly status: FieldRef<"dropbox", 'dropbox_status'>
    readonly created_at: FieldRef<"dropbox", 'DateTime'>
    readonly updated_at: FieldRef<"dropbox", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * dropbox findUnique
   */
  export type dropboxFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * Filter, which dropbox to fetch.
     */
    where: dropboxWhereUniqueInput
  }

  /**
   * dropbox findUniqueOrThrow
   */
  export type dropboxFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * Filter, which dropbox to fetch.
     */
    where: dropboxWhereUniqueInput
  }

  /**
   * dropbox findFirst
   */
  export type dropboxFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * Filter, which dropbox to fetch.
     */
    where?: dropboxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dropboxes to fetch.
     */
    orderBy?: dropboxOrderByWithRelationInput | dropboxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dropboxes.
     */
    cursor?: dropboxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dropboxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dropboxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dropboxes.
     */
    distinct?: DropboxScalarFieldEnum | DropboxScalarFieldEnum[]
  }

  /**
   * dropbox findFirstOrThrow
   */
  export type dropboxFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * Filter, which dropbox to fetch.
     */
    where?: dropboxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dropboxes to fetch.
     */
    orderBy?: dropboxOrderByWithRelationInput | dropboxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dropboxes.
     */
    cursor?: dropboxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dropboxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dropboxes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dropboxes.
     */
    distinct?: DropboxScalarFieldEnum | DropboxScalarFieldEnum[]
  }

  /**
   * dropbox findMany
   */
  export type dropboxFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * Filter, which dropboxes to fetch.
     */
    where?: dropboxWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dropboxes to fetch.
     */
    orderBy?: dropboxOrderByWithRelationInput | dropboxOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing dropboxes.
     */
    cursor?: dropboxWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dropboxes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dropboxes.
     */
    skip?: number
    distinct?: DropboxScalarFieldEnum | DropboxScalarFieldEnum[]
  }

  /**
   * dropbox create
   */
  export type dropboxCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * The data needed to create a dropbox.
     */
    data: XOR<dropboxCreateInput, dropboxUncheckedCreateInput>
  }

  /**
   * dropbox createMany
   */
  export type dropboxCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many dropboxes.
     */
    data: dropboxCreateManyInput | dropboxCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * dropbox update
   */
  export type dropboxUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * The data needed to update a dropbox.
     */
    data: XOR<dropboxUpdateInput, dropboxUncheckedUpdateInput>
    /**
     * Choose, which dropbox to update.
     */
    where: dropboxWhereUniqueInput
  }

  /**
   * dropbox updateMany
   */
  export type dropboxUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update dropboxes.
     */
    data: XOR<dropboxUpdateManyMutationInput, dropboxUncheckedUpdateManyInput>
    /**
     * Filter which dropboxes to update
     */
    where?: dropboxWhereInput
  }

  /**
   * dropbox upsert
   */
  export type dropboxUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * The filter to search for the dropbox to update in case it exists.
     */
    where: dropboxWhereUniqueInput
    /**
     * In case the dropbox found by the `where` argument doesn't exist, create a new dropbox with this data.
     */
    create: XOR<dropboxCreateInput, dropboxUncheckedCreateInput>
    /**
     * In case the dropbox was found with the provided `where` argument, update it with this data.
     */
    update: XOR<dropboxUpdateInput, dropboxUncheckedUpdateInput>
  }

  /**
   * dropbox delete
   */
  export type dropboxDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    /**
     * Filter which dropbox to delete.
     */
    where: dropboxWhereUniqueInput
  }

  /**
   * dropbox deleteMany
   */
  export type dropboxDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dropboxes to delete
     */
    where?: dropboxWhereInput
  }

  /**
   * dropbox.pickup_waste
   */
  export type dropbox$pickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    where?: pickup_wasteWhereInput
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    cursor?: pickup_wasteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * dropbox without action
   */
  export type dropboxDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
  }


  /**
   * Model management
   */

  export type AggregateManagement = {
    _count: ManagementCountAggregateOutputType | null
    _avg: ManagementAvgAggregateOutputType | null
    _sum: ManagementSumAggregateOutputType | null
    _min: ManagementMinAggregateOutputType | null
    _max: ManagementMaxAggregateOutputType | null
  }

  export type ManagementAvgAggregateOutputType = {
    management_id: number | null
  }

  export type ManagementSumAggregateOutputType = {
    management_id: number | null
  }

  export type ManagementMinAggregateOutputType = {
    management_id: number | null
    name: string | null
    email: string | null
    password: string | null
    date_of_birth: Date | null
    address: string | null
    phone: string | null
    photo: string | null
    is_verified: boolean | null
    is_admin: boolean | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ManagementMaxAggregateOutputType = {
    management_id: number | null
    name: string | null
    email: string | null
    password: string | null
    date_of_birth: Date | null
    address: string | null
    phone: string | null
    photo: string | null
    is_verified: boolean | null
    is_admin: boolean | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ManagementCountAggregateOutputType = {
    management_id: number
    name: number
    email: number
    password: number
    date_of_birth: number
    address: number
    phone: number
    photo: number
    is_verified: number
    is_admin: number
    otp_code: number
    otp_expiry: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ManagementAvgAggregateInputType = {
    management_id?: true
  }

  export type ManagementSumAggregateInputType = {
    management_id?: true
  }

  export type ManagementMinAggregateInputType = {
    management_id?: true
    name?: true
    email?: true
    password?: true
    date_of_birth?: true
    address?: true
    phone?: true
    photo?: true
    is_verified?: true
    is_admin?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
  }

  export type ManagementMaxAggregateInputType = {
    management_id?: true
    name?: true
    email?: true
    password?: true
    date_of_birth?: true
    address?: true
    phone?: true
    photo?: true
    is_verified?: true
    is_admin?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
  }

  export type ManagementCountAggregateInputType = {
    management_id?: true
    name?: true
    email?: true
    password?: true
    date_of_birth?: true
    address?: true
    phone?: true
    photo?: true
    is_verified?: true
    is_admin?: true
    otp_code?: true
    otp_expiry?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ManagementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which management to aggregate.
     */
    where?: managementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of managements to fetch.
     */
    orderBy?: managementOrderByWithRelationInput | managementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: managementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` managements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned managements
    **/
    _count?: true | ManagementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ManagementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ManagementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ManagementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ManagementMaxAggregateInputType
  }

  export type GetManagementAggregateType<T extends ManagementAggregateArgs> = {
        [P in keyof T & keyof AggregateManagement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateManagement[P]>
      : GetScalarType<T[P], AggregateManagement[P]>
  }




  export type managementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: managementWhereInput
    orderBy?: managementOrderByWithAggregationInput | managementOrderByWithAggregationInput[]
    by: ManagementScalarFieldEnum[] | ManagementScalarFieldEnum
    having?: managementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ManagementCountAggregateInputType | true
    _avg?: ManagementAvgAggregateInputType
    _sum?: ManagementSumAggregateInputType
    _min?: ManagementMinAggregateInputType
    _max?: ManagementMaxAggregateInputType
  }

  export type ManagementGroupByOutputType = {
    management_id: number
    name: string
    email: string
    password: string | null
    date_of_birth: Date | null
    address: string | null
    phone: string | null
    photo: string | null
    is_verified: boolean | null
    is_admin: boolean | null
    otp_code: string | null
    otp_expiry: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: ManagementCountAggregateOutputType | null
    _avg: ManagementAvgAggregateOutputType | null
    _sum: ManagementSumAggregateOutputType | null
    _min: ManagementMinAggregateOutputType | null
    _max: ManagementMaxAggregateOutputType | null
  }

  type GetManagementGroupByPayload<T extends managementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ManagementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ManagementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ManagementGroupByOutputType[P]>
            : GetScalarType<T[P], ManagementGroupByOutputType[P]>
        }
      >
    >


  export type managementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    management_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    date_of_birth?: boolean
    address?: boolean
    phone?: boolean
    photo?: boolean
    is_verified?: boolean
    is_admin?: boolean
    otp_code?: boolean
    otp_expiry?: boolean
    created_at?: boolean
    updated_at?: boolean
    pickup_waste?: boolean | management$pickup_wasteArgs<ExtArgs>
    _count?: boolean | ManagementCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["management"]>


  export type managementSelectScalar = {
    management_id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    date_of_birth?: boolean
    address?: boolean
    phone?: boolean
    photo?: boolean
    is_verified?: boolean
    is_admin?: boolean
    otp_code?: boolean
    otp_expiry?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type managementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pickup_waste?: boolean | management$pickup_wasteArgs<ExtArgs>
    _count?: boolean | ManagementCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $managementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "management"
    objects: {
      pickup_waste: Prisma.$pickup_wastePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      management_id: number
      name: string
      email: string
      password: string | null
      date_of_birth: Date | null
      address: string | null
      phone: string | null
      photo: string | null
      is_verified: boolean | null
      is_admin: boolean | null
      otp_code: string | null
      otp_expiry: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["management"]>
    composites: {}
  }

  type managementGetPayload<S extends boolean | null | undefined | managementDefaultArgs> = $Result.GetResult<Prisma.$managementPayload, S>

  type managementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<managementFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ManagementCountAggregateInputType | true
    }

  export interface managementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['management'], meta: { name: 'management' } }
    /**
     * Find zero or one Management that matches the filter.
     * @param {managementFindUniqueArgs} args - Arguments to find a Management
     * @example
     * // Get one Management
     * const management = await prisma.management.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends managementFindUniqueArgs>(args: SelectSubset<T, managementFindUniqueArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Management that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {managementFindUniqueOrThrowArgs} args - Arguments to find a Management
     * @example
     * // Get one Management
     * const management = await prisma.management.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends managementFindUniqueOrThrowArgs>(args: SelectSubset<T, managementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Management that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {managementFindFirstArgs} args - Arguments to find a Management
     * @example
     * // Get one Management
     * const management = await prisma.management.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends managementFindFirstArgs>(args?: SelectSubset<T, managementFindFirstArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Management that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {managementFindFirstOrThrowArgs} args - Arguments to find a Management
     * @example
     * // Get one Management
     * const management = await prisma.management.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends managementFindFirstOrThrowArgs>(args?: SelectSubset<T, managementFindFirstOrThrowArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Managements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {managementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Managements
     * const managements = await prisma.management.findMany()
     * 
     * // Get first 10 Managements
     * const managements = await prisma.management.findMany({ take: 10 })
     * 
     * // Only select the `management_id`
     * const managementWithManagement_idOnly = await prisma.management.findMany({ select: { management_id: true } })
     * 
     */
    findMany<T extends managementFindManyArgs>(args?: SelectSubset<T, managementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Management.
     * @param {managementCreateArgs} args - Arguments to create a Management.
     * @example
     * // Create one Management
     * const Management = await prisma.management.create({
     *   data: {
     *     // ... data to create a Management
     *   }
     * })
     * 
     */
    create<T extends managementCreateArgs>(args: SelectSubset<T, managementCreateArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Managements.
     * @param {managementCreateManyArgs} args - Arguments to create many Managements.
     * @example
     * // Create many Managements
     * const management = await prisma.management.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends managementCreateManyArgs>(args?: SelectSubset<T, managementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Management.
     * @param {managementDeleteArgs} args - Arguments to delete one Management.
     * @example
     * // Delete one Management
     * const Management = await prisma.management.delete({
     *   where: {
     *     // ... filter to delete one Management
     *   }
     * })
     * 
     */
    delete<T extends managementDeleteArgs>(args: SelectSubset<T, managementDeleteArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Management.
     * @param {managementUpdateArgs} args - Arguments to update one Management.
     * @example
     * // Update one Management
     * const management = await prisma.management.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends managementUpdateArgs>(args: SelectSubset<T, managementUpdateArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Managements.
     * @param {managementDeleteManyArgs} args - Arguments to filter Managements to delete.
     * @example
     * // Delete a few Managements
     * const { count } = await prisma.management.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends managementDeleteManyArgs>(args?: SelectSubset<T, managementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Managements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {managementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Managements
     * const management = await prisma.management.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends managementUpdateManyArgs>(args: SelectSubset<T, managementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Management.
     * @param {managementUpsertArgs} args - Arguments to update or create a Management.
     * @example
     * // Update or create a Management
     * const management = await prisma.management.upsert({
     *   create: {
     *     // ... data to create a Management
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Management we want to update
     *   }
     * })
     */
    upsert<T extends managementUpsertArgs>(args: SelectSubset<T, managementUpsertArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Managements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {managementCountArgs} args - Arguments to filter Managements to count.
     * @example
     * // Count the number of Managements
     * const count = await prisma.management.count({
     *   where: {
     *     // ... the filter for the Managements we want to count
     *   }
     * })
    **/
    count<T extends managementCountArgs>(
      args?: Subset<T, managementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ManagementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Management.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManagementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ManagementAggregateArgs>(args: Subset<T, ManagementAggregateArgs>): Prisma.PrismaPromise<GetManagementAggregateType<T>>

    /**
     * Group by Management.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {managementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends managementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: managementGroupByArgs['orderBy'] }
        : { orderBy?: managementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, managementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManagementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the management model
   */
  readonly fields: managementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for management.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__managementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pickup_waste<T extends management$pickup_wasteArgs<ExtArgs> = {}>(args?: Subset<T, management$pickup_wasteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the management model
   */ 
  interface managementFieldRefs {
    readonly management_id: FieldRef<"management", 'Int'>
    readonly name: FieldRef<"management", 'String'>
    readonly email: FieldRef<"management", 'String'>
    readonly password: FieldRef<"management", 'String'>
    readonly date_of_birth: FieldRef<"management", 'DateTime'>
    readonly address: FieldRef<"management", 'String'>
    readonly phone: FieldRef<"management", 'String'>
    readonly photo: FieldRef<"management", 'String'>
    readonly is_verified: FieldRef<"management", 'Boolean'>
    readonly is_admin: FieldRef<"management", 'Boolean'>
    readonly otp_code: FieldRef<"management", 'String'>
    readonly otp_expiry: FieldRef<"management", 'DateTime'>
    readonly created_at: FieldRef<"management", 'DateTime'>
    readonly updated_at: FieldRef<"management", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * management findUnique
   */
  export type managementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * Filter, which management to fetch.
     */
    where: managementWhereUniqueInput
  }

  /**
   * management findUniqueOrThrow
   */
  export type managementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * Filter, which management to fetch.
     */
    where: managementWhereUniqueInput
  }

  /**
   * management findFirst
   */
  export type managementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * Filter, which management to fetch.
     */
    where?: managementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of managements to fetch.
     */
    orderBy?: managementOrderByWithRelationInput | managementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for managements.
     */
    cursor?: managementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` managements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of managements.
     */
    distinct?: ManagementScalarFieldEnum | ManagementScalarFieldEnum[]
  }

  /**
   * management findFirstOrThrow
   */
  export type managementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * Filter, which management to fetch.
     */
    where?: managementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of managements to fetch.
     */
    orderBy?: managementOrderByWithRelationInput | managementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for managements.
     */
    cursor?: managementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` managements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of managements.
     */
    distinct?: ManagementScalarFieldEnum | ManagementScalarFieldEnum[]
  }

  /**
   * management findMany
   */
  export type managementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * Filter, which managements to fetch.
     */
    where?: managementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of managements to fetch.
     */
    orderBy?: managementOrderByWithRelationInput | managementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing managements.
     */
    cursor?: managementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` managements.
     */
    skip?: number
    distinct?: ManagementScalarFieldEnum | ManagementScalarFieldEnum[]
  }

  /**
   * management create
   */
  export type managementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * The data needed to create a management.
     */
    data: XOR<managementCreateInput, managementUncheckedCreateInput>
  }

  /**
   * management createMany
   */
  export type managementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many managements.
     */
    data: managementCreateManyInput | managementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * management update
   */
  export type managementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * The data needed to update a management.
     */
    data: XOR<managementUpdateInput, managementUncheckedUpdateInput>
    /**
     * Choose, which management to update.
     */
    where: managementWhereUniqueInput
  }

  /**
   * management updateMany
   */
  export type managementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update managements.
     */
    data: XOR<managementUpdateManyMutationInput, managementUncheckedUpdateManyInput>
    /**
     * Filter which managements to update
     */
    where?: managementWhereInput
  }

  /**
   * management upsert
   */
  export type managementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * The filter to search for the management to update in case it exists.
     */
    where: managementWhereUniqueInput
    /**
     * In case the management found by the `where` argument doesn't exist, create a new management with this data.
     */
    create: XOR<managementCreateInput, managementUncheckedCreateInput>
    /**
     * In case the management was found with the provided `where` argument, update it with this data.
     */
    update: XOR<managementUpdateInput, managementUncheckedUpdateInput>
  }

  /**
   * management delete
   */
  export type managementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    /**
     * Filter which management to delete.
     */
    where: managementWhereUniqueInput
  }

  /**
   * management deleteMany
   */
  export type managementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which managements to delete
     */
    where?: managementWhereInput
  }

  /**
   * management.pickup_waste
   */
  export type management$pickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    where?: pickup_wasteWhereInput
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    cursor?: pickup_wasteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * management without action
   */
  export type managementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
  }


  /**
   * Model pickup_waste
   */

  export type AggregatePickup_waste = {
    _count: Pickup_wasteCountAggregateOutputType | null
    _avg: Pickup_wasteAvgAggregateOutputType | null
    _sum: Pickup_wasteSumAggregateOutputType | null
    _min: Pickup_wasteMinAggregateOutputType | null
    _max: Pickup_wasteMaxAggregateOutputType | null
  }

  export type Pickup_wasteAvgAggregateOutputType = {
    pickup_id: number | null
    dropbox_id: number | null
    courier_id: number | null
    community_id: number | null
    management_id: number | null
  }

  export type Pickup_wasteSumAggregateOutputType = {
    pickup_id: number | null
    dropbox_id: number | null
    courier_id: number | null
    community_id: number | null
    management_id: number | null
  }

  export type Pickup_wasteMinAggregateOutputType = {
    pickup_id: number | null
    pickup_date: Date | null
    pickup_address: string | null
    pickup_status: $Enums.pickup_waste_pickup_status | null
    dropbox_id: number | null
    courier_id: number | null
    community_id: number | null
    management_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Pickup_wasteMaxAggregateOutputType = {
    pickup_id: number | null
    pickup_date: Date | null
    pickup_address: string | null
    pickup_status: $Enums.pickup_waste_pickup_status | null
    dropbox_id: number | null
    courier_id: number | null
    community_id: number | null
    management_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Pickup_wasteCountAggregateOutputType = {
    pickup_id: number
    pickup_date: number
    pickup_address: number
    pickup_status: number
    dropbox_id: number
    courier_id: number
    community_id: number
    management_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Pickup_wasteAvgAggregateInputType = {
    pickup_id?: true
    dropbox_id?: true
    courier_id?: true
    community_id?: true
    management_id?: true
  }

  export type Pickup_wasteSumAggregateInputType = {
    pickup_id?: true
    dropbox_id?: true
    courier_id?: true
    community_id?: true
    management_id?: true
  }

  export type Pickup_wasteMinAggregateInputType = {
    pickup_id?: true
    pickup_date?: true
    pickup_address?: true
    pickup_status?: true
    dropbox_id?: true
    courier_id?: true
    community_id?: true
    management_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Pickup_wasteMaxAggregateInputType = {
    pickup_id?: true
    pickup_date?: true
    pickup_address?: true
    pickup_status?: true
    dropbox_id?: true
    courier_id?: true
    community_id?: true
    management_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Pickup_wasteCountAggregateInputType = {
    pickup_id?: true
    pickup_date?: true
    pickup_address?: true
    pickup_status?: true
    dropbox_id?: true
    courier_id?: true
    community_id?: true
    management_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Pickup_wasteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pickup_waste to aggregate.
     */
    where?: pickup_wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pickup_wastes to fetch.
     */
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pickup_wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pickup_wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pickup_wastes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pickup_wastes
    **/
    _count?: true | Pickup_wasteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pickup_wasteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pickup_wasteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pickup_wasteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pickup_wasteMaxAggregateInputType
  }

  export type GetPickup_wasteAggregateType<T extends Pickup_wasteAggregateArgs> = {
        [P in keyof T & keyof AggregatePickup_waste]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePickup_waste[P]>
      : GetScalarType<T[P], AggregatePickup_waste[P]>
  }




  export type pickup_wasteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pickup_wasteWhereInput
    orderBy?: pickup_wasteOrderByWithAggregationInput | pickup_wasteOrderByWithAggregationInput[]
    by: Pickup_wasteScalarFieldEnum[] | Pickup_wasteScalarFieldEnum
    having?: pickup_wasteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pickup_wasteCountAggregateInputType | true
    _avg?: Pickup_wasteAvgAggregateInputType
    _sum?: Pickup_wasteSumAggregateInputType
    _min?: Pickup_wasteMinAggregateInputType
    _max?: Pickup_wasteMaxAggregateInputType
  }

  export type Pickup_wasteGroupByOutputType = {
    pickup_id: number
    pickup_date: Date
    pickup_address: string
    pickup_status: $Enums.pickup_waste_pickup_status | null
    dropbox_id: number | null
    courier_id: number | null
    community_id: number | null
    management_id: number | null
    created_at: Date | null
    updated_at: Date | null
    _count: Pickup_wasteCountAggregateOutputType | null
    _avg: Pickup_wasteAvgAggregateOutputType | null
    _sum: Pickup_wasteSumAggregateOutputType | null
    _min: Pickup_wasteMinAggregateOutputType | null
    _max: Pickup_wasteMaxAggregateOutputType | null
  }

  type GetPickup_wasteGroupByPayload<T extends pickup_wasteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pickup_wasteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pickup_wasteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pickup_wasteGroupByOutputType[P]>
            : GetScalarType<T[P], Pickup_wasteGroupByOutputType[P]>
        }
      >
    >


  export type pickup_wasteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pickup_id?: boolean
    pickup_date?: boolean
    pickup_address?: boolean
    pickup_status?: boolean
    dropbox_id?: boolean
    courier_id?: boolean
    community_id?: boolean
    management_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    dropbox?: boolean | pickup_waste$dropboxArgs<ExtArgs>
    courier?: boolean | pickup_waste$courierArgs<ExtArgs>
    community?: boolean | pickup_waste$communityArgs<ExtArgs>
    management?: boolean | pickup_waste$managementArgs<ExtArgs>
  }, ExtArgs["result"]["pickup_waste"]>


  export type pickup_wasteSelectScalar = {
    pickup_id?: boolean
    pickup_date?: boolean
    pickup_address?: boolean
    pickup_status?: boolean
    dropbox_id?: boolean
    courier_id?: boolean
    community_id?: boolean
    management_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type pickup_wasteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dropbox?: boolean | pickup_waste$dropboxArgs<ExtArgs>
    courier?: boolean | pickup_waste$courierArgs<ExtArgs>
    community?: boolean | pickup_waste$communityArgs<ExtArgs>
    management?: boolean | pickup_waste$managementArgs<ExtArgs>
  }

  export type $pickup_wastePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pickup_waste"
    objects: {
      dropbox: Prisma.$dropboxPayload<ExtArgs> | null
      courier: Prisma.$courierPayload<ExtArgs> | null
      community: Prisma.$communityPayload<ExtArgs> | null
      management: Prisma.$managementPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      pickup_id: number
      pickup_date: Date
      pickup_address: string
      pickup_status: $Enums.pickup_waste_pickup_status | null
      dropbox_id: number | null
      courier_id: number | null
      community_id: number | null
      management_id: number | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["pickup_waste"]>
    composites: {}
  }

  type pickup_wasteGetPayload<S extends boolean | null | undefined | pickup_wasteDefaultArgs> = $Result.GetResult<Prisma.$pickup_wastePayload, S>

  type pickup_wasteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<pickup_wasteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Pickup_wasteCountAggregateInputType | true
    }

  export interface pickup_wasteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pickup_waste'], meta: { name: 'pickup_waste' } }
    /**
     * Find zero or one Pickup_waste that matches the filter.
     * @param {pickup_wasteFindUniqueArgs} args - Arguments to find a Pickup_waste
     * @example
     * // Get one Pickup_waste
     * const pickup_waste = await prisma.pickup_waste.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pickup_wasteFindUniqueArgs>(args: SelectSubset<T, pickup_wasteFindUniqueArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Pickup_waste that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {pickup_wasteFindUniqueOrThrowArgs} args - Arguments to find a Pickup_waste
     * @example
     * // Get one Pickup_waste
     * const pickup_waste = await prisma.pickup_waste.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pickup_wasteFindUniqueOrThrowArgs>(args: SelectSubset<T, pickup_wasteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Pickup_waste that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pickup_wasteFindFirstArgs} args - Arguments to find a Pickup_waste
     * @example
     * // Get one Pickup_waste
     * const pickup_waste = await prisma.pickup_waste.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pickup_wasteFindFirstArgs>(args?: SelectSubset<T, pickup_wasteFindFirstArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Pickup_waste that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pickup_wasteFindFirstOrThrowArgs} args - Arguments to find a Pickup_waste
     * @example
     * // Get one Pickup_waste
     * const pickup_waste = await prisma.pickup_waste.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pickup_wasteFindFirstOrThrowArgs>(args?: SelectSubset<T, pickup_wasteFindFirstOrThrowArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pickup_wastes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pickup_wasteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pickup_wastes
     * const pickup_wastes = await prisma.pickup_waste.findMany()
     * 
     * // Get first 10 Pickup_wastes
     * const pickup_wastes = await prisma.pickup_waste.findMany({ take: 10 })
     * 
     * // Only select the `pickup_id`
     * const pickup_wasteWithPickup_idOnly = await prisma.pickup_waste.findMany({ select: { pickup_id: true } })
     * 
     */
    findMany<T extends pickup_wasteFindManyArgs>(args?: SelectSubset<T, pickup_wasteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Pickup_waste.
     * @param {pickup_wasteCreateArgs} args - Arguments to create a Pickup_waste.
     * @example
     * // Create one Pickup_waste
     * const Pickup_waste = await prisma.pickup_waste.create({
     *   data: {
     *     // ... data to create a Pickup_waste
     *   }
     * })
     * 
     */
    create<T extends pickup_wasteCreateArgs>(args: SelectSubset<T, pickup_wasteCreateArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pickup_wastes.
     * @param {pickup_wasteCreateManyArgs} args - Arguments to create many Pickup_wastes.
     * @example
     * // Create many Pickup_wastes
     * const pickup_waste = await prisma.pickup_waste.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pickup_wasteCreateManyArgs>(args?: SelectSubset<T, pickup_wasteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pickup_waste.
     * @param {pickup_wasteDeleteArgs} args - Arguments to delete one Pickup_waste.
     * @example
     * // Delete one Pickup_waste
     * const Pickup_waste = await prisma.pickup_waste.delete({
     *   where: {
     *     // ... filter to delete one Pickup_waste
     *   }
     * })
     * 
     */
    delete<T extends pickup_wasteDeleteArgs>(args: SelectSubset<T, pickup_wasteDeleteArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Pickup_waste.
     * @param {pickup_wasteUpdateArgs} args - Arguments to update one Pickup_waste.
     * @example
     * // Update one Pickup_waste
     * const pickup_waste = await prisma.pickup_waste.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pickup_wasteUpdateArgs>(args: SelectSubset<T, pickup_wasteUpdateArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pickup_wastes.
     * @param {pickup_wasteDeleteManyArgs} args - Arguments to filter Pickup_wastes to delete.
     * @example
     * // Delete a few Pickup_wastes
     * const { count } = await prisma.pickup_waste.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pickup_wasteDeleteManyArgs>(args?: SelectSubset<T, pickup_wasteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pickup_wastes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pickup_wasteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pickup_wastes
     * const pickup_waste = await prisma.pickup_waste.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pickup_wasteUpdateManyArgs>(args: SelectSubset<T, pickup_wasteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pickup_waste.
     * @param {pickup_wasteUpsertArgs} args - Arguments to update or create a Pickup_waste.
     * @example
     * // Update or create a Pickup_waste
     * const pickup_waste = await prisma.pickup_waste.upsert({
     *   create: {
     *     // ... data to create a Pickup_waste
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pickup_waste we want to update
     *   }
     * })
     */
    upsert<T extends pickup_wasteUpsertArgs>(args: SelectSubset<T, pickup_wasteUpsertArgs<ExtArgs>>): Prisma__pickup_wasteClient<$Result.GetResult<Prisma.$pickup_wastePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pickup_wastes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pickup_wasteCountArgs} args - Arguments to filter Pickup_wastes to count.
     * @example
     * // Count the number of Pickup_wastes
     * const count = await prisma.pickup_waste.count({
     *   where: {
     *     // ... the filter for the Pickup_wastes we want to count
     *   }
     * })
    **/
    count<T extends pickup_wasteCountArgs>(
      args?: Subset<T, pickup_wasteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pickup_wasteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pickup_waste.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pickup_wasteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pickup_wasteAggregateArgs>(args: Subset<T, Pickup_wasteAggregateArgs>): Prisma.PrismaPromise<GetPickup_wasteAggregateType<T>>

    /**
     * Group by Pickup_waste.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pickup_wasteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pickup_wasteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pickup_wasteGroupByArgs['orderBy'] }
        : { orderBy?: pickup_wasteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pickup_wasteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPickup_wasteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pickup_waste model
   */
  readonly fields: pickup_wasteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pickup_waste.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pickup_wasteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dropbox<T extends pickup_waste$dropboxArgs<ExtArgs> = {}>(args?: Subset<T, pickup_waste$dropboxArgs<ExtArgs>>): Prisma__dropboxClient<$Result.GetResult<Prisma.$dropboxPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    courier<T extends pickup_waste$courierArgs<ExtArgs> = {}>(args?: Subset<T, pickup_waste$courierArgs<ExtArgs>>): Prisma__courierClient<$Result.GetResult<Prisma.$courierPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    community<T extends pickup_waste$communityArgs<ExtArgs> = {}>(args?: Subset<T, pickup_waste$communityArgs<ExtArgs>>): Prisma__communityClient<$Result.GetResult<Prisma.$communityPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    management<T extends pickup_waste$managementArgs<ExtArgs> = {}>(args?: Subset<T, pickup_waste$managementArgs<ExtArgs>>): Prisma__managementClient<$Result.GetResult<Prisma.$managementPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pickup_waste model
   */ 
  interface pickup_wasteFieldRefs {
    readonly pickup_id: FieldRef<"pickup_waste", 'Int'>
    readonly pickup_date: FieldRef<"pickup_waste", 'DateTime'>
    readonly pickup_address: FieldRef<"pickup_waste", 'String'>
    readonly pickup_status: FieldRef<"pickup_waste", 'pickup_waste_pickup_status'>
    readonly dropbox_id: FieldRef<"pickup_waste", 'Int'>
    readonly courier_id: FieldRef<"pickup_waste", 'Int'>
    readonly community_id: FieldRef<"pickup_waste", 'Int'>
    readonly management_id: FieldRef<"pickup_waste", 'Int'>
    readonly created_at: FieldRef<"pickup_waste", 'DateTime'>
    readonly updated_at: FieldRef<"pickup_waste", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pickup_waste findUnique
   */
  export type pickup_wasteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * Filter, which pickup_waste to fetch.
     */
    where: pickup_wasteWhereUniqueInput
  }

  /**
   * pickup_waste findUniqueOrThrow
   */
  export type pickup_wasteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * Filter, which pickup_waste to fetch.
     */
    where: pickup_wasteWhereUniqueInput
  }

  /**
   * pickup_waste findFirst
   */
  export type pickup_wasteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * Filter, which pickup_waste to fetch.
     */
    where?: pickup_wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pickup_wastes to fetch.
     */
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pickup_wastes.
     */
    cursor?: pickup_wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pickup_wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pickup_wastes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pickup_wastes.
     */
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * pickup_waste findFirstOrThrow
   */
  export type pickup_wasteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * Filter, which pickup_waste to fetch.
     */
    where?: pickup_wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pickup_wastes to fetch.
     */
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pickup_wastes.
     */
    cursor?: pickup_wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pickup_wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pickup_wastes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pickup_wastes.
     */
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * pickup_waste findMany
   */
  export type pickup_wasteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * Filter, which pickup_wastes to fetch.
     */
    where?: pickup_wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pickup_wastes to fetch.
     */
    orderBy?: pickup_wasteOrderByWithRelationInput | pickup_wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pickup_wastes.
     */
    cursor?: pickup_wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pickup_wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pickup_wastes.
     */
    skip?: number
    distinct?: Pickup_wasteScalarFieldEnum | Pickup_wasteScalarFieldEnum[]
  }

  /**
   * pickup_waste create
   */
  export type pickup_wasteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * The data needed to create a pickup_waste.
     */
    data: XOR<pickup_wasteCreateInput, pickup_wasteUncheckedCreateInput>
  }

  /**
   * pickup_waste createMany
   */
  export type pickup_wasteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pickup_wastes.
     */
    data: pickup_wasteCreateManyInput | pickup_wasteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pickup_waste update
   */
  export type pickup_wasteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * The data needed to update a pickup_waste.
     */
    data: XOR<pickup_wasteUpdateInput, pickup_wasteUncheckedUpdateInput>
    /**
     * Choose, which pickup_waste to update.
     */
    where: pickup_wasteWhereUniqueInput
  }

  /**
   * pickup_waste updateMany
   */
  export type pickup_wasteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pickup_wastes.
     */
    data: XOR<pickup_wasteUpdateManyMutationInput, pickup_wasteUncheckedUpdateManyInput>
    /**
     * Filter which pickup_wastes to update
     */
    where?: pickup_wasteWhereInput
  }

  /**
   * pickup_waste upsert
   */
  export type pickup_wasteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * The filter to search for the pickup_waste to update in case it exists.
     */
    where: pickup_wasteWhereUniqueInput
    /**
     * In case the pickup_waste found by the `where` argument doesn't exist, create a new pickup_waste with this data.
     */
    create: XOR<pickup_wasteCreateInput, pickup_wasteUncheckedCreateInput>
    /**
     * In case the pickup_waste was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pickup_wasteUpdateInput, pickup_wasteUncheckedUpdateInput>
  }

  /**
   * pickup_waste delete
   */
  export type pickup_wasteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
    /**
     * Filter which pickup_waste to delete.
     */
    where: pickup_wasteWhereUniqueInput
  }

  /**
   * pickup_waste deleteMany
   */
  export type pickup_wasteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pickup_wastes to delete
     */
    where?: pickup_wasteWhereInput
  }

  /**
   * pickup_waste.dropbox
   */
  export type pickup_waste$dropboxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dropbox
     */
    select?: dropboxSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dropboxInclude<ExtArgs> | null
    where?: dropboxWhereInput
  }

  /**
   * pickup_waste.courier
   */
  export type pickup_waste$courierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courier
     */
    select?: courierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: courierInclude<ExtArgs> | null
    where?: courierWhereInput
  }

  /**
   * pickup_waste.community
   */
  export type pickup_waste$communityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the community
     */
    select?: communitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: communityInclude<ExtArgs> | null
    where?: communityWhereInput
  }

  /**
   * pickup_waste.management
   */
  export type pickup_waste$managementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the management
     */
    select?: managementSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: managementInclude<ExtArgs> | null
    where?: managementWhereInput
  }

  /**
   * pickup_waste without action
   */
  export type pickup_wasteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pickup_waste
     */
    select?: pickup_wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pickup_wasteInclude<ExtArgs> | null
  }


  /**
   * Model waste
   */

  export type AggregateWaste = {
    _count: WasteCountAggregateOutputType | null
    _avg: WasteAvgAggregateOutputType | null
    _sum: WasteSumAggregateOutputType | null
    _min: WasteMinAggregateOutputType | null
    _max: WasteMaxAggregateOutputType | null
  }

  export type WasteAvgAggregateOutputType = {
    waste_id: number | null
    point: number | null
    waste_type_id: number | null
  }

  export type WasteSumAggregateOutputType = {
    waste_id: number | null
    point: number | null
    waste_type_id: number | null
  }

  export type WasteMinAggregateOutputType = {
    waste_id: number | null
    waste_name: string | null
    point: number | null
    waste_type_id: number | null
    image: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type WasteMaxAggregateOutputType = {
    waste_id: number | null
    waste_name: string | null
    point: number | null
    waste_type_id: number | null
    image: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type WasteCountAggregateOutputType = {
    waste_id: number
    waste_name: number
    point: number
    waste_type_id: number
    image: number
    description: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type WasteAvgAggregateInputType = {
    waste_id?: true
    point?: true
    waste_type_id?: true
  }

  export type WasteSumAggregateInputType = {
    waste_id?: true
    point?: true
    waste_type_id?: true
  }

  export type WasteMinAggregateInputType = {
    waste_id?: true
    waste_name?: true
    point?: true
    waste_type_id?: true
    image?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type WasteMaxAggregateInputType = {
    waste_id?: true
    waste_name?: true
    point?: true
    waste_type_id?: true
    image?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type WasteCountAggregateInputType = {
    waste_id?: true
    waste_name?: true
    point?: true
    waste_type_id?: true
    image?: true
    description?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type WasteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which waste to aggregate.
     */
    where?: wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wastes to fetch.
     */
    orderBy?: wasteOrderByWithRelationInput | wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wastes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wastes
    **/
    _count?: true | WasteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WasteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WasteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WasteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WasteMaxAggregateInputType
  }

  export type GetWasteAggregateType<T extends WasteAggregateArgs> = {
        [P in keyof T & keyof AggregateWaste]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWaste[P]>
      : GetScalarType<T[P], AggregateWaste[P]>
  }




  export type wasteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wasteWhereInput
    orderBy?: wasteOrderByWithAggregationInput | wasteOrderByWithAggregationInput[]
    by: WasteScalarFieldEnum[] | WasteScalarFieldEnum
    having?: wasteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WasteCountAggregateInputType | true
    _avg?: WasteAvgAggregateInputType
    _sum?: WasteSumAggregateInputType
    _min?: WasteMinAggregateInputType
    _max?: WasteMaxAggregateInputType
  }

  export type WasteGroupByOutputType = {
    waste_id: number
    waste_name: string
    point: number | null
    waste_type_id: number | null
    image: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: WasteCountAggregateOutputType | null
    _avg: WasteAvgAggregateOutputType | null
    _sum: WasteSumAggregateOutputType | null
    _min: WasteMinAggregateOutputType | null
    _max: WasteMaxAggregateOutputType | null
  }

  type GetWasteGroupByPayload<T extends wasteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WasteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WasteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WasteGroupByOutputType[P]>
            : GetScalarType<T[P], WasteGroupByOutputType[P]>
        }
      >
    >


  export type wasteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    waste_id?: boolean
    waste_name?: boolean
    point?: boolean
    waste_type_id?: boolean
    image?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    waste_type?: boolean | waste$waste_typeArgs<ExtArgs>
  }, ExtArgs["result"]["waste"]>


  export type wasteSelectScalar = {
    waste_id?: boolean
    waste_name?: boolean
    point?: boolean
    waste_type_id?: boolean
    image?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type wasteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    waste_type?: boolean | waste$waste_typeArgs<ExtArgs>
  }

  export type $wastePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "waste"
    objects: {
      waste_type: Prisma.$waste_typePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      waste_id: number
      waste_name: string
      point: number | null
      waste_type_id: number | null
      image: string | null
      description: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["waste"]>
    composites: {}
  }

  type wasteGetPayload<S extends boolean | null | undefined | wasteDefaultArgs> = $Result.GetResult<Prisma.$wastePayload, S>

  type wasteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<wasteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WasteCountAggregateInputType | true
    }

  export interface wasteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['waste'], meta: { name: 'waste' } }
    /**
     * Find zero or one Waste that matches the filter.
     * @param {wasteFindUniqueArgs} args - Arguments to find a Waste
     * @example
     * // Get one Waste
     * const waste = await prisma.waste.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wasteFindUniqueArgs>(args: SelectSubset<T, wasteFindUniqueArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Waste that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {wasteFindUniqueOrThrowArgs} args - Arguments to find a Waste
     * @example
     * // Get one Waste
     * const waste = await prisma.waste.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wasteFindUniqueOrThrowArgs>(args: SelectSubset<T, wasteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Waste that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wasteFindFirstArgs} args - Arguments to find a Waste
     * @example
     * // Get one Waste
     * const waste = await prisma.waste.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wasteFindFirstArgs>(args?: SelectSubset<T, wasteFindFirstArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Waste that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wasteFindFirstOrThrowArgs} args - Arguments to find a Waste
     * @example
     * // Get one Waste
     * const waste = await prisma.waste.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wasteFindFirstOrThrowArgs>(args?: SelectSubset<T, wasteFindFirstOrThrowArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Wastes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wasteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wastes
     * const wastes = await prisma.waste.findMany()
     * 
     * // Get first 10 Wastes
     * const wastes = await prisma.waste.findMany({ take: 10 })
     * 
     * // Only select the `waste_id`
     * const wasteWithWaste_idOnly = await prisma.waste.findMany({ select: { waste_id: true } })
     * 
     */
    findMany<T extends wasteFindManyArgs>(args?: SelectSubset<T, wasteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Waste.
     * @param {wasteCreateArgs} args - Arguments to create a Waste.
     * @example
     * // Create one Waste
     * const Waste = await prisma.waste.create({
     *   data: {
     *     // ... data to create a Waste
     *   }
     * })
     * 
     */
    create<T extends wasteCreateArgs>(args: SelectSubset<T, wasteCreateArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Wastes.
     * @param {wasteCreateManyArgs} args - Arguments to create many Wastes.
     * @example
     * // Create many Wastes
     * const waste = await prisma.waste.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wasteCreateManyArgs>(args?: SelectSubset<T, wasteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Waste.
     * @param {wasteDeleteArgs} args - Arguments to delete one Waste.
     * @example
     * // Delete one Waste
     * const Waste = await prisma.waste.delete({
     *   where: {
     *     // ... filter to delete one Waste
     *   }
     * })
     * 
     */
    delete<T extends wasteDeleteArgs>(args: SelectSubset<T, wasteDeleteArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Waste.
     * @param {wasteUpdateArgs} args - Arguments to update one Waste.
     * @example
     * // Update one Waste
     * const waste = await prisma.waste.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wasteUpdateArgs>(args: SelectSubset<T, wasteUpdateArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Wastes.
     * @param {wasteDeleteManyArgs} args - Arguments to filter Wastes to delete.
     * @example
     * // Delete a few Wastes
     * const { count } = await prisma.waste.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wasteDeleteManyArgs>(args?: SelectSubset<T, wasteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wastes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wasteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wastes
     * const waste = await prisma.waste.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wasteUpdateManyArgs>(args: SelectSubset<T, wasteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Waste.
     * @param {wasteUpsertArgs} args - Arguments to update or create a Waste.
     * @example
     * // Update or create a Waste
     * const waste = await prisma.waste.upsert({
     *   create: {
     *     // ... data to create a Waste
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Waste we want to update
     *   }
     * })
     */
    upsert<T extends wasteUpsertArgs>(args: SelectSubset<T, wasteUpsertArgs<ExtArgs>>): Prisma__wasteClient<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Wastes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wasteCountArgs} args - Arguments to filter Wastes to count.
     * @example
     * // Count the number of Wastes
     * const count = await prisma.waste.count({
     *   where: {
     *     // ... the filter for the Wastes we want to count
     *   }
     * })
    **/
    count<T extends wasteCountArgs>(
      args?: Subset<T, wasteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WasteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Waste.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WasteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WasteAggregateArgs>(args: Subset<T, WasteAggregateArgs>): Prisma.PrismaPromise<GetWasteAggregateType<T>>

    /**
     * Group by Waste.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wasteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wasteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wasteGroupByArgs['orderBy'] }
        : { orderBy?: wasteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wasteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWasteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the waste model
   */
  readonly fields: wasteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for waste.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wasteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    waste_type<T extends waste$waste_typeArgs<ExtArgs> = {}>(args?: Subset<T, waste$waste_typeArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the waste model
   */ 
  interface wasteFieldRefs {
    readonly waste_id: FieldRef<"waste", 'Int'>
    readonly waste_name: FieldRef<"waste", 'String'>
    readonly point: FieldRef<"waste", 'Int'>
    readonly waste_type_id: FieldRef<"waste", 'Int'>
    readonly image: FieldRef<"waste", 'String'>
    readonly description: FieldRef<"waste", 'String'>
    readonly created_at: FieldRef<"waste", 'DateTime'>
    readonly updated_at: FieldRef<"waste", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * waste findUnique
   */
  export type wasteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * Filter, which waste to fetch.
     */
    where: wasteWhereUniqueInput
  }

  /**
   * waste findUniqueOrThrow
   */
  export type wasteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * Filter, which waste to fetch.
     */
    where: wasteWhereUniqueInput
  }

  /**
   * waste findFirst
   */
  export type wasteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * Filter, which waste to fetch.
     */
    where?: wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wastes to fetch.
     */
    orderBy?: wasteOrderByWithRelationInput | wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wastes.
     */
    cursor?: wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wastes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wastes.
     */
    distinct?: WasteScalarFieldEnum | WasteScalarFieldEnum[]
  }

  /**
   * waste findFirstOrThrow
   */
  export type wasteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * Filter, which waste to fetch.
     */
    where?: wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wastes to fetch.
     */
    orderBy?: wasteOrderByWithRelationInput | wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wastes.
     */
    cursor?: wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wastes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wastes.
     */
    distinct?: WasteScalarFieldEnum | WasteScalarFieldEnum[]
  }

  /**
   * waste findMany
   */
  export type wasteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * Filter, which wastes to fetch.
     */
    where?: wasteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wastes to fetch.
     */
    orderBy?: wasteOrderByWithRelationInput | wasteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wastes.
     */
    cursor?: wasteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wastes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wastes.
     */
    skip?: number
    distinct?: WasteScalarFieldEnum | WasteScalarFieldEnum[]
  }

  /**
   * waste create
   */
  export type wasteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * The data needed to create a waste.
     */
    data: XOR<wasteCreateInput, wasteUncheckedCreateInput>
  }

  /**
   * waste createMany
   */
  export type wasteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wastes.
     */
    data: wasteCreateManyInput | wasteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * waste update
   */
  export type wasteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * The data needed to update a waste.
     */
    data: XOR<wasteUpdateInput, wasteUncheckedUpdateInput>
    /**
     * Choose, which waste to update.
     */
    where: wasteWhereUniqueInput
  }

  /**
   * waste updateMany
   */
  export type wasteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wastes.
     */
    data: XOR<wasteUpdateManyMutationInput, wasteUncheckedUpdateManyInput>
    /**
     * Filter which wastes to update
     */
    where?: wasteWhereInput
  }

  /**
   * waste upsert
   */
  export type wasteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * The filter to search for the waste to update in case it exists.
     */
    where: wasteWhereUniqueInput
    /**
     * In case the waste found by the `where` argument doesn't exist, create a new waste with this data.
     */
    create: XOR<wasteCreateInput, wasteUncheckedCreateInput>
    /**
     * In case the waste was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wasteUpdateInput, wasteUncheckedUpdateInput>
  }

  /**
   * waste delete
   */
  export type wasteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    /**
     * Filter which waste to delete.
     */
    where: wasteWhereUniqueInput
  }

  /**
   * waste deleteMany
   */
  export type wasteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wastes to delete
     */
    where?: wasteWhereInput
  }

  /**
   * waste.waste_type
   */
  export type waste$waste_typeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    where?: waste_typeWhereInput
  }

  /**
   * waste without action
   */
  export type wasteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
  }


  /**
   * Model waste_type
   */

  export type AggregateWaste_type = {
    _count: Waste_typeCountAggregateOutputType | null
    _avg: Waste_typeAvgAggregateOutputType | null
    _sum: Waste_typeSumAggregateOutputType | null
    _min: Waste_typeMinAggregateOutputType | null
    _max: Waste_typeMaxAggregateOutputType | null
  }

  export type Waste_typeAvgAggregateOutputType = {
    waste_type_id: number | null
  }

  export type Waste_typeSumAggregateOutputType = {
    waste_type_id: number | null
  }

  export type Waste_typeMinAggregateOutputType = {
    waste_type_id: number | null
    waste_type_name: $Enums.waste_type_waste_type_name | null
    image: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Waste_typeMaxAggregateOutputType = {
    waste_type_id: number | null
    waste_type_name: $Enums.waste_type_waste_type_name | null
    image: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Waste_typeCountAggregateOutputType = {
    waste_type_id: number
    waste_type_name: number
    image: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Waste_typeAvgAggregateInputType = {
    waste_type_id?: true
  }

  export type Waste_typeSumAggregateInputType = {
    waste_type_id?: true
  }

  export type Waste_typeMinAggregateInputType = {
    waste_type_id?: true
    waste_type_name?: true
    image?: true
    created_at?: true
    updated_at?: true
  }

  export type Waste_typeMaxAggregateInputType = {
    waste_type_id?: true
    waste_type_name?: true
    image?: true
    created_at?: true
    updated_at?: true
  }

  export type Waste_typeCountAggregateInputType = {
    waste_type_id?: true
    waste_type_name?: true
    image?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Waste_typeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which waste_type to aggregate.
     */
    where?: waste_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of waste_types to fetch.
     */
    orderBy?: waste_typeOrderByWithRelationInput | waste_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: waste_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` waste_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` waste_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned waste_types
    **/
    _count?: true | Waste_typeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Waste_typeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Waste_typeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Waste_typeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Waste_typeMaxAggregateInputType
  }

  export type GetWaste_typeAggregateType<T extends Waste_typeAggregateArgs> = {
        [P in keyof T & keyof AggregateWaste_type]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWaste_type[P]>
      : GetScalarType<T[P], AggregateWaste_type[P]>
  }




  export type waste_typeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: waste_typeWhereInput
    orderBy?: waste_typeOrderByWithAggregationInput | waste_typeOrderByWithAggregationInput[]
    by: Waste_typeScalarFieldEnum[] | Waste_typeScalarFieldEnum
    having?: waste_typeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Waste_typeCountAggregateInputType | true
    _avg?: Waste_typeAvgAggregateInputType
    _sum?: Waste_typeSumAggregateInputType
    _min?: Waste_typeMinAggregateInputType
    _max?: Waste_typeMaxAggregateInputType
  }

  export type Waste_typeGroupByOutputType = {
    waste_type_id: number
    waste_type_name: $Enums.waste_type_waste_type_name
    image: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Waste_typeCountAggregateOutputType | null
    _avg: Waste_typeAvgAggregateOutputType | null
    _sum: Waste_typeSumAggregateOutputType | null
    _min: Waste_typeMinAggregateOutputType | null
    _max: Waste_typeMaxAggregateOutputType | null
  }

  type GetWaste_typeGroupByPayload<T extends waste_typeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Waste_typeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Waste_typeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Waste_typeGroupByOutputType[P]>
            : GetScalarType<T[P], Waste_typeGroupByOutputType[P]>
        }
      >
    >


  export type waste_typeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    waste_type_id?: boolean
    waste_type_name?: boolean
    image?: boolean
    created_at?: boolean
    updated_at?: boolean
    waste?: boolean | waste_type$wasteArgs<ExtArgs>
    _count?: boolean | Waste_typeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["waste_type"]>


  export type waste_typeSelectScalar = {
    waste_type_id?: boolean
    waste_type_name?: boolean
    image?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type waste_typeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    waste?: boolean | waste_type$wasteArgs<ExtArgs>
    _count?: boolean | Waste_typeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $waste_typePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "waste_type"
    objects: {
      waste: Prisma.$wastePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      waste_type_id: number
      waste_type_name: $Enums.waste_type_waste_type_name
      image: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["waste_type"]>
    composites: {}
  }

  type waste_typeGetPayload<S extends boolean | null | undefined | waste_typeDefaultArgs> = $Result.GetResult<Prisma.$waste_typePayload, S>

  type waste_typeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<waste_typeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Waste_typeCountAggregateInputType | true
    }

  export interface waste_typeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['waste_type'], meta: { name: 'waste_type' } }
    /**
     * Find zero or one Waste_type that matches the filter.
     * @param {waste_typeFindUniqueArgs} args - Arguments to find a Waste_type
     * @example
     * // Get one Waste_type
     * const waste_type = await prisma.waste_type.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends waste_typeFindUniqueArgs>(args: SelectSubset<T, waste_typeFindUniqueArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Waste_type that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {waste_typeFindUniqueOrThrowArgs} args - Arguments to find a Waste_type
     * @example
     * // Get one Waste_type
     * const waste_type = await prisma.waste_type.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends waste_typeFindUniqueOrThrowArgs>(args: SelectSubset<T, waste_typeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Waste_type that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {waste_typeFindFirstArgs} args - Arguments to find a Waste_type
     * @example
     * // Get one Waste_type
     * const waste_type = await prisma.waste_type.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends waste_typeFindFirstArgs>(args?: SelectSubset<T, waste_typeFindFirstArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Waste_type that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {waste_typeFindFirstOrThrowArgs} args - Arguments to find a Waste_type
     * @example
     * // Get one Waste_type
     * const waste_type = await prisma.waste_type.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends waste_typeFindFirstOrThrowArgs>(args?: SelectSubset<T, waste_typeFindFirstOrThrowArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Waste_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {waste_typeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Waste_types
     * const waste_types = await prisma.waste_type.findMany()
     * 
     * // Get first 10 Waste_types
     * const waste_types = await prisma.waste_type.findMany({ take: 10 })
     * 
     * // Only select the `waste_type_id`
     * const waste_typeWithWaste_type_idOnly = await prisma.waste_type.findMany({ select: { waste_type_id: true } })
     * 
     */
    findMany<T extends waste_typeFindManyArgs>(args?: SelectSubset<T, waste_typeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Waste_type.
     * @param {waste_typeCreateArgs} args - Arguments to create a Waste_type.
     * @example
     * // Create one Waste_type
     * const Waste_type = await prisma.waste_type.create({
     *   data: {
     *     // ... data to create a Waste_type
     *   }
     * })
     * 
     */
    create<T extends waste_typeCreateArgs>(args: SelectSubset<T, waste_typeCreateArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Waste_types.
     * @param {waste_typeCreateManyArgs} args - Arguments to create many Waste_types.
     * @example
     * // Create many Waste_types
     * const waste_type = await prisma.waste_type.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends waste_typeCreateManyArgs>(args?: SelectSubset<T, waste_typeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Waste_type.
     * @param {waste_typeDeleteArgs} args - Arguments to delete one Waste_type.
     * @example
     * // Delete one Waste_type
     * const Waste_type = await prisma.waste_type.delete({
     *   where: {
     *     // ... filter to delete one Waste_type
     *   }
     * })
     * 
     */
    delete<T extends waste_typeDeleteArgs>(args: SelectSubset<T, waste_typeDeleteArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Waste_type.
     * @param {waste_typeUpdateArgs} args - Arguments to update one Waste_type.
     * @example
     * // Update one Waste_type
     * const waste_type = await prisma.waste_type.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends waste_typeUpdateArgs>(args: SelectSubset<T, waste_typeUpdateArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Waste_types.
     * @param {waste_typeDeleteManyArgs} args - Arguments to filter Waste_types to delete.
     * @example
     * // Delete a few Waste_types
     * const { count } = await prisma.waste_type.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends waste_typeDeleteManyArgs>(args?: SelectSubset<T, waste_typeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Waste_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {waste_typeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Waste_types
     * const waste_type = await prisma.waste_type.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends waste_typeUpdateManyArgs>(args: SelectSubset<T, waste_typeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Waste_type.
     * @param {waste_typeUpsertArgs} args - Arguments to update or create a Waste_type.
     * @example
     * // Update or create a Waste_type
     * const waste_type = await prisma.waste_type.upsert({
     *   create: {
     *     // ... data to create a Waste_type
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Waste_type we want to update
     *   }
     * })
     */
    upsert<T extends waste_typeUpsertArgs>(args: SelectSubset<T, waste_typeUpsertArgs<ExtArgs>>): Prisma__waste_typeClient<$Result.GetResult<Prisma.$waste_typePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Waste_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {waste_typeCountArgs} args - Arguments to filter Waste_types to count.
     * @example
     * // Count the number of Waste_types
     * const count = await prisma.waste_type.count({
     *   where: {
     *     // ... the filter for the Waste_types we want to count
     *   }
     * })
    **/
    count<T extends waste_typeCountArgs>(
      args?: Subset<T, waste_typeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Waste_typeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Waste_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Waste_typeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Waste_typeAggregateArgs>(args: Subset<T, Waste_typeAggregateArgs>): Prisma.PrismaPromise<GetWaste_typeAggregateType<T>>

    /**
     * Group by Waste_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {waste_typeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends waste_typeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: waste_typeGroupByArgs['orderBy'] }
        : { orderBy?: waste_typeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, waste_typeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWaste_typeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the waste_type model
   */
  readonly fields: waste_typeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for waste_type.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__waste_typeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    waste<T extends waste_type$wasteArgs<ExtArgs> = {}>(args?: Subset<T, waste_type$wasteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wastePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the waste_type model
   */ 
  interface waste_typeFieldRefs {
    readonly waste_type_id: FieldRef<"waste_type", 'Int'>
    readonly waste_type_name: FieldRef<"waste_type", 'waste_type_waste_type_name'>
    readonly image: FieldRef<"waste_type", 'String'>
    readonly created_at: FieldRef<"waste_type", 'DateTime'>
    readonly updated_at: FieldRef<"waste_type", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * waste_type findUnique
   */
  export type waste_typeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * Filter, which waste_type to fetch.
     */
    where: waste_typeWhereUniqueInput
  }

  /**
   * waste_type findUniqueOrThrow
   */
  export type waste_typeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * Filter, which waste_type to fetch.
     */
    where: waste_typeWhereUniqueInput
  }

  /**
   * waste_type findFirst
   */
  export type waste_typeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * Filter, which waste_type to fetch.
     */
    where?: waste_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of waste_types to fetch.
     */
    orderBy?: waste_typeOrderByWithRelationInput | waste_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for waste_types.
     */
    cursor?: waste_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` waste_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` waste_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of waste_types.
     */
    distinct?: Waste_typeScalarFieldEnum | Waste_typeScalarFieldEnum[]
  }

  /**
   * waste_type findFirstOrThrow
   */
  export type waste_typeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * Filter, which waste_type to fetch.
     */
    where?: waste_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of waste_types to fetch.
     */
    orderBy?: waste_typeOrderByWithRelationInput | waste_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for waste_types.
     */
    cursor?: waste_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` waste_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` waste_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of waste_types.
     */
    distinct?: Waste_typeScalarFieldEnum | Waste_typeScalarFieldEnum[]
  }

  /**
   * waste_type findMany
   */
  export type waste_typeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * Filter, which waste_types to fetch.
     */
    where?: waste_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of waste_types to fetch.
     */
    orderBy?: waste_typeOrderByWithRelationInput | waste_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing waste_types.
     */
    cursor?: waste_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` waste_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` waste_types.
     */
    skip?: number
    distinct?: Waste_typeScalarFieldEnum | Waste_typeScalarFieldEnum[]
  }

  /**
   * waste_type create
   */
  export type waste_typeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * The data needed to create a waste_type.
     */
    data: XOR<waste_typeCreateInput, waste_typeUncheckedCreateInput>
  }

  /**
   * waste_type createMany
   */
  export type waste_typeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many waste_types.
     */
    data: waste_typeCreateManyInput | waste_typeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * waste_type update
   */
  export type waste_typeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * The data needed to update a waste_type.
     */
    data: XOR<waste_typeUpdateInput, waste_typeUncheckedUpdateInput>
    /**
     * Choose, which waste_type to update.
     */
    where: waste_typeWhereUniqueInput
  }

  /**
   * waste_type updateMany
   */
  export type waste_typeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update waste_types.
     */
    data: XOR<waste_typeUpdateManyMutationInput, waste_typeUncheckedUpdateManyInput>
    /**
     * Filter which waste_types to update
     */
    where?: waste_typeWhereInput
  }

  /**
   * waste_type upsert
   */
  export type waste_typeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * The filter to search for the waste_type to update in case it exists.
     */
    where: waste_typeWhereUniqueInput
    /**
     * In case the waste_type found by the `where` argument doesn't exist, create a new waste_type with this data.
     */
    create: XOR<waste_typeCreateInput, waste_typeUncheckedCreateInput>
    /**
     * In case the waste_type was found with the provided `where` argument, update it with this data.
     */
    update: XOR<waste_typeUpdateInput, waste_typeUncheckedUpdateInput>
  }

  /**
   * waste_type delete
   */
  export type waste_typeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
    /**
     * Filter which waste_type to delete.
     */
    where: waste_typeWhereUniqueInput
  }

  /**
   * waste_type deleteMany
   */
  export type waste_typeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which waste_types to delete
     */
    where?: waste_typeWhereInput
  }

  /**
   * waste_type.waste
   */
  export type waste_type$wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste
     */
    select?: wasteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: wasteInclude<ExtArgs> | null
    where?: wasteWhereInput
    orderBy?: wasteOrderByWithRelationInput | wasteOrderByWithRelationInput[]
    cursor?: wasteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WasteScalarFieldEnum | WasteScalarFieldEnum[]
  }

  /**
   * waste_type without action
   */
  export type waste_typeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the waste_type
     */
    select?: waste_typeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: waste_typeInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CommunityScalarFieldEnum: {
    community_id: 'community_id',
    name: 'name',
    email: 'email',
    password: 'password',
    phone: 'phone',
    date_of_birth: 'date_of_birth',
    address: 'address',
    photo: 'photo',
    is_verified: 'is_verified',
    otp_code: 'otp_code',
    otp_expiry: 'otp_expiry',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CommunityScalarFieldEnum = (typeof CommunityScalarFieldEnum)[keyof typeof CommunityScalarFieldEnum]


  export const Community_pointsScalarFieldEnum: {
    points_id: 'points_id',
    community_id: 'community_id',
    total_points: 'total_points',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Community_pointsScalarFieldEnum = (typeof Community_pointsScalarFieldEnum)[keyof typeof Community_pointsScalarFieldEnum]


  export const CourierScalarFieldEnum: {
    courier_id: 'courier_id',
    name: 'name',
    email: 'email',
    password: 'password',
    phone: 'phone',
    date_of_birth: 'date_of_birth',
    address: 'address',
    account_number: 'account_number',
    nik: 'nik',
    ktp_url: 'ktp_url',
    kk_url: 'kk_url',
    photo: 'photo',
    is_verified: 'is_verified',
    status: 'status',
    otp_code: 'otp_code',
    otp_expiry: 'otp_expiry',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CourierScalarFieldEnum = (typeof CourierScalarFieldEnum)[keyof typeof CourierScalarFieldEnum]


  export const Courier_pointsScalarFieldEnum: {
    points_id: 'points_id',
    courier_id: 'courier_id',
    total_points: 'total_points',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Courier_pointsScalarFieldEnum = (typeof Courier_pointsScalarFieldEnum)[keyof typeof Courier_pointsScalarFieldEnum]


  export const DropboxScalarFieldEnum: {
    dropbox_id: 'dropbox_id',
    name: 'name',
    address: 'address',
    district_address: 'district_address',
    longitude: 'longitude',
    latitude: 'latitude',
    capacity: 'capacity',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DropboxScalarFieldEnum = (typeof DropboxScalarFieldEnum)[keyof typeof DropboxScalarFieldEnum]


  export const ManagementScalarFieldEnum: {
    management_id: 'management_id',
    name: 'name',
    email: 'email',
    password: 'password',
    date_of_birth: 'date_of_birth',
    address: 'address',
    phone: 'phone',
    photo: 'photo',
    is_verified: 'is_verified',
    is_admin: 'is_admin',
    otp_code: 'otp_code',
    otp_expiry: 'otp_expiry',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ManagementScalarFieldEnum = (typeof ManagementScalarFieldEnum)[keyof typeof ManagementScalarFieldEnum]


  export const Pickup_wasteScalarFieldEnum: {
    pickup_id: 'pickup_id',
    pickup_date: 'pickup_date',
    pickup_address: 'pickup_address',
    pickup_status: 'pickup_status',
    dropbox_id: 'dropbox_id',
    courier_id: 'courier_id',
    community_id: 'community_id',
    management_id: 'management_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Pickup_wasteScalarFieldEnum = (typeof Pickup_wasteScalarFieldEnum)[keyof typeof Pickup_wasteScalarFieldEnum]


  export const WasteScalarFieldEnum: {
    waste_id: 'waste_id',
    waste_name: 'waste_name',
    point: 'point',
    waste_type_id: 'waste_type_id',
    image: 'image',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type WasteScalarFieldEnum = (typeof WasteScalarFieldEnum)[keyof typeof WasteScalarFieldEnum]


  export const Waste_typeScalarFieldEnum: {
    waste_type_id: 'waste_type_id',
    waste_type_name: 'waste_type_name',
    image: 'image',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Waste_typeScalarFieldEnum = (typeof Waste_typeScalarFieldEnum)[keyof typeof Waste_typeScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'courier_status'
   */
  export type Enumcourier_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'courier_status'>
    


  /**
   * Reference to a field of type 'dropbox_district_address'
   */
  export type Enumdropbox_district_addressFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'dropbox_district_address'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'dropbox_status'
   */
  export type Enumdropbox_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'dropbox_status'>
    


  /**
   * Reference to a field of type 'pickup_waste_pickup_status'
   */
  export type Enumpickup_waste_pickup_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'pickup_waste_pickup_status'>
    


  /**
   * Reference to a field of type 'waste_type_waste_type_name'
   */
  export type Enumwaste_type_waste_type_nameFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'waste_type_waste_type_name'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type communityWhereInput = {
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    community_id?: IntFilter<"community"> | number
    name?: StringFilter<"community"> | string
    email?: StringFilter<"community"> | string
    password?: StringNullableFilter<"community"> | string | null
    phone?: StringNullableFilter<"community"> | string | null
    date_of_birth?: DateTimeNullableFilter<"community"> | Date | string | null
    address?: StringNullableFilter<"community"> | string | null
    photo?: StringNullableFilter<"community"> | string | null
    is_verified?: BoolNullableFilter<"community"> | boolean | null
    otp_code?: StringNullableFilter<"community"> | string | null
    otp_expiry?: DateTimeNullableFilter<"community"> | Date | string | null
    created_at?: DateTimeNullableFilter<"community"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"community"> | Date | string | null
    community_points?: Community_pointsListRelationFilter
    pickup_waste?: Pickup_wasteListRelationFilter
  }

  export type communityOrderByWithRelationInput = {
    community_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expiry?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    community_points?: community_pointsOrderByRelationAggregateInput
    pickup_waste?: pickup_wasteOrderByRelationAggregateInput
  }

  export type communityWhereUniqueInput = Prisma.AtLeast<{
    community_id?: number
    email?: string
    AND?: communityWhereInput | communityWhereInput[]
    OR?: communityWhereInput[]
    NOT?: communityWhereInput | communityWhereInput[]
    name?: StringFilter<"community"> | string
    password?: StringNullableFilter<"community"> | string | null
    phone?: StringNullableFilter<"community"> | string | null
    date_of_birth?: DateTimeNullableFilter<"community"> | Date | string | null
    address?: StringNullableFilter<"community"> | string | null
    photo?: StringNullableFilter<"community"> | string | null
    is_verified?: BoolNullableFilter<"community"> | boolean | null
    otp_code?: StringNullableFilter<"community"> | string | null
    otp_expiry?: DateTimeNullableFilter<"community"> | Date | string | null
    created_at?: DateTimeNullableFilter<"community"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"community"> | Date | string | null
    community_points?: Community_pointsListRelationFilter
    pickup_waste?: Pickup_wasteListRelationFilter
  }, "community_id" | "email">

  export type communityOrderByWithAggregationInput = {
    community_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expiry?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: communityCountOrderByAggregateInput
    _avg?: communityAvgOrderByAggregateInput
    _max?: communityMaxOrderByAggregateInput
    _min?: communityMinOrderByAggregateInput
    _sum?: communitySumOrderByAggregateInput
  }

  export type communityScalarWhereWithAggregatesInput = {
    AND?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    OR?: communityScalarWhereWithAggregatesInput[]
    NOT?: communityScalarWhereWithAggregatesInput | communityScalarWhereWithAggregatesInput[]
    community_id?: IntWithAggregatesFilter<"community"> | number
    name?: StringWithAggregatesFilter<"community"> | string
    email?: StringWithAggregatesFilter<"community"> | string
    password?: StringNullableWithAggregatesFilter<"community"> | string | null
    phone?: StringNullableWithAggregatesFilter<"community"> | string | null
    date_of_birth?: DateTimeNullableWithAggregatesFilter<"community"> | Date | string | null
    address?: StringNullableWithAggregatesFilter<"community"> | string | null
    photo?: StringNullableWithAggregatesFilter<"community"> | string | null
    is_verified?: BoolNullableWithAggregatesFilter<"community"> | boolean | null
    otp_code?: StringNullableWithAggregatesFilter<"community"> | string | null
    otp_expiry?: DateTimeNullableWithAggregatesFilter<"community"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"community"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"community"> | Date | string | null
  }

  export type community_pointsWhereInput = {
    AND?: community_pointsWhereInput | community_pointsWhereInput[]
    OR?: community_pointsWhereInput[]
    NOT?: community_pointsWhereInput | community_pointsWhereInput[]
    points_id?: IntFilter<"community_points"> | number
    community_id?: IntNullableFilter<"community_points"> | number | null
    total_points?: IntNullableFilter<"community_points"> | number | null
    created_at?: DateTimeNullableFilter<"community_points"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"community_points"> | Date | string | null
    community?: XOR<CommunityNullableRelationFilter, communityWhereInput> | null
  }

  export type community_pointsOrderByWithRelationInput = {
    points_id?: SortOrder
    community_id?: SortOrderInput | SortOrder
    total_points?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    community?: communityOrderByWithRelationInput
  }

  export type community_pointsWhereUniqueInput = Prisma.AtLeast<{
    points_id?: number
    AND?: community_pointsWhereInput | community_pointsWhereInput[]
    OR?: community_pointsWhereInput[]
    NOT?: community_pointsWhereInput | community_pointsWhereInput[]
    community_id?: IntNullableFilter<"community_points"> | number | null
    total_points?: IntNullableFilter<"community_points"> | number | null
    created_at?: DateTimeNullableFilter<"community_points"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"community_points"> | Date | string | null
    community?: XOR<CommunityNullableRelationFilter, communityWhereInput> | null
  }, "points_id">

  export type community_pointsOrderByWithAggregationInput = {
    points_id?: SortOrder
    community_id?: SortOrderInput | SortOrder
    total_points?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: community_pointsCountOrderByAggregateInput
    _avg?: community_pointsAvgOrderByAggregateInput
    _max?: community_pointsMaxOrderByAggregateInput
    _min?: community_pointsMinOrderByAggregateInput
    _sum?: community_pointsSumOrderByAggregateInput
  }

  export type community_pointsScalarWhereWithAggregatesInput = {
    AND?: community_pointsScalarWhereWithAggregatesInput | community_pointsScalarWhereWithAggregatesInput[]
    OR?: community_pointsScalarWhereWithAggregatesInput[]
    NOT?: community_pointsScalarWhereWithAggregatesInput | community_pointsScalarWhereWithAggregatesInput[]
    points_id?: IntWithAggregatesFilter<"community_points"> | number
    community_id?: IntNullableWithAggregatesFilter<"community_points"> | number | null
    total_points?: IntNullableWithAggregatesFilter<"community_points"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"community_points"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"community_points"> | Date | string | null
  }

  export type courierWhereInput = {
    AND?: courierWhereInput | courierWhereInput[]
    OR?: courierWhereInput[]
    NOT?: courierWhereInput | courierWhereInput[]
    courier_id?: IntFilter<"courier"> | number
    name?: StringFilter<"courier"> | string
    email?: StringFilter<"courier"> | string
    password?: StringNullableFilter<"courier"> | string | null
    phone?: StringNullableFilter<"courier"> | string | null
    date_of_birth?: DateTimeNullableFilter<"courier"> | Date | string | null
    address?: StringNullableFilter<"courier"> | string | null
    account_number?: StringNullableFilter<"courier"> | string | null
    nik?: StringNullableFilter<"courier"> | string | null
    ktp_url?: StringNullableFilter<"courier"> | string | null
    kk_url?: StringNullableFilter<"courier"> | string | null
    photo?: StringNullableFilter<"courier"> | string | null
    is_verified?: BoolNullableFilter<"courier"> | boolean | null
    status?: Enumcourier_statusNullableFilter<"courier"> | $Enums.courier_status | null
    otp_code?: StringNullableFilter<"courier"> | string | null
    otp_expiry?: DateTimeNullableFilter<"courier"> | Date | string | null
    created_at?: DateTimeNullableFilter<"courier"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"courier"> | Date | string | null
    courier_points?: Courier_pointsListRelationFilter
    pickup_waste?: Pickup_wasteListRelationFilter
  }

  export type courierOrderByWithRelationInput = {
    courier_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    account_number?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    ktp_url?: SortOrderInput | SortOrder
    kk_url?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expiry?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    courier_points?: courier_pointsOrderByRelationAggregateInput
    pickup_waste?: pickup_wasteOrderByRelationAggregateInput
  }

  export type courierWhereUniqueInput = Prisma.AtLeast<{
    courier_id?: number
    email?: string
    nik?: string
    AND?: courierWhereInput | courierWhereInput[]
    OR?: courierWhereInput[]
    NOT?: courierWhereInput | courierWhereInput[]
    name?: StringFilter<"courier"> | string
    password?: StringNullableFilter<"courier"> | string | null
    phone?: StringNullableFilter<"courier"> | string | null
    date_of_birth?: DateTimeNullableFilter<"courier"> | Date | string | null
    address?: StringNullableFilter<"courier"> | string | null
    account_number?: StringNullableFilter<"courier"> | string | null
    ktp_url?: StringNullableFilter<"courier"> | string | null
    kk_url?: StringNullableFilter<"courier"> | string | null
    photo?: StringNullableFilter<"courier"> | string | null
    is_verified?: BoolNullableFilter<"courier"> | boolean | null
    status?: Enumcourier_statusNullableFilter<"courier"> | $Enums.courier_status | null
    otp_code?: StringNullableFilter<"courier"> | string | null
    otp_expiry?: DateTimeNullableFilter<"courier"> | Date | string | null
    created_at?: DateTimeNullableFilter<"courier"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"courier"> | Date | string | null
    courier_points?: Courier_pointsListRelationFilter
    pickup_waste?: Pickup_wasteListRelationFilter
  }, "courier_id" | "email" | "nik">

  export type courierOrderByWithAggregationInput = {
    courier_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    account_number?: SortOrderInput | SortOrder
    nik?: SortOrderInput | SortOrder
    ktp_url?: SortOrderInput | SortOrder
    kk_url?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expiry?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: courierCountOrderByAggregateInput
    _avg?: courierAvgOrderByAggregateInput
    _max?: courierMaxOrderByAggregateInput
    _min?: courierMinOrderByAggregateInput
    _sum?: courierSumOrderByAggregateInput
  }

  export type courierScalarWhereWithAggregatesInput = {
    AND?: courierScalarWhereWithAggregatesInput | courierScalarWhereWithAggregatesInput[]
    OR?: courierScalarWhereWithAggregatesInput[]
    NOT?: courierScalarWhereWithAggregatesInput | courierScalarWhereWithAggregatesInput[]
    courier_id?: IntWithAggregatesFilter<"courier"> | number
    name?: StringWithAggregatesFilter<"courier"> | string
    email?: StringWithAggregatesFilter<"courier"> | string
    password?: StringNullableWithAggregatesFilter<"courier"> | string | null
    phone?: StringNullableWithAggregatesFilter<"courier"> | string | null
    date_of_birth?: DateTimeNullableWithAggregatesFilter<"courier"> | Date | string | null
    address?: StringNullableWithAggregatesFilter<"courier"> | string | null
    account_number?: StringNullableWithAggregatesFilter<"courier"> | string | null
    nik?: StringNullableWithAggregatesFilter<"courier"> | string | null
    ktp_url?: StringNullableWithAggregatesFilter<"courier"> | string | null
    kk_url?: StringNullableWithAggregatesFilter<"courier"> | string | null
    photo?: StringNullableWithAggregatesFilter<"courier"> | string | null
    is_verified?: BoolNullableWithAggregatesFilter<"courier"> | boolean | null
    status?: Enumcourier_statusNullableWithAggregatesFilter<"courier"> | $Enums.courier_status | null
    otp_code?: StringNullableWithAggregatesFilter<"courier"> | string | null
    otp_expiry?: DateTimeNullableWithAggregatesFilter<"courier"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"courier"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"courier"> | Date | string | null
  }

  export type courier_pointsWhereInput = {
    AND?: courier_pointsWhereInput | courier_pointsWhereInput[]
    OR?: courier_pointsWhereInput[]
    NOT?: courier_pointsWhereInput | courier_pointsWhereInput[]
    points_id?: IntFilter<"courier_points"> | number
    courier_id?: IntNullableFilter<"courier_points"> | number | null
    total_points?: IntNullableFilter<"courier_points"> | number | null
    created_at?: DateTimeNullableFilter<"courier_points"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"courier_points"> | Date | string | null
    courier?: XOR<CourierNullableRelationFilter, courierWhereInput> | null
  }

  export type courier_pointsOrderByWithRelationInput = {
    points_id?: SortOrder
    courier_id?: SortOrderInput | SortOrder
    total_points?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    courier?: courierOrderByWithRelationInput
  }

  export type courier_pointsWhereUniqueInput = Prisma.AtLeast<{
    points_id?: number
    AND?: courier_pointsWhereInput | courier_pointsWhereInput[]
    OR?: courier_pointsWhereInput[]
    NOT?: courier_pointsWhereInput | courier_pointsWhereInput[]
    courier_id?: IntNullableFilter<"courier_points"> | number | null
    total_points?: IntNullableFilter<"courier_points"> | number | null
    created_at?: DateTimeNullableFilter<"courier_points"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"courier_points"> | Date | string | null
    courier?: XOR<CourierNullableRelationFilter, courierWhereInput> | null
  }, "points_id">

  export type courier_pointsOrderByWithAggregationInput = {
    points_id?: SortOrder
    courier_id?: SortOrderInput | SortOrder
    total_points?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: courier_pointsCountOrderByAggregateInput
    _avg?: courier_pointsAvgOrderByAggregateInput
    _max?: courier_pointsMaxOrderByAggregateInput
    _min?: courier_pointsMinOrderByAggregateInput
    _sum?: courier_pointsSumOrderByAggregateInput
  }

  export type courier_pointsScalarWhereWithAggregatesInput = {
    AND?: courier_pointsScalarWhereWithAggregatesInput | courier_pointsScalarWhereWithAggregatesInput[]
    OR?: courier_pointsScalarWhereWithAggregatesInput[]
    NOT?: courier_pointsScalarWhereWithAggregatesInput | courier_pointsScalarWhereWithAggregatesInput[]
    points_id?: IntWithAggregatesFilter<"courier_points"> | number
    courier_id?: IntNullableWithAggregatesFilter<"courier_points"> | number | null
    total_points?: IntNullableWithAggregatesFilter<"courier_points"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"courier_points"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"courier_points"> | Date | string | null
  }

  export type dropboxWhereInput = {
    AND?: dropboxWhereInput | dropboxWhereInput[]
    OR?: dropboxWhereInput[]
    NOT?: dropboxWhereInput | dropboxWhereInput[]
    dropbox_id?: IntFilter<"dropbox"> | number
    name?: StringFilter<"dropbox"> | string
    address?: StringFilter<"dropbox"> | string
    district_address?: Enumdropbox_district_addressNullableFilter<"dropbox"> | $Enums.dropbox_district_address | null
    longitude?: DecimalNullableFilter<"dropbox"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"dropbox"> | Decimal | DecimalJsLike | number | string | null
    capacity?: IntNullableFilter<"dropbox"> | number | null
    status?: Enumdropbox_statusNullableFilter<"dropbox"> | $Enums.dropbox_status | null
    created_at?: DateTimeNullableFilter<"dropbox"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"dropbox"> | Date | string | null
    pickup_waste?: Pickup_wasteListRelationFilter
  }

  export type dropboxOrderByWithRelationInput = {
    dropbox_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    district_address?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    pickup_waste?: pickup_wasteOrderByRelationAggregateInput
  }

  export type dropboxWhereUniqueInput = Prisma.AtLeast<{
    dropbox_id?: number
    AND?: dropboxWhereInput | dropboxWhereInput[]
    OR?: dropboxWhereInput[]
    NOT?: dropboxWhereInput | dropboxWhereInput[]
    name?: StringFilter<"dropbox"> | string
    address?: StringFilter<"dropbox"> | string
    district_address?: Enumdropbox_district_addressNullableFilter<"dropbox"> | $Enums.dropbox_district_address | null
    longitude?: DecimalNullableFilter<"dropbox"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableFilter<"dropbox"> | Decimal | DecimalJsLike | number | string | null
    capacity?: IntNullableFilter<"dropbox"> | number | null
    status?: Enumdropbox_statusNullableFilter<"dropbox"> | $Enums.dropbox_status | null
    created_at?: DateTimeNullableFilter<"dropbox"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"dropbox"> | Date | string | null
    pickup_waste?: Pickup_wasteListRelationFilter
  }, "dropbox_id">

  export type dropboxOrderByWithAggregationInput = {
    dropbox_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    district_address?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: dropboxCountOrderByAggregateInput
    _avg?: dropboxAvgOrderByAggregateInput
    _max?: dropboxMaxOrderByAggregateInput
    _min?: dropboxMinOrderByAggregateInput
    _sum?: dropboxSumOrderByAggregateInput
  }

  export type dropboxScalarWhereWithAggregatesInput = {
    AND?: dropboxScalarWhereWithAggregatesInput | dropboxScalarWhereWithAggregatesInput[]
    OR?: dropboxScalarWhereWithAggregatesInput[]
    NOT?: dropboxScalarWhereWithAggregatesInput | dropboxScalarWhereWithAggregatesInput[]
    dropbox_id?: IntWithAggregatesFilter<"dropbox"> | number
    name?: StringWithAggregatesFilter<"dropbox"> | string
    address?: StringWithAggregatesFilter<"dropbox"> | string
    district_address?: Enumdropbox_district_addressNullableWithAggregatesFilter<"dropbox"> | $Enums.dropbox_district_address | null
    longitude?: DecimalNullableWithAggregatesFilter<"dropbox"> | Decimal | DecimalJsLike | number | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"dropbox"> | Decimal | DecimalJsLike | number | string | null
    capacity?: IntNullableWithAggregatesFilter<"dropbox"> | number | null
    status?: Enumdropbox_statusNullableWithAggregatesFilter<"dropbox"> | $Enums.dropbox_status | null
    created_at?: DateTimeNullableWithAggregatesFilter<"dropbox"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"dropbox"> | Date | string | null
  }

  export type managementWhereInput = {
    AND?: managementWhereInput | managementWhereInput[]
    OR?: managementWhereInput[]
    NOT?: managementWhereInput | managementWhereInput[]
    management_id?: IntFilter<"management"> | number
    name?: StringFilter<"management"> | string
    email?: StringFilter<"management"> | string
    password?: StringNullableFilter<"management"> | string | null
    date_of_birth?: DateTimeNullableFilter<"management"> | Date | string | null
    address?: StringNullableFilter<"management"> | string | null
    phone?: StringNullableFilter<"management"> | string | null
    photo?: StringNullableFilter<"management"> | string | null
    is_verified?: BoolNullableFilter<"management"> | boolean | null
    is_admin?: BoolNullableFilter<"management"> | boolean | null
    otp_code?: StringNullableFilter<"management"> | string | null
    otp_expiry?: DateTimeNullableFilter<"management"> | Date | string | null
    created_at?: DateTimeNullableFilter<"management"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"management"> | Date | string | null
    pickup_waste?: Pickup_wasteListRelationFilter
  }

  export type managementOrderByWithRelationInput = {
    management_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expiry?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    pickup_waste?: pickup_wasteOrderByRelationAggregateInput
  }

  export type managementWhereUniqueInput = Prisma.AtLeast<{
    management_id?: number
    email?: string
    AND?: managementWhereInput | managementWhereInput[]
    OR?: managementWhereInput[]
    NOT?: managementWhereInput | managementWhereInput[]
    name?: StringFilter<"management"> | string
    password?: StringNullableFilter<"management"> | string | null
    date_of_birth?: DateTimeNullableFilter<"management"> | Date | string | null
    address?: StringNullableFilter<"management"> | string | null
    phone?: StringNullableFilter<"management"> | string | null
    photo?: StringNullableFilter<"management"> | string | null
    is_verified?: BoolNullableFilter<"management"> | boolean | null
    is_admin?: BoolNullableFilter<"management"> | boolean | null
    otp_code?: StringNullableFilter<"management"> | string | null
    otp_expiry?: DateTimeNullableFilter<"management"> | Date | string | null
    created_at?: DateTimeNullableFilter<"management"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"management"> | Date | string | null
    pickup_waste?: Pickup_wasteListRelationFilter
  }, "management_id" | "email">

  export type managementOrderByWithAggregationInput = {
    management_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    date_of_birth?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    is_verified?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    otp_code?: SortOrderInput | SortOrder
    otp_expiry?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: managementCountOrderByAggregateInput
    _avg?: managementAvgOrderByAggregateInput
    _max?: managementMaxOrderByAggregateInput
    _min?: managementMinOrderByAggregateInput
    _sum?: managementSumOrderByAggregateInput
  }

  export type managementScalarWhereWithAggregatesInput = {
    AND?: managementScalarWhereWithAggregatesInput | managementScalarWhereWithAggregatesInput[]
    OR?: managementScalarWhereWithAggregatesInput[]
    NOT?: managementScalarWhereWithAggregatesInput | managementScalarWhereWithAggregatesInput[]
    management_id?: IntWithAggregatesFilter<"management"> | number
    name?: StringWithAggregatesFilter<"management"> | string
    email?: StringWithAggregatesFilter<"management"> | string
    password?: StringNullableWithAggregatesFilter<"management"> | string | null
    date_of_birth?: DateTimeNullableWithAggregatesFilter<"management"> | Date | string | null
    address?: StringNullableWithAggregatesFilter<"management"> | string | null
    phone?: StringNullableWithAggregatesFilter<"management"> | string | null
    photo?: StringNullableWithAggregatesFilter<"management"> | string | null
    is_verified?: BoolNullableWithAggregatesFilter<"management"> | boolean | null
    is_admin?: BoolNullableWithAggregatesFilter<"management"> | boolean | null
    otp_code?: StringNullableWithAggregatesFilter<"management"> | string | null
    otp_expiry?: DateTimeNullableWithAggregatesFilter<"management"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"management"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"management"> | Date | string | null
  }

  export type pickup_wasteWhereInput = {
    AND?: pickup_wasteWhereInput | pickup_wasteWhereInput[]
    OR?: pickup_wasteWhereInput[]
    NOT?: pickup_wasteWhereInput | pickup_wasteWhereInput[]
    pickup_id?: IntFilter<"pickup_waste"> | number
    pickup_date?: DateTimeFilter<"pickup_waste"> | Date | string
    pickup_address?: StringFilter<"pickup_waste"> | string
    pickup_status?: Enumpickup_waste_pickup_statusNullableFilter<"pickup_waste"> | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: IntNullableFilter<"pickup_waste"> | number | null
    courier_id?: IntNullableFilter<"pickup_waste"> | number | null
    community_id?: IntNullableFilter<"pickup_waste"> | number | null
    management_id?: IntNullableFilter<"pickup_waste"> | number | null
    created_at?: DateTimeNullableFilter<"pickup_waste"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"pickup_waste"> | Date | string | null
    dropbox?: XOR<DropboxNullableRelationFilter, dropboxWhereInput> | null
    courier?: XOR<CourierNullableRelationFilter, courierWhereInput> | null
    community?: XOR<CommunityNullableRelationFilter, communityWhereInput> | null
    management?: XOR<ManagementNullableRelationFilter, managementWhereInput> | null
  }

  export type pickup_wasteOrderByWithRelationInput = {
    pickup_id?: SortOrder
    pickup_date?: SortOrder
    pickup_address?: SortOrder
    pickup_status?: SortOrderInput | SortOrder
    dropbox_id?: SortOrderInput | SortOrder
    courier_id?: SortOrderInput | SortOrder
    community_id?: SortOrderInput | SortOrder
    management_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    dropbox?: dropboxOrderByWithRelationInput
    courier?: courierOrderByWithRelationInput
    community?: communityOrderByWithRelationInput
    management?: managementOrderByWithRelationInput
  }

  export type pickup_wasteWhereUniqueInput = Prisma.AtLeast<{
    pickup_id?: number
    AND?: pickup_wasteWhereInput | pickup_wasteWhereInput[]
    OR?: pickup_wasteWhereInput[]
    NOT?: pickup_wasteWhereInput | pickup_wasteWhereInput[]
    pickup_date?: DateTimeFilter<"pickup_waste"> | Date | string
    pickup_address?: StringFilter<"pickup_waste"> | string
    pickup_status?: Enumpickup_waste_pickup_statusNullableFilter<"pickup_waste"> | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: IntNullableFilter<"pickup_waste"> | number | null
    courier_id?: IntNullableFilter<"pickup_waste"> | number | null
    community_id?: IntNullableFilter<"pickup_waste"> | number | null
    management_id?: IntNullableFilter<"pickup_waste"> | number | null
    created_at?: DateTimeNullableFilter<"pickup_waste"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"pickup_waste"> | Date | string | null
    dropbox?: XOR<DropboxNullableRelationFilter, dropboxWhereInput> | null
    courier?: XOR<CourierNullableRelationFilter, courierWhereInput> | null
    community?: XOR<CommunityNullableRelationFilter, communityWhereInput> | null
    management?: XOR<ManagementNullableRelationFilter, managementWhereInput> | null
  }, "pickup_id">

  export type pickup_wasteOrderByWithAggregationInput = {
    pickup_id?: SortOrder
    pickup_date?: SortOrder
    pickup_address?: SortOrder
    pickup_status?: SortOrderInput | SortOrder
    dropbox_id?: SortOrderInput | SortOrder
    courier_id?: SortOrderInput | SortOrder
    community_id?: SortOrderInput | SortOrder
    management_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: pickup_wasteCountOrderByAggregateInput
    _avg?: pickup_wasteAvgOrderByAggregateInput
    _max?: pickup_wasteMaxOrderByAggregateInput
    _min?: pickup_wasteMinOrderByAggregateInput
    _sum?: pickup_wasteSumOrderByAggregateInput
  }

  export type pickup_wasteScalarWhereWithAggregatesInput = {
    AND?: pickup_wasteScalarWhereWithAggregatesInput | pickup_wasteScalarWhereWithAggregatesInput[]
    OR?: pickup_wasteScalarWhereWithAggregatesInput[]
    NOT?: pickup_wasteScalarWhereWithAggregatesInput | pickup_wasteScalarWhereWithAggregatesInput[]
    pickup_id?: IntWithAggregatesFilter<"pickup_waste"> | number
    pickup_date?: DateTimeWithAggregatesFilter<"pickup_waste"> | Date | string
    pickup_address?: StringWithAggregatesFilter<"pickup_waste"> | string
    pickup_status?: Enumpickup_waste_pickup_statusNullableWithAggregatesFilter<"pickup_waste"> | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: IntNullableWithAggregatesFilter<"pickup_waste"> | number | null
    courier_id?: IntNullableWithAggregatesFilter<"pickup_waste"> | number | null
    community_id?: IntNullableWithAggregatesFilter<"pickup_waste"> | number | null
    management_id?: IntNullableWithAggregatesFilter<"pickup_waste"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"pickup_waste"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"pickup_waste"> | Date | string | null
  }

  export type wasteWhereInput = {
    AND?: wasteWhereInput | wasteWhereInput[]
    OR?: wasteWhereInput[]
    NOT?: wasteWhereInput | wasteWhereInput[]
    waste_id?: IntFilter<"waste"> | number
    waste_name?: StringFilter<"waste"> | string
    point?: IntNullableFilter<"waste"> | number | null
    waste_type_id?: IntNullableFilter<"waste"> | number | null
    image?: StringNullableFilter<"waste"> | string | null
    description?: StringNullableFilter<"waste"> | string | null
    created_at?: DateTimeNullableFilter<"waste"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"waste"> | Date | string | null
    waste_type?: XOR<Waste_typeNullableRelationFilter, waste_typeWhereInput> | null
  }

  export type wasteOrderByWithRelationInput = {
    waste_id?: SortOrder
    waste_name?: SortOrder
    point?: SortOrderInput | SortOrder
    waste_type_id?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    waste_type?: waste_typeOrderByWithRelationInput
  }

  export type wasteWhereUniqueInput = Prisma.AtLeast<{
    waste_id?: number
    AND?: wasteWhereInput | wasteWhereInput[]
    OR?: wasteWhereInput[]
    NOT?: wasteWhereInput | wasteWhereInput[]
    waste_name?: StringFilter<"waste"> | string
    point?: IntNullableFilter<"waste"> | number | null
    waste_type_id?: IntNullableFilter<"waste"> | number | null
    image?: StringNullableFilter<"waste"> | string | null
    description?: StringNullableFilter<"waste"> | string | null
    created_at?: DateTimeNullableFilter<"waste"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"waste"> | Date | string | null
    waste_type?: XOR<Waste_typeNullableRelationFilter, waste_typeWhereInput> | null
  }, "waste_id">

  export type wasteOrderByWithAggregationInput = {
    waste_id?: SortOrder
    waste_name?: SortOrder
    point?: SortOrderInput | SortOrder
    waste_type_id?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: wasteCountOrderByAggregateInput
    _avg?: wasteAvgOrderByAggregateInput
    _max?: wasteMaxOrderByAggregateInput
    _min?: wasteMinOrderByAggregateInput
    _sum?: wasteSumOrderByAggregateInput
  }

  export type wasteScalarWhereWithAggregatesInput = {
    AND?: wasteScalarWhereWithAggregatesInput | wasteScalarWhereWithAggregatesInput[]
    OR?: wasteScalarWhereWithAggregatesInput[]
    NOT?: wasteScalarWhereWithAggregatesInput | wasteScalarWhereWithAggregatesInput[]
    waste_id?: IntWithAggregatesFilter<"waste"> | number
    waste_name?: StringWithAggregatesFilter<"waste"> | string
    point?: IntNullableWithAggregatesFilter<"waste"> | number | null
    waste_type_id?: IntNullableWithAggregatesFilter<"waste"> | number | null
    image?: StringNullableWithAggregatesFilter<"waste"> | string | null
    description?: StringNullableWithAggregatesFilter<"waste"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"waste"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"waste"> | Date | string | null
  }

  export type waste_typeWhereInput = {
    AND?: waste_typeWhereInput | waste_typeWhereInput[]
    OR?: waste_typeWhereInput[]
    NOT?: waste_typeWhereInput | waste_typeWhereInput[]
    waste_type_id?: IntFilter<"waste_type"> | number
    waste_type_name?: Enumwaste_type_waste_type_nameFilter<"waste_type"> | $Enums.waste_type_waste_type_name
    image?: StringNullableFilter<"waste_type"> | string | null
    created_at?: DateTimeNullableFilter<"waste_type"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"waste_type"> | Date | string | null
    waste?: WasteListRelationFilter
  }

  export type waste_typeOrderByWithRelationInput = {
    waste_type_id?: SortOrder
    waste_type_name?: SortOrder
    image?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    waste?: wasteOrderByRelationAggregateInput
  }

  export type waste_typeWhereUniqueInput = Prisma.AtLeast<{
    waste_type_id?: number
    AND?: waste_typeWhereInput | waste_typeWhereInput[]
    OR?: waste_typeWhereInput[]
    NOT?: waste_typeWhereInput | waste_typeWhereInput[]
    waste_type_name?: Enumwaste_type_waste_type_nameFilter<"waste_type"> | $Enums.waste_type_waste_type_name
    image?: StringNullableFilter<"waste_type"> | string | null
    created_at?: DateTimeNullableFilter<"waste_type"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"waste_type"> | Date | string | null
    waste?: WasteListRelationFilter
  }, "waste_type_id">

  export type waste_typeOrderByWithAggregationInput = {
    waste_type_id?: SortOrder
    waste_type_name?: SortOrder
    image?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: waste_typeCountOrderByAggregateInput
    _avg?: waste_typeAvgOrderByAggregateInput
    _max?: waste_typeMaxOrderByAggregateInput
    _min?: waste_typeMinOrderByAggregateInput
    _sum?: waste_typeSumOrderByAggregateInput
  }

  export type waste_typeScalarWhereWithAggregatesInput = {
    AND?: waste_typeScalarWhereWithAggregatesInput | waste_typeScalarWhereWithAggregatesInput[]
    OR?: waste_typeScalarWhereWithAggregatesInput[]
    NOT?: waste_typeScalarWhereWithAggregatesInput | waste_typeScalarWhereWithAggregatesInput[]
    waste_type_id?: IntWithAggregatesFilter<"waste_type"> | number
    waste_type_name?: Enumwaste_type_waste_type_nameWithAggregatesFilter<"waste_type"> | $Enums.waste_type_waste_type_name
    image?: StringNullableWithAggregatesFilter<"waste_type"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"waste_type"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"waste_type"> | Date | string | null
  }

  export type communityCreateInput = {
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    community_points?: community_pointsCreateNestedManyWithoutCommunityInput
    pickup_waste?: pickup_wasteCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateInput = {
    community_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    community_points?: community_pointsUncheckedCreateNestedManyWithoutCommunityInput
    pickup_waste?: pickup_wasteUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community_points?: community_pointsUpdateManyWithoutCommunityNestedInput
    pickup_waste?: pickup_wasteUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateInput = {
    community_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community_points?: community_pointsUncheckedUpdateManyWithoutCommunityNestedInput
    pickup_waste?: pickup_wasteUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type communityCreateManyInput = {
    community_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type communityUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type communityUncheckedUpdateManyInput = {
    community_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_pointsCreateInput = {
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    community?: communityCreateNestedOneWithoutCommunity_pointsInput
  }

  export type community_pointsUncheckedCreateInput = {
    points_id?: number
    community_id?: number | null
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type community_pointsUpdateInput = {
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community?: communityUpdateOneWithoutCommunity_pointsNestedInput
  }

  export type community_pointsUncheckedUpdateInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_pointsCreateManyInput = {
    points_id?: number
    community_id?: number | null
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type community_pointsUpdateManyMutationInput = {
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_pointsUncheckedUpdateManyInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courierCreateInput = {
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    courier_points?: courier_pointsCreateNestedManyWithoutCourierInput
    pickup_waste?: pickup_wasteCreateNestedManyWithoutCourierInput
  }

  export type courierUncheckedCreateInput = {
    courier_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    courier_points?: courier_pointsUncheckedCreateNestedManyWithoutCourierInput
    pickup_waste?: pickup_wasteUncheckedCreateNestedManyWithoutCourierInput
  }

  export type courierUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courier_points?: courier_pointsUpdateManyWithoutCourierNestedInput
    pickup_waste?: pickup_wasteUpdateManyWithoutCourierNestedInput
  }

  export type courierUncheckedUpdateInput = {
    courier_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courier_points?: courier_pointsUncheckedUpdateManyWithoutCourierNestedInput
    pickup_waste?: pickup_wasteUncheckedUpdateManyWithoutCourierNestedInput
  }

  export type courierCreateManyInput = {
    courier_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type courierUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courierUncheckedUpdateManyInput = {
    courier_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courier_pointsCreateInput = {
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    courier?: courierCreateNestedOneWithoutCourier_pointsInput
  }

  export type courier_pointsUncheckedCreateInput = {
    points_id?: number
    courier_id?: number | null
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type courier_pointsUpdateInput = {
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courier?: courierUpdateOneWithoutCourier_pointsNestedInput
  }

  export type courier_pointsUncheckedUpdateInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courier_pointsCreateManyInput = {
    points_id?: number
    courier_id?: number | null
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type courier_pointsUpdateManyMutationInput = {
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courier_pointsUncheckedUpdateManyInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dropboxCreateInput = {
    name: string
    address: string
    district_address?: $Enums.dropbox_district_address | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    capacity?: number | null
    status?: $Enums.dropbox_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteCreateNestedManyWithoutDropboxInput
  }

  export type dropboxUncheckedCreateInput = {
    dropbox_id?: number
    name: string
    address: string
    district_address?: $Enums.dropbox_district_address | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    capacity?: number | null
    status?: $Enums.dropbox_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteUncheckedCreateNestedManyWithoutDropboxInput
  }

  export type dropboxUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    district_address?: NullableEnumdropbox_district_addressFieldUpdateOperationsInput | $Enums.dropbox_district_address | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumdropbox_statusFieldUpdateOperationsInput | $Enums.dropbox_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUpdateManyWithoutDropboxNestedInput
  }

  export type dropboxUncheckedUpdateInput = {
    dropbox_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    district_address?: NullableEnumdropbox_district_addressFieldUpdateOperationsInput | $Enums.dropbox_district_address | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumdropbox_statusFieldUpdateOperationsInput | $Enums.dropbox_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUncheckedUpdateManyWithoutDropboxNestedInput
  }

  export type dropboxCreateManyInput = {
    dropbox_id?: number
    name: string
    address: string
    district_address?: $Enums.dropbox_district_address | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    capacity?: number | null
    status?: $Enums.dropbox_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type dropboxUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    district_address?: NullableEnumdropbox_district_addressFieldUpdateOperationsInput | $Enums.dropbox_district_address | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumdropbox_statusFieldUpdateOperationsInput | $Enums.dropbox_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dropboxUncheckedUpdateManyInput = {
    dropbox_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    district_address?: NullableEnumdropbox_district_addressFieldUpdateOperationsInput | $Enums.dropbox_district_address | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumdropbox_statusFieldUpdateOperationsInput | $Enums.dropbox_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type managementCreateInput = {
    name: string
    email: string
    password?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    phone?: string | null
    photo?: string | null
    is_verified?: boolean | null
    is_admin?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteCreateNestedManyWithoutManagementInput
  }

  export type managementUncheckedCreateInput = {
    management_id?: number
    name: string
    email: string
    password?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    phone?: string | null
    photo?: string | null
    is_verified?: boolean | null
    is_admin?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteUncheckedCreateNestedManyWithoutManagementInput
  }

  export type managementUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUpdateManyWithoutManagementNestedInput
  }

  export type managementUncheckedUpdateInput = {
    management_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUncheckedUpdateManyWithoutManagementNestedInput
  }

  export type managementCreateManyInput = {
    management_id?: number
    name: string
    email: string
    password?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    phone?: string | null
    photo?: string | null
    is_verified?: boolean | null
    is_admin?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type managementUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type managementUncheckedUpdateManyInput = {
    management_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteCreateInput = {
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    dropbox?: dropboxCreateNestedOneWithoutPickup_wasteInput
    courier?: courierCreateNestedOneWithoutPickup_wasteInput
    community?: communityCreateNestedOneWithoutPickup_wasteInput
    management?: managementCreateNestedOneWithoutPickup_wasteInput
  }

  export type pickup_wasteUncheckedCreateInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    courier_id?: number | null
    community_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteUpdateInput = {
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dropbox?: dropboxUpdateOneWithoutPickup_wasteNestedInput
    courier?: courierUpdateOneWithoutPickup_wasteNestedInput
    community?: communityUpdateOneWithoutPickup_wasteNestedInput
    management?: managementUpdateOneWithoutPickup_wasteNestedInput
  }

  export type pickup_wasteUncheckedUpdateInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteCreateManyInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    courier_id?: number | null
    community_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteUpdateManyMutationInput = {
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUncheckedUpdateManyInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteCreateInput = {
    waste_name: string
    point?: number | null
    image?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    waste_type?: waste_typeCreateNestedOneWithoutWasteInput
  }

  export type wasteUncheckedCreateInput = {
    waste_id?: number
    waste_name: string
    point?: number | null
    waste_type_id?: number | null
    image?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type wasteUpdateInput = {
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waste_type?: waste_typeUpdateOneWithoutWasteNestedInput
  }

  export type wasteUncheckedUpdateInput = {
    waste_id?: IntFieldUpdateOperationsInput | number
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    waste_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteCreateManyInput = {
    waste_id?: number
    waste_name: string
    point?: number | null
    waste_type_id?: number | null
    image?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type wasteUpdateManyMutationInput = {
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteUncheckedUpdateManyInput = {
    waste_id?: IntFieldUpdateOperationsInput | number
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    waste_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type waste_typeCreateInput = {
    waste_type_name: $Enums.waste_type_waste_type_name
    image?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    waste?: wasteCreateNestedManyWithoutWaste_typeInput
  }

  export type waste_typeUncheckedCreateInput = {
    waste_type_id?: number
    waste_type_name: $Enums.waste_type_waste_type_name
    image?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    waste?: wasteUncheckedCreateNestedManyWithoutWaste_typeInput
  }

  export type waste_typeUpdateInput = {
    waste_type_name?: Enumwaste_type_waste_type_nameFieldUpdateOperationsInput | $Enums.waste_type_waste_type_name
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waste?: wasteUpdateManyWithoutWaste_typeNestedInput
  }

  export type waste_typeUncheckedUpdateInput = {
    waste_type_id?: IntFieldUpdateOperationsInput | number
    waste_type_name?: Enumwaste_type_waste_type_nameFieldUpdateOperationsInput | $Enums.waste_type_waste_type_name
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waste?: wasteUncheckedUpdateManyWithoutWaste_typeNestedInput
  }

  export type waste_typeCreateManyInput = {
    waste_type_id?: number
    waste_type_name: $Enums.waste_type_waste_type_name
    image?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type waste_typeUpdateManyMutationInput = {
    waste_type_name?: Enumwaste_type_waste_type_nameFieldUpdateOperationsInput | $Enums.waste_type_waste_type_name
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type waste_typeUncheckedUpdateManyInput = {
    waste_type_id?: IntFieldUpdateOperationsInput | number
    waste_type_name?: Enumwaste_type_waste_type_nameFieldUpdateOperationsInput | $Enums.waste_type_waste_type_name
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Community_pointsListRelationFilter = {
    every?: community_pointsWhereInput
    some?: community_pointsWhereInput
    none?: community_pointsWhereInput
  }

  export type Pickup_wasteListRelationFilter = {
    every?: pickup_wasteWhereInput
    some?: pickup_wasteWhereInput
    none?: pickup_wasteWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type community_pointsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pickup_wasteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type communityCountOrderByAggregateInput = {
    community_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type communityAvgOrderByAggregateInput = {
    community_id?: SortOrder
  }

  export type communityMaxOrderByAggregateInput = {
    community_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type communityMinOrderByAggregateInput = {
    community_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type communitySumOrderByAggregateInput = {
    community_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CommunityNullableRelationFilter = {
    is?: communityWhereInput | null
    isNot?: communityWhereInput | null
  }

  export type community_pointsCountOrderByAggregateInput = {
    points_id?: SortOrder
    community_id?: SortOrder
    total_points?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_pointsAvgOrderByAggregateInput = {
    points_id?: SortOrder
    community_id?: SortOrder
    total_points?: SortOrder
  }

  export type community_pointsMaxOrderByAggregateInput = {
    points_id?: SortOrder
    community_id?: SortOrder
    total_points?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_pointsMinOrderByAggregateInput = {
    points_id?: SortOrder
    community_id?: SortOrder
    total_points?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type community_pointsSumOrderByAggregateInput = {
    points_id?: SortOrder
    community_id?: SortOrder
    total_points?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Enumcourier_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.courier_status | Enumcourier_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.courier_status[] | null
    notIn?: $Enums.courier_status[] | null
    not?: NestedEnumcourier_statusNullableFilter<$PrismaModel> | $Enums.courier_status | null
  }

  export type Courier_pointsListRelationFilter = {
    every?: courier_pointsWhereInput
    some?: courier_pointsWhereInput
    none?: courier_pointsWhereInput
  }

  export type courier_pointsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type courierCountOrderByAggregateInput = {
    courier_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    account_number?: SortOrder
    nik?: SortOrder
    ktp_url?: SortOrder
    kk_url?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type courierAvgOrderByAggregateInput = {
    courier_id?: SortOrder
  }

  export type courierMaxOrderByAggregateInput = {
    courier_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    account_number?: SortOrder
    nik?: SortOrder
    ktp_url?: SortOrder
    kk_url?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type courierMinOrderByAggregateInput = {
    courier_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    phone?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    account_number?: SortOrder
    nik?: SortOrder
    ktp_url?: SortOrder
    kk_url?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type courierSumOrderByAggregateInput = {
    courier_id?: SortOrder
  }

  export type Enumcourier_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.courier_status | Enumcourier_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.courier_status[] | null
    notIn?: $Enums.courier_status[] | null
    not?: NestedEnumcourier_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.courier_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcourier_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcourier_statusNullableFilter<$PrismaModel>
  }

  export type CourierNullableRelationFilter = {
    is?: courierWhereInput | null
    isNot?: courierWhereInput | null
  }

  export type courier_pointsCountOrderByAggregateInput = {
    points_id?: SortOrder
    courier_id?: SortOrder
    total_points?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type courier_pointsAvgOrderByAggregateInput = {
    points_id?: SortOrder
    courier_id?: SortOrder
    total_points?: SortOrder
  }

  export type courier_pointsMaxOrderByAggregateInput = {
    points_id?: SortOrder
    courier_id?: SortOrder
    total_points?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type courier_pointsMinOrderByAggregateInput = {
    points_id?: SortOrder
    courier_id?: SortOrder
    total_points?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type courier_pointsSumOrderByAggregateInput = {
    points_id?: SortOrder
    courier_id?: SortOrder
    total_points?: SortOrder
  }

  export type Enumdropbox_district_addressNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_district_address | Enumdropbox_district_addressFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_district_address[] | null
    notIn?: $Enums.dropbox_district_address[] | null
    not?: NestedEnumdropbox_district_addressNullableFilter<$PrismaModel> | $Enums.dropbox_district_address | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Enumdropbox_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_status | Enumdropbox_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_status[] | null
    notIn?: $Enums.dropbox_status[] | null
    not?: NestedEnumdropbox_statusNullableFilter<$PrismaModel> | $Enums.dropbox_status | null
  }

  export type dropboxCountOrderByAggregateInput = {
    dropbox_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    district_address?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type dropboxAvgOrderByAggregateInput = {
    dropbox_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    capacity?: SortOrder
  }

  export type dropboxMaxOrderByAggregateInput = {
    dropbox_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    district_address?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type dropboxMinOrderByAggregateInput = {
    dropbox_id?: SortOrder
    name?: SortOrder
    address?: SortOrder
    district_address?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type dropboxSumOrderByAggregateInput = {
    dropbox_id?: SortOrder
    longitude?: SortOrder
    latitude?: SortOrder
    capacity?: SortOrder
  }

  export type Enumdropbox_district_addressNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_district_address | Enumdropbox_district_addressFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_district_address[] | null
    notIn?: $Enums.dropbox_district_address[] | null
    not?: NestedEnumdropbox_district_addressNullableWithAggregatesFilter<$PrismaModel> | $Enums.dropbox_district_address | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdropbox_district_addressNullableFilter<$PrismaModel>
    _max?: NestedEnumdropbox_district_addressNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Enumdropbox_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_status | Enumdropbox_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_status[] | null
    notIn?: $Enums.dropbox_status[] | null
    not?: NestedEnumdropbox_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.dropbox_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdropbox_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumdropbox_statusNullableFilter<$PrismaModel>
  }

  export type managementCountOrderByAggregateInput = {
    management_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    is_admin?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type managementAvgOrderByAggregateInput = {
    management_id?: SortOrder
  }

  export type managementMaxOrderByAggregateInput = {
    management_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    is_admin?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type managementMinOrderByAggregateInput = {
    management_id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    photo?: SortOrder
    is_verified?: SortOrder
    is_admin?: SortOrder
    otp_code?: SortOrder
    otp_expiry?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type managementSumOrderByAggregateInput = {
    management_id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Enumpickup_waste_pickup_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.pickup_waste_pickup_status | Enumpickup_waste_pickup_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.pickup_waste_pickup_status[] | null
    notIn?: $Enums.pickup_waste_pickup_status[] | null
    not?: NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel> | $Enums.pickup_waste_pickup_status | null
  }

  export type DropboxNullableRelationFilter = {
    is?: dropboxWhereInput | null
    isNot?: dropboxWhereInput | null
  }

  export type ManagementNullableRelationFilter = {
    is?: managementWhereInput | null
    isNot?: managementWhereInput | null
  }

  export type pickup_wasteCountOrderByAggregateInput = {
    pickup_id?: SortOrder
    pickup_date?: SortOrder
    pickup_address?: SortOrder
    pickup_status?: SortOrder
    dropbox_id?: SortOrder
    courier_id?: SortOrder
    community_id?: SortOrder
    management_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type pickup_wasteAvgOrderByAggregateInput = {
    pickup_id?: SortOrder
    dropbox_id?: SortOrder
    courier_id?: SortOrder
    community_id?: SortOrder
    management_id?: SortOrder
  }

  export type pickup_wasteMaxOrderByAggregateInput = {
    pickup_id?: SortOrder
    pickup_date?: SortOrder
    pickup_address?: SortOrder
    pickup_status?: SortOrder
    dropbox_id?: SortOrder
    courier_id?: SortOrder
    community_id?: SortOrder
    management_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type pickup_wasteMinOrderByAggregateInput = {
    pickup_id?: SortOrder
    pickup_date?: SortOrder
    pickup_address?: SortOrder
    pickup_status?: SortOrder
    dropbox_id?: SortOrder
    courier_id?: SortOrder
    community_id?: SortOrder
    management_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type pickup_wasteSumOrderByAggregateInput = {
    pickup_id?: SortOrder
    dropbox_id?: SortOrder
    courier_id?: SortOrder
    community_id?: SortOrder
    management_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Enumpickup_waste_pickup_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pickup_waste_pickup_status | Enumpickup_waste_pickup_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.pickup_waste_pickup_status[] | null
    notIn?: $Enums.pickup_waste_pickup_status[] | null
    not?: NestedEnumpickup_waste_pickup_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.pickup_waste_pickup_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel>
  }

  export type Waste_typeNullableRelationFilter = {
    is?: waste_typeWhereInput | null
    isNot?: waste_typeWhereInput | null
  }

  export type wasteCountOrderByAggregateInput = {
    waste_id?: SortOrder
    waste_name?: SortOrder
    point?: SortOrder
    waste_type_id?: SortOrder
    image?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wasteAvgOrderByAggregateInput = {
    waste_id?: SortOrder
    point?: SortOrder
    waste_type_id?: SortOrder
  }

  export type wasteMaxOrderByAggregateInput = {
    waste_id?: SortOrder
    waste_name?: SortOrder
    point?: SortOrder
    waste_type_id?: SortOrder
    image?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wasteMinOrderByAggregateInput = {
    waste_id?: SortOrder
    waste_name?: SortOrder
    point?: SortOrder
    waste_type_id?: SortOrder
    image?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wasteSumOrderByAggregateInput = {
    waste_id?: SortOrder
    point?: SortOrder
    waste_type_id?: SortOrder
  }

  export type Enumwaste_type_waste_type_nameFilter<$PrismaModel = never> = {
    equals?: $Enums.waste_type_waste_type_name | Enumwaste_type_waste_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.waste_type_waste_type_name[]
    notIn?: $Enums.waste_type_waste_type_name[]
    not?: NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel> | $Enums.waste_type_waste_type_name
  }

  export type WasteListRelationFilter = {
    every?: wasteWhereInput
    some?: wasteWhereInput
    none?: wasteWhereInput
  }

  export type wasteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type waste_typeCountOrderByAggregateInput = {
    waste_type_id?: SortOrder
    waste_type_name?: SortOrder
    image?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type waste_typeAvgOrderByAggregateInput = {
    waste_type_id?: SortOrder
  }

  export type waste_typeMaxOrderByAggregateInput = {
    waste_type_id?: SortOrder
    waste_type_name?: SortOrder
    image?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type waste_typeMinOrderByAggregateInput = {
    waste_type_id?: SortOrder
    waste_type_name?: SortOrder
    image?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type waste_typeSumOrderByAggregateInput = {
    waste_type_id?: SortOrder
  }

  export type Enumwaste_type_waste_type_nameWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.waste_type_waste_type_name | Enumwaste_type_waste_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.waste_type_waste_type_name[]
    notIn?: $Enums.waste_type_waste_type_name[]
    not?: NestedEnumwaste_type_waste_type_nameWithAggregatesFilter<$PrismaModel> | $Enums.waste_type_waste_type_name
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel>
    _max?: NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel>
  }

  export type community_pointsCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_pointsCreateWithoutCommunityInput, community_pointsUncheckedCreateWithoutCommunityInput> | community_pointsCreateWithoutCommunityInput[] | community_pointsUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_pointsCreateOrConnectWithoutCommunityInput | community_pointsCreateOrConnectWithoutCommunityInput[]
    createMany?: community_pointsCreateManyCommunityInputEnvelope
    connect?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
  }

  export type pickup_wasteCreateNestedManyWithoutCommunityInput = {
    create?: XOR<pickup_wasteCreateWithoutCommunityInput, pickup_wasteUncheckedCreateWithoutCommunityInput> | pickup_wasteCreateWithoutCommunityInput[] | pickup_wasteUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCommunityInput | pickup_wasteCreateOrConnectWithoutCommunityInput[]
    createMany?: pickup_wasteCreateManyCommunityInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type community_pointsUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<community_pointsCreateWithoutCommunityInput, community_pointsUncheckedCreateWithoutCommunityInput> | community_pointsCreateWithoutCommunityInput[] | community_pointsUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_pointsCreateOrConnectWithoutCommunityInput | community_pointsCreateOrConnectWithoutCommunityInput[]
    createMany?: community_pointsCreateManyCommunityInputEnvelope
    connect?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
  }

  export type pickup_wasteUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<pickup_wasteCreateWithoutCommunityInput, pickup_wasteUncheckedCreateWithoutCommunityInput> | pickup_wasteCreateWithoutCommunityInput[] | pickup_wasteUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCommunityInput | pickup_wasteCreateOrConnectWithoutCommunityInput[]
    createMany?: pickup_wasteCreateManyCommunityInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type community_pointsUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_pointsCreateWithoutCommunityInput, community_pointsUncheckedCreateWithoutCommunityInput> | community_pointsCreateWithoutCommunityInput[] | community_pointsUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_pointsCreateOrConnectWithoutCommunityInput | community_pointsCreateOrConnectWithoutCommunityInput[]
    upsert?: community_pointsUpsertWithWhereUniqueWithoutCommunityInput | community_pointsUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_pointsCreateManyCommunityInputEnvelope
    set?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    disconnect?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    delete?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    connect?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    update?: community_pointsUpdateWithWhereUniqueWithoutCommunityInput | community_pointsUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_pointsUpdateManyWithWhereWithoutCommunityInput | community_pointsUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_pointsScalarWhereInput | community_pointsScalarWhereInput[]
  }

  export type pickup_wasteUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutCommunityInput, pickup_wasteUncheckedCreateWithoutCommunityInput> | pickup_wasteCreateWithoutCommunityInput[] | pickup_wasteUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCommunityInput | pickup_wasteCreateOrConnectWithoutCommunityInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutCommunityInput | pickup_wasteUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: pickup_wasteCreateManyCommunityInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutCommunityInput | pickup_wasteUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutCommunityInput | pickup_wasteUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type community_pointsUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<community_pointsCreateWithoutCommunityInput, community_pointsUncheckedCreateWithoutCommunityInput> | community_pointsCreateWithoutCommunityInput[] | community_pointsUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: community_pointsCreateOrConnectWithoutCommunityInput | community_pointsCreateOrConnectWithoutCommunityInput[]
    upsert?: community_pointsUpsertWithWhereUniqueWithoutCommunityInput | community_pointsUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: community_pointsCreateManyCommunityInputEnvelope
    set?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    disconnect?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    delete?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    connect?: community_pointsWhereUniqueInput | community_pointsWhereUniqueInput[]
    update?: community_pointsUpdateWithWhereUniqueWithoutCommunityInput | community_pointsUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: community_pointsUpdateManyWithWhereWithoutCommunityInput | community_pointsUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: community_pointsScalarWhereInput | community_pointsScalarWhereInput[]
  }

  export type pickup_wasteUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutCommunityInput, pickup_wasteUncheckedCreateWithoutCommunityInput> | pickup_wasteCreateWithoutCommunityInput[] | pickup_wasteUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCommunityInput | pickup_wasteCreateOrConnectWithoutCommunityInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutCommunityInput | pickup_wasteUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: pickup_wasteCreateManyCommunityInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutCommunityInput | pickup_wasteUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutCommunityInput | pickup_wasteUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type communityCreateNestedOneWithoutCommunity_pointsInput = {
    create?: XOR<communityCreateWithoutCommunity_pointsInput, communityUncheckedCreateWithoutCommunity_pointsInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_pointsInput
    connect?: communityWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type communityUpdateOneWithoutCommunity_pointsNestedInput = {
    create?: XOR<communityCreateWithoutCommunity_pointsInput, communityUncheckedCreateWithoutCommunity_pointsInput>
    connectOrCreate?: communityCreateOrConnectWithoutCommunity_pointsInput
    upsert?: communityUpsertWithoutCommunity_pointsInput
    disconnect?: communityWhereInput | boolean
    delete?: communityWhereInput | boolean
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutCommunity_pointsInput, communityUpdateWithoutCommunity_pointsInput>, communityUncheckedUpdateWithoutCommunity_pointsInput>
  }

  export type courier_pointsCreateNestedManyWithoutCourierInput = {
    create?: XOR<courier_pointsCreateWithoutCourierInput, courier_pointsUncheckedCreateWithoutCourierInput> | courier_pointsCreateWithoutCourierInput[] | courier_pointsUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: courier_pointsCreateOrConnectWithoutCourierInput | courier_pointsCreateOrConnectWithoutCourierInput[]
    createMany?: courier_pointsCreateManyCourierInputEnvelope
    connect?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
  }

  export type pickup_wasteCreateNestedManyWithoutCourierInput = {
    create?: XOR<pickup_wasteCreateWithoutCourierInput, pickup_wasteUncheckedCreateWithoutCourierInput> | pickup_wasteCreateWithoutCourierInput[] | pickup_wasteUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCourierInput | pickup_wasteCreateOrConnectWithoutCourierInput[]
    createMany?: pickup_wasteCreateManyCourierInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type courier_pointsUncheckedCreateNestedManyWithoutCourierInput = {
    create?: XOR<courier_pointsCreateWithoutCourierInput, courier_pointsUncheckedCreateWithoutCourierInput> | courier_pointsCreateWithoutCourierInput[] | courier_pointsUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: courier_pointsCreateOrConnectWithoutCourierInput | courier_pointsCreateOrConnectWithoutCourierInput[]
    createMany?: courier_pointsCreateManyCourierInputEnvelope
    connect?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
  }

  export type pickup_wasteUncheckedCreateNestedManyWithoutCourierInput = {
    create?: XOR<pickup_wasteCreateWithoutCourierInput, pickup_wasteUncheckedCreateWithoutCourierInput> | pickup_wasteCreateWithoutCourierInput[] | pickup_wasteUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCourierInput | pickup_wasteCreateOrConnectWithoutCourierInput[]
    createMany?: pickup_wasteCreateManyCourierInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type NullableEnumcourier_statusFieldUpdateOperationsInput = {
    set?: $Enums.courier_status | null
  }

  export type courier_pointsUpdateManyWithoutCourierNestedInput = {
    create?: XOR<courier_pointsCreateWithoutCourierInput, courier_pointsUncheckedCreateWithoutCourierInput> | courier_pointsCreateWithoutCourierInput[] | courier_pointsUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: courier_pointsCreateOrConnectWithoutCourierInput | courier_pointsCreateOrConnectWithoutCourierInput[]
    upsert?: courier_pointsUpsertWithWhereUniqueWithoutCourierInput | courier_pointsUpsertWithWhereUniqueWithoutCourierInput[]
    createMany?: courier_pointsCreateManyCourierInputEnvelope
    set?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    disconnect?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    delete?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    connect?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    update?: courier_pointsUpdateWithWhereUniqueWithoutCourierInput | courier_pointsUpdateWithWhereUniqueWithoutCourierInput[]
    updateMany?: courier_pointsUpdateManyWithWhereWithoutCourierInput | courier_pointsUpdateManyWithWhereWithoutCourierInput[]
    deleteMany?: courier_pointsScalarWhereInput | courier_pointsScalarWhereInput[]
  }

  export type pickup_wasteUpdateManyWithoutCourierNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutCourierInput, pickup_wasteUncheckedCreateWithoutCourierInput> | pickup_wasteCreateWithoutCourierInput[] | pickup_wasteUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCourierInput | pickup_wasteCreateOrConnectWithoutCourierInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutCourierInput | pickup_wasteUpsertWithWhereUniqueWithoutCourierInput[]
    createMany?: pickup_wasteCreateManyCourierInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutCourierInput | pickup_wasteUpdateWithWhereUniqueWithoutCourierInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutCourierInput | pickup_wasteUpdateManyWithWhereWithoutCourierInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type courier_pointsUncheckedUpdateManyWithoutCourierNestedInput = {
    create?: XOR<courier_pointsCreateWithoutCourierInput, courier_pointsUncheckedCreateWithoutCourierInput> | courier_pointsCreateWithoutCourierInput[] | courier_pointsUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: courier_pointsCreateOrConnectWithoutCourierInput | courier_pointsCreateOrConnectWithoutCourierInput[]
    upsert?: courier_pointsUpsertWithWhereUniqueWithoutCourierInput | courier_pointsUpsertWithWhereUniqueWithoutCourierInput[]
    createMany?: courier_pointsCreateManyCourierInputEnvelope
    set?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    disconnect?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    delete?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    connect?: courier_pointsWhereUniqueInput | courier_pointsWhereUniqueInput[]
    update?: courier_pointsUpdateWithWhereUniqueWithoutCourierInput | courier_pointsUpdateWithWhereUniqueWithoutCourierInput[]
    updateMany?: courier_pointsUpdateManyWithWhereWithoutCourierInput | courier_pointsUpdateManyWithWhereWithoutCourierInput[]
    deleteMany?: courier_pointsScalarWhereInput | courier_pointsScalarWhereInput[]
  }

  export type pickup_wasteUncheckedUpdateManyWithoutCourierNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutCourierInput, pickup_wasteUncheckedCreateWithoutCourierInput> | pickup_wasteCreateWithoutCourierInput[] | pickup_wasteUncheckedCreateWithoutCourierInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutCourierInput | pickup_wasteCreateOrConnectWithoutCourierInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutCourierInput | pickup_wasteUpsertWithWhereUniqueWithoutCourierInput[]
    createMany?: pickup_wasteCreateManyCourierInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutCourierInput | pickup_wasteUpdateWithWhereUniqueWithoutCourierInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutCourierInput | pickup_wasteUpdateManyWithWhereWithoutCourierInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type courierCreateNestedOneWithoutCourier_pointsInput = {
    create?: XOR<courierCreateWithoutCourier_pointsInput, courierUncheckedCreateWithoutCourier_pointsInput>
    connectOrCreate?: courierCreateOrConnectWithoutCourier_pointsInput
    connect?: courierWhereUniqueInput
  }

  export type courierUpdateOneWithoutCourier_pointsNestedInput = {
    create?: XOR<courierCreateWithoutCourier_pointsInput, courierUncheckedCreateWithoutCourier_pointsInput>
    connectOrCreate?: courierCreateOrConnectWithoutCourier_pointsInput
    upsert?: courierUpsertWithoutCourier_pointsInput
    disconnect?: courierWhereInput | boolean
    delete?: courierWhereInput | boolean
    connect?: courierWhereUniqueInput
    update?: XOR<XOR<courierUpdateToOneWithWhereWithoutCourier_pointsInput, courierUpdateWithoutCourier_pointsInput>, courierUncheckedUpdateWithoutCourier_pointsInput>
  }

  export type pickup_wasteCreateNestedManyWithoutDropboxInput = {
    create?: XOR<pickup_wasteCreateWithoutDropboxInput, pickup_wasteUncheckedCreateWithoutDropboxInput> | pickup_wasteCreateWithoutDropboxInput[] | pickup_wasteUncheckedCreateWithoutDropboxInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutDropboxInput | pickup_wasteCreateOrConnectWithoutDropboxInput[]
    createMany?: pickup_wasteCreateManyDropboxInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type pickup_wasteUncheckedCreateNestedManyWithoutDropboxInput = {
    create?: XOR<pickup_wasteCreateWithoutDropboxInput, pickup_wasteUncheckedCreateWithoutDropboxInput> | pickup_wasteCreateWithoutDropboxInput[] | pickup_wasteUncheckedCreateWithoutDropboxInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutDropboxInput | pickup_wasteCreateOrConnectWithoutDropboxInput[]
    createMany?: pickup_wasteCreateManyDropboxInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type NullableEnumdropbox_district_addressFieldUpdateOperationsInput = {
    set?: $Enums.dropbox_district_address | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableEnumdropbox_statusFieldUpdateOperationsInput = {
    set?: $Enums.dropbox_status | null
  }

  export type pickup_wasteUpdateManyWithoutDropboxNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutDropboxInput, pickup_wasteUncheckedCreateWithoutDropboxInput> | pickup_wasteCreateWithoutDropboxInput[] | pickup_wasteUncheckedCreateWithoutDropboxInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutDropboxInput | pickup_wasteCreateOrConnectWithoutDropboxInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutDropboxInput | pickup_wasteUpsertWithWhereUniqueWithoutDropboxInput[]
    createMany?: pickup_wasteCreateManyDropboxInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutDropboxInput | pickup_wasteUpdateWithWhereUniqueWithoutDropboxInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutDropboxInput | pickup_wasteUpdateManyWithWhereWithoutDropboxInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type pickup_wasteUncheckedUpdateManyWithoutDropboxNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutDropboxInput, pickup_wasteUncheckedCreateWithoutDropboxInput> | pickup_wasteCreateWithoutDropboxInput[] | pickup_wasteUncheckedCreateWithoutDropboxInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutDropboxInput | pickup_wasteCreateOrConnectWithoutDropboxInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutDropboxInput | pickup_wasteUpsertWithWhereUniqueWithoutDropboxInput[]
    createMany?: pickup_wasteCreateManyDropboxInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutDropboxInput | pickup_wasteUpdateWithWhereUniqueWithoutDropboxInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutDropboxInput | pickup_wasteUpdateManyWithWhereWithoutDropboxInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type pickup_wasteCreateNestedManyWithoutManagementInput = {
    create?: XOR<pickup_wasteCreateWithoutManagementInput, pickup_wasteUncheckedCreateWithoutManagementInput> | pickup_wasteCreateWithoutManagementInput[] | pickup_wasteUncheckedCreateWithoutManagementInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutManagementInput | pickup_wasteCreateOrConnectWithoutManagementInput[]
    createMany?: pickup_wasteCreateManyManagementInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type pickup_wasteUncheckedCreateNestedManyWithoutManagementInput = {
    create?: XOR<pickup_wasteCreateWithoutManagementInput, pickup_wasteUncheckedCreateWithoutManagementInput> | pickup_wasteCreateWithoutManagementInput[] | pickup_wasteUncheckedCreateWithoutManagementInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutManagementInput | pickup_wasteCreateOrConnectWithoutManagementInput[]
    createMany?: pickup_wasteCreateManyManagementInputEnvelope
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
  }

  export type pickup_wasteUpdateManyWithoutManagementNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutManagementInput, pickup_wasteUncheckedCreateWithoutManagementInput> | pickup_wasteCreateWithoutManagementInput[] | pickup_wasteUncheckedCreateWithoutManagementInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutManagementInput | pickup_wasteCreateOrConnectWithoutManagementInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutManagementInput | pickup_wasteUpsertWithWhereUniqueWithoutManagementInput[]
    createMany?: pickup_wasteCreateManyManagementInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutManagementInput | pickup_wasteUpdateWithWhereUniqueWithoutManagementInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutManagementInput | pickup_wasteUpdateManyWithWhereWithoutManagementInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type pickup_wasteUncheckedUpdateManyWithoutManagementNestedInput = {
    create?: XOR<pickup_wasteCreateWithoutManagementInput, pickup_wasteUncheckedCreateWithoutManagementInput> | pickup_wasteCreateWithoutManagementInput[] | pickup_wasteUncheckedCreateWithoutManagementInput[]
    connectOrCreate?: pickup_wasteCreateOrConnectWithoutManagementInput | pickup_wasteCreateOrConnectWithoutManagementInput[]
    upsert?: pickup_wasteUpsertWithWhereUniqueWithoutManagementInput | pickup_wasteUpsertWithWhereUniqueWithoutManagementInput[]
    createMany?: pickup_wasteCreateManyManagementInputEnvelope
    set?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    disconnect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    delete?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    connect?: pickup_wasteWhereUniqueInput | pickup_wasteWhereUniqueInput[]
    update?: pickup_wasteUpdateWithWhereUniqueWithoutManagementInput | pickup_wasteUpdateWithWhereUniqueWithoutManagementInput[]
    updateMany?: pickup_wasteUpdateManyWithWhereWithoutManagementInput | pickup_wasteUpdateManyWithWhereWithoutManagementInput[]
    deleteMany?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
  }

  export type dropboxCreateNestedOneWithoutPickup_wasteInput = {
    create?: XOR<dropboxCreateWithoutPickup_wasteInput, dropboxUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: dropboxCreateOrConnectWithoutPickup_wasteInput
    connect?: dropboxWhereUniqueInput
  }

  export type courierCreateNestedOneWithoutPickup_wasteInput = {
    create?: XOR<courierCreateWithoutPickup_wasteInput, courierUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: courierCreateOrConnectWithoutPickup_wasteInput
    connect?: courierWhereUniqueInput
  }

  export type communityCreateNestedOneWithoutPickup_wasteInput = {
    create?: XOR<communityCreateWithoutPickup_wasteInput, communityUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: communityCreateOrConnectWithoutPickup_wasteInput
    connect?: communityWhereUniqueInput
  }

  export type managementCreateNestedOneWithoutPickup_wasteInput = {
    create?: XOR<managementCreateWithoutPickup_wasteInput, managementUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: managementCreateOrConnectWithoutPickup_wasteInput
    connect?: managementWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput = {
    set?: $Enums.pickup_waste_pickup_status | null
  }

  export type dropboxUpdateOneWithoutPickup_wasteNestedInput = {
    create?: XOR<dropboxCreateWithoutPickup_wasteInput, dropboxUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: dropboxCreateOrConnectWithoutPickup_wasteInput
    upsert?: dropboxUpsertWithoutPickup_wasteInput
    disconnect?: dropboxWhereInput | boolean
    delete?: dropboxWhereInput | boolean
    connect?: dropboxWhereUniqueInput
    update?: XOR<XOR<dropboxUpdateToOneWithWhereWithoutPickup_wasteInput, dropboxUpdateWithoutPickup_wasteInput>, dropboxUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type courierUpdateOneWithoutPickup_wasteNestedInput = {
    create?: XOR<courierCreateWithoutPickup_wasteInput, courierUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: courierCreateOrConnectWithoutPickup_wasteInput
    upsert?: courierUpsertWithoutPickup_wasteInput
    disconnect?: courierWhereInput | boolean
    delete?: courierWhereInput | boolean
    connect?: courierWhereUniqueInput
    update?: XOR<XOR<courierUpdateToOneWithWhereWithoutPickup_wasteInput, courierUpdateWithoutPickup_wasteInput>, courierUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type communityUpdateOneWithoutPickup_wasteNestedInput = {
    create?: XOR<communityCreateWithoutPickup_wasteInput, communityUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: communityCreateOrConnectWithoutPickup_wasteInput
    upsert?: communityUpsertWithoutPickup_wasteInput
    disconnect?: communityWhereInput | boolean
    delete?: communityWhereInput | boolean
    connect?: communityWhereUniqueInput
    update?: XOR<XOR<communityUpdateToOneWithWhereWithoutPickup_wasteInput, communityUpdateWithoutPickup_wasteInput>, communityUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type managementUpdateOneWithoutPickup_wasteNestedInput = {
    create?: XOR<managementCreateWithoutPickup_wasteInput, managementUncheckedCreateWithoutPickup_wasteInput>
    connectOrCreate?: managementCreateOrConnectWithoutPickup_wasteInput
    upsert?: managementUpsertWithoutPickup_wasteInput
    disconnect?: managementWhereInput | boolean
    delete?: managementWhereInput | boolean
    connect?: managementWhereUniqueInput
    update?: XOR<XOR<managementUpdateToOneWithWhereWithoutPickup_wasteInput, managementUpdateWithoutPickup_wasteInput>, managementUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type waste_typeCreateNestedOneWithoutWasteInput = {
    create?: XOR<waste_typeCreateWithoutWasteInput, waste_typeUncheckedCreateWithoutWasteInput>
    connectOrCreate?: waste_typeCreateOrConnectWithoutWasteInput
    connect?: waste_typeWhereUniqueInput
  }

  export type waste_typeUpdateOneWithoutWasteNestedInput = {
    create?: XOR<waste_typeCreateWithoutWasteInput, waste_typeUncheckedCreateWithoutWasteInput>
    connectOrCreate?: waste_typeCreateOrConnectWithoutWasteInput
    upsert?: waste_typeUpsertWithoutWasteInput
    disconnect?: waste_typeWhereInput | boolean
    delete?: waste_typeWhereInput | boolean
    connect?: waste_typeWhereUniqueInput
    update?: XOR<XOR<waste_typeUpdateToOneWithWhereWithoutWasteInput, waste_typeUpdateWithoutWasteInput>, waste_typeUncheckedUpdateWithoutWasteInput>
  }

  export type wasteCreateNestedManyWithoutWaste_typeInput = {
    create?: XOR<wasteCreateWithoutWaste_typeInput, wasteUncheckedCreateWithoutWaste_typeInput> | wasteCreateWithoutWaste_typeInput[] | wasteUncheckedCreateWithoutWaste_typeInput[]
    connectOrCreate?: wasteCreateOrConnectWithoutWaste_typeInput | wasteCreateOrConnectWithoutWaste_typeInput[]
    createMany?: wasteCreateManyWaste_typeInputEnvelope
    connect?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
  }

  export type wasteUncheckedCreateNestedManyWithoutWaste_typeInput = {
    create?: XOR<wasteCreateWithoutWaste_typeInput, wasteUncheckedCreateWithoutWaste_typeInput> | wasteCreateWithoutWaste_typeInput[] | wasteUncheckedCreateWithoutWaste_typeInput[]
    connectOrCreate?: wasteCreateOrConnectWithoutWaste_typeInput | wasteCreateOrConnectWithoutWaste_typeInput[]
    createMany?: wasteCreateManyWaste_typeInputEnvelope
    connect?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
  }

  export type Enumwaste_type_waste_type_nameFieldUpdateOperationsInput = {
    set?: $Enums.waste_type_waste_type_name
  }

  export type wasteUpdateManyWithoutWaste_typeNestedInput = {
    create?: XOR<wasteCreateWithoutWaste_typeInput, wasteUncheckedCreateWithoutWaste_typeInput> | wasteCreateWithoutWaste_typeInput[] | wasteUncheckedCreateWithoutWaste_typeInput[]
    connectOrCreate?: wasteCreateOrConnectWithoutWaste_typeInput | wasteCreateOrConnectWithoutWaste_typeInput[]
    upsert?: wasteUpsertWithWhereUniqueWithoutWaste_typeInput | wasteUpsertWithWhereUniqueWithoutWaste_typeInput[]
    createMany?: wasteCreateManyWaste_typeInputEnvelope
    set?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    disconnect?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    delete?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    connect?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    update?: wasteUpdateWithWhereUniqueWithoutWaste_typeInput | wasteUpdateWithWhereUniqueWithoutWaste_typeInput[]
    updateMany?: wasteUpdateManyWithWhereWithoutWaste_typeInput | wasteUpdateManyWithWhereWithoutWaste_typeInput[]
    deleteMany?: wasteScalarWhereInput | wasteScalarWhereInput[]
  }

  export type wasteUncheckedUpdateManyWithoutWaste_typeNestedInput = {
    create?: XOR<wasteCreateWithoutWaste_typeInput, wasteUncheckedCreateWithoutWaste_typeInput> | wasteCreateWithoutWaste_typeInput[] | wasteUncheckedCreateWithoutWaste_typeInput[]
    connectOrCreate?: wasteCreateOrConnectWithoutWaste_typeInput | wasteCreateOrConnectWithoutWaste_typeInput[]
    upsert?: wasteUpsertWithWhereUniqueWithoutWaste_typeInput | wasteUpsertWithWhereUniqueWithoutWaste_typeInput[]
    createMany?: wasteCreateManyWaste_typeInputEnvelope
    set?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    disconnect?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    delete?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    connect?: wasteWhereUniqueInput | wasteWhereUniqueInput[]
    update?: wasteUpdateWithWhereUniqueWithoutWaste_typeInput | wasteUpdateWithWhereUniqueWithoutWaste_typeInput[]
    updateMany?: wasteUpdateManyWithWhereWithoutWaste_typeInput | wasteUpdateManyWithWhereWithoutWaste_typeInput[]
    deleteMany?: wasteScalarWhereInput | wasteScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumcourier_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.courier_status | Enumcourier_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.courier_status[] | null
    notIn?: $Enums.courier_status[] | null
    not?: NestedEnumcourier_statusNullableFilter<$PrismaModel> | $Enums.courier_status | null
  }

  export type NestedEnumcourier_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.courier_status | Enumcourier_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.courier_status[] | null
    notIn?: $Enums.courier_status[] | null
    not?: NestedEnumcourier_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.courier_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumcourier_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumcourier_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumdropbox_district_addressNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_district_address | Enumdropbox_district_addressFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_district_address[] | null
    notIn?: $Enums.dropbox_district_address[] | null
    not?: NestedEnumdropbox_district_addressNullableFilter<$PrismaModel> | $Enums.dropbox_district_address | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumdropbox_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_status | Enumdropbox_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_status[] | null
    notIn?: $Enums.dropbox_status[] | null
    not?: NestedEnumdropbox_statusNullableFilter<$PrismaModel> | $Enums.dropbox_status | null
  }

  export type NestedEnumdropbox_district_addressNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_district_address | Enumdropbox_district_addressFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_district_address[] | null
    notIn?: $Enums.dropbox_district_address[] | null
    not?: NestedEnumdropbox_district_addressNullableWithAggregatesFilter<$PrismaModel> | $Enums.dropbox_district_address | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdropbox_district_addressNullableFilter<$PrismaModel>
    _max?: NestedEnumdropbox_district_addressNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumdropbox_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.dropbox_status | Enumdropbox_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.dropbox_status[] | null
    notIn?: $Enums.dropbox_status[] | null
    not?: NestedEnumdropbox_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.dropbox_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumdropbox_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumdropbox_statusNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.pickup_waste_pickup_status | Enumpickup_waste_pickup_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.pickup_waste_pickup_status[] | null
    notIn?: $Enums.pickup_waste_pickup_status[] | null
    not?: NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel> | $Enums.pickup_waste_pickup_status | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumpickup_waste_pickup_statusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.pickup_waste_pickup_status | Enumpickup_waste_pickup_statusFieldRefInput<$PrismaModel> | null
    in?: $Enums.pickup_waste_pickup_status[] | null
    notIn?: $Enums.pickup_waste_pickup_status[] | null
    not?: NestedEnumpickup_waste_pickup_statusNullableWithAggregatesFilter<$PrismaModel> | $Enums.pickup_waste_pickup_status | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel>
    _max?: NestedEnumpickup_waste_pickup_statusNullableFilter<$PrismaModel>
  }

  export type NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel = never> = {
    equals?: $Enums.waste_type_waste_type_name | Enumwaste_type_waste_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.waste_type_waste_type_name[]
    notIn?: $Enums.waste_type_waste_type_name[]
    not?: NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel> | $Enums.waste_type_waste_type_name
  }

  export type NestedEnumwaste_type_waste_type_nameWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.waste_type_waste_type_name | Enumwaste_type_waste_type_nameFieldRefInput<$PrismaModel>
    in?: $Enums.waste_type_waste_type_name[]
    notIn?: $Enums.waste_type_waste_type_name[]
    not?: NestedEnumwaste_type_waste_type_nameWithAggregatesFilter<$PrismaModel> | $Enums.waste_type_waste_type_name
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel>
    _max?: NestedEnumwaste_type_waste_type_nameFilter<$PrismaModel>
  }

  export type community_pointsCreateWithoutCommunityInput = {
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type community_pointsUncheckedCreateWithoutCommunityInput = {
    points_id?: number
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type community_pointsCreateOrConnectWithoutCommunityInput = {
    where: community_pointsWhereUniqueInput
    create: XOR<community_pointsCreateWithoutCommunityInput, community_pointsUncheckedCreateWithoutCommunityInput>
  }

  export type community_pointsCreateManyCommunityInputEnvelope = {
    data: community_pointsCreateManyCommunityInput | community_pointsCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type pickup_wasteCreateWithoutCommunityInput = {
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    dropbox?: dropboxCreateNestedOneWithoutPickup_wasteInput
    courier?: courierCreateNestedOneWithoutPickup_wasteInput
    management?: managementCreateNestedOneWithoutPickup_wasteInput
  }

  export type pickup_wasteUncheckedCreateWithoutCommunityInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    courier_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteCreateOrConnectWithoutCommunityInput = {
    where: pickup_wasteWhereUniqueInput
    create: XOR<pickup_wasteCreateWithoutCommunityInput, pickup_wasteUncheckedCreateWithoutCommunityInput>
  }

  export type pickup_wasteCreateManyCommunityInputEnvelope = {
    data: pickup_wasteCreateManyCommunityInput | pickup_wasteCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type community_pointsUpsertWithWhereUniqueWithoutCommunityInput = {
    where: community_pointsWhereUniqueInput
    update: XOR<community_pointsUpdateWithoutCommunityInput, community_pointsUncheckedUpdateWithoutCommunityInput>
    create: XOR<community_pointsCreateWithoutCommunityInput, community_pointsUncheckedCreateWithoutCommunityInput>
  }

  export type community_pointsUpdateWithWhereUniqueWithoutCommunityInput = {
    where: community_pointsWhereUniqueInput
    data: XOR<community_pointsUpdateWithoutCommunityInput, community_pointsUncheckedUpdateWithoutCommunityInput>
  }

  export type community_pointsUpdateManyWithWhereWithoutCommunityInput = {
    where: community_pointsScalarWhereInput
    data: XOR<community_pointsUpdateManyMutationInput, community_pointsUncheckedUpdateManyWithoutCommunityInput>
  }

  export type community_pointsScalarWhereInput = {
    AND?: community_pointsScalarWhereInput | community_pointsScalarWhereInput[]
    OR?: community_pointsScalarWhereInput[]
    NOT?: community_pointsScalarWhereInput | community_pointsScalarWhereInput[]
    points_id?: IntFilter<"community_points"> | number
    community_id?: IntNullableFilter<"community_points"> | number | null
    total_points?: IntNullableFilter<"community_points"> | number | null
    created_at?: DateTimeNullableFilter<"community_points"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"community_points"> | Date | string | null
  }

  export type pickup_wasteUpsertWithWhereUniqueWithoutCommunityInput = {
    where: pickup_wasteWhereUniqueInput
    update: XOR<pickup_wasteUpdateWithoutCommunityInput, pickup_wasteUncheckedUpdateWithoutCommunityInput>
    create: XOR<pickup_wasteCreateWithoutCommunityInput, pickup_wasteUncheckedCreateWithoutCommunityInput>
  }

  export type pickup_wasteUpdateWithWhereUniqueWithoutCommunityInput = {
    where: pickup_wasteWhereUniqueInput
    data: XOR<pickup_wasteUpdateWithoutCommunityInput, pickup_wasteUncheckedUpdateWithoutCommunityInput>
  }

  export type pickup_wasteUpdateManyWithWhereWithoutCommunityInput = {
    where: pickup_wasteScalarWhereInput
    data: XOR<pickup_wasteUpdateManyMutationInput, pickup_wasteUncheckedUpdateManyWithoutCommunityInput>
  }

  export type pickup_wasteScalarWhereInput = {
    AND?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
    OR?: pickup_wasteScalarWhereInput[]
    NOT?: pickup_wasteScalarWhereInput | pickup_wasteScalarWhereInput[]
    pickup_id?: IntFilter<"pickup_waste"> | number
    pickup_date?: DateTimeFilter<"pickup_waste"> | Date | string
    pickup_address?: StringFilter<"pickup_waste"> | string
    pickup_status?: Enumpickup_waste_pickup_statusNullableFilter<"pickup_waste"> | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: IntNullableFilter<"pickup_waste"> | number | null
    courier_id?: IntNullableFilter<"pickup_waste"> | number | null
    community_id?: IntNullableFilter<"pickup_waste"> | number | null
    management_id?: IntNullableFilter<"pickup_waste"> | number | null
    created_at?: DateTimeNullableFilter<"pickup_waste"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"pickup_waste"> | Date | string | null
  }

  export type communityCreateWithoutCommunity_pointsInput = {
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutCommunity_pointsInput = {
    community_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutCommunity_pointsInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutCommunity_pointsInput, communityUncheckedCreateWithoutCommunity_pointsInput>
  }

  export type communityUpsertWithoutCommunity_pointsInput = {
    update: XOR<communityUpdateWithoutCommunity_pointsInput, communityUncheckedUpdateWithoutCommunity_pointsInput>
    create: XOR<communityCreateWithoutCommunity_pointsInput, communityUncheckedCreateWithoutCommunity_pointsInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutCommunity_pointsInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutCommunity_pointsInput, communityUncheckedUpdateWithoutCommunity_pointsInput>
  }

  export type communityUpdateWithoutCommunity_pointsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutCommunity_pointsInput = {
    community_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type courier_pointsCreateWithoutCourierInput = {
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type courier_pointsUncheckedCreateWithoutCourierInput = {
    points_id?: number
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type courier_pointsCreateOrConnectWithoutCourierInput = {
    where: courier_pointsWhereUniqueInput
    create: XOR<courier_pointsCreateWithoutCourierInput, courier_pointsUncheckedCreateWithoutCourierInput>
  }

  export type courier_pointsCreateManyCourierInputEnvelope = {
    data: courier_pointsCreateManyCourierInput | courier_pointsCreateManyCourierInput[]
    skipDuplicates?: boolean
  }

  export type pickup_wasteCreateWithoutCourierInput = {
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    dropbox?: dropboxCreateNestedOneWithoutPickup_wasteInput
    community?: communityCreateNestedOneWithoutPickup_wasteInput
    management?: managementCreateNestedOneWithoutPickup_wasteInput
  }

  export type pickup_wasteUncheckedCreateWithoutCourierInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    community_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteCreateOrConnectWithoutCourierInput = {
    where: pickup_wasteWhereUniqueInput
    create: XOR<pickup_wasteCreateWithoutCourierInput, pickup_wasteUncheckedCreateWithoutCourierInput>
  }

  export type pickup_wasteCreateManyCourierInputEnvelope = {
    data: pickup_wasteCreateManyCourierInput | pickup_wasteCreateManyCourierInput[]
    skipDuplicates?: boolean
  }

  export type courier_pointsUpsertWithWhereUniqueWithoutCourierInput = {
    where: courier_pointsWhereUniqueInput
    update: XOR<courier_pointsUpdateWithoutCourierInput, courier_pointsUncheckedUpdateWithoutCourierInput>
    create: XOR<courier_pointsCreateWithoutCourierInput, courier_pointsUncheckedCreateWithoutCourierInput>
  }

  export type courier_pointsUpdateWithWhereUniqueWithoutCourierInput = {
    where: courier_pointsWhereUniqueInput
    data: XOR<courier_pointsUpdateWithoutCourierInput, courier_pointsUncheckedUpdateWithoutCourierInput>
  }

  export type courier_pointsUpdateManyWithWhereWithoutCourierInput = {
    where: courier_pointsScalarWhereInput
    data: XOR<courier_pointsUpdateManyMutationInput, courier_pointsUncheckedUpdateManyWithoutCourierInput>
  }

  export type courier_pointsScalarWhereInput = {
    AND?: courier_pointsScalarWhereInput | courier_pointsScalarWhereInput[]
    OR?: courier_pointsScalarWhereInput[]
    NOT?: courier_pointsScalarWhereInput | courier_pointsScalarWhereInput[]
    points_id?: IntFilter<"courier_points"> | number
    courier_id?: IntNullableFilter<"courier_points"> | number | null
    total_points?: IntNullableFilter<"courier_points"> | number | null
    created_at?: DateTimeNullableFilter<"courier_points"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"courier_points"> | Date | string | null
  }

  export type pickup_wasteUpsertWithWhereUniqueWithoutCourierInput = {
    where: pickup_wasteWhereUniqueInput
    update: XOR<pickup_wasteUpdateWithoutCourierInput, pickup_wasteUncheckedUpdateWithoutCourierInput>
    create: XOR<pickup_wasteCreateWithoutCourierInput, pickup_wasteUncheckedCreateWithoutCourierInput>
  }

  export type pickup_wasteUpdateWithWhereUniqueWithoutCourierInput = {
    where: pickup_wasteWhereUniqueInput
    data: XOR<pickup_wasteUpdateWithoutCourierInput, pickup_wasteUncheckedUpdateWithoutCourierInput>
  }

  export type pickup_wasteUpdateManyWithWhereWithoutCourierInput = {
    where: pickup_wasteScalarWhereInput
    data: XOR<pickup_wasteUpdateManyMutationInput, pickup_wasteUncheckedUpdateManyWithoutCourierInput>
  }

  export type courierCreateWithoutCourier_pointsInput = {
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteCreateNestedManyWithoutCourierInput
  }

  export type courierUncheckedCreateWithoutCourier_pointsInput = {
    courier_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    pickup_waste?: pickup_wasteUncheckedCreateNestedManyWithoutCourierInput
  }

  export type courierCreateOrConnectWithoutCourier_pointsInput = {
    where: courierWhereUniqueInput
    create: XOR<courierCreateWithoutCourier_pointsInput, courierUncheckedCreateWithoutCourier_pointsInput>
  }

  export type courierUpsertWithoutCourier_pointsInput = {
    update: XOR<courierUpdateWithoutCourier_pointsInput, courierUncheckedUpdateWithoutCourier_pointsInput>
    create: XOR<courierCreateWithoutCourier_pointsInput, courierUncheckedCreateWithoutCourier_pointsInput>
    where?: courierWhereInput
  }

  export type courierUpdateToOneWithWhereWithoutCourier_pointsInput = {
    where?: courierWhereInput
    data: XOR<courierUpdateWithoutCourier_pointsInput, courierUncheckedUpdateWithoutCourier_pointsInput>
  }

  export type courierUpdateWithoutCourier_pointsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUpdateManyWithoutCourierNestedInput
  }

  export type courierUncheckedUpdateWithoutCourier_pointsInput = {
    courier_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickup_waste?: pickup_wasteUncheckedUpdateManyWithoutCourierNestedInput
  }

  export type pickup_wasteCreateWithoutDropboxInput = {
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    courier?: courierCreateNestedOneWithoutPickup_wasteInput
    community?: communityCreateNestedOneWithoutPickup_wasteInput
    management?: managementCreateNestedOneWithoutPickup_wasteInput
  }

  export type pickup_wasteUncheckedCreateWithoutDropboxInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    courier_id?: number | null
    community_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteCreateOrConnectWithoutDropboxInput = {
    where: pickup_wasteWhereUniqueInput
    create: XOR<pickup_wasteCreateWithoutDropboxInput, pickup_wasteUncheckedCreateWithoutDropboxInput>
  }

  export type pickup_wasteCreateManyDropboxInputEnvelope = {
    data: pickup_wasteCreateManyDropboxInput | pickup_wasteCreateManyDropboxInput[]
    skipDuplicates?: boolean
  }

  export type pickup_wasteUpsertWithWhereUniqueWithoutDropboxInput = {
    where: pickup_wasteWhereUniqueInput
    update: XOR<pickup_wasteUpdateWithoutDropboxInput, pickup_wasteUncheckedUpdateWithoutDropboxInput>
    create: XOR<pickup_wasteCreateWithoutDropboxInput, pickup_wasteUncheckedCreateWithoutDropboxInput>
  }

  export type pickup_wasteUpdateWithWhereUniqueWithoutDropboxInput = {
    where: pickup_wasteWhereUniqueInput
    data: XOR<pickup_wasteUpdateWithoutDropboxInput, pickup_wasteUncheckedUpdateWithoutDropboxInput>
  }

  export type pickup_wasteUpdateManyWithWhereWithoutDropboxInput = {
    where: pickup_wasteScalarWhereInput
    data: XOR<pickup_wasteUpdateManyMutationInput, pickup_wasteUncheckedUpdateManyWithoutDropboxInput>
  }

  export type pickup_wasteCreateWithoutManagementInput = {
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    dropbox?: dropboxCreateNestedOneWithoutPickup_wasteInput
    courier?: courierCreateNestedOneWithoutPickup_wasteInput
    community?: communityCreateNestedOneWithoutPickup_wasteInput
  }

  export type pickup_wasteUncheckedCreateWithoutManagementInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    courier_id?: number | null
    community_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteCreateOrConnectWithoutManagementInput = {
    where: pickup_wasteWhereUniqueInput
    create: XOR<pickup_wasteCreateWithoutManagementInput, pickup_wasteUncheckedCreateWithoutManagementInput>
  }

  export type pickup_wasteCreateManyManagementInputEnvelope = {
    data: pickup_wasteCreateManyManagementInput | pickup_wasteCreateManyManagementInput[]
    skipDuplicates?: boolean
  }

  export type pickup_wasteUpsertWithWhereUniqueWithoutManagementInput = {
    where: pickup_wasteWhereUniqueInput
    update: XOR<pickup_wasteUpdateWithoutManagementInput, pickup_wasteUncheckedUpdateWithoutManagementInput>
    create: XOR<pickup_wasteCreateWithoutManagementInput, pickup_wasteUncheckedCreateWithoutManagementInput>
  }

  export type pickup_wasteUpdateWithWhereUniqueWithoutManagementInput = {
    where: pickup_wasteWhereUniqueInput
    data: XOR<pickup_wasteUpdateWithoutManagementInput, pickup_wasteUncheckedUpdateWithoutManagementInput>
  }

  export type pickup_wasteUpdateManyWithWhereWithoutManagementInput = {
    where: pickup_wasteScalarWhereInput
    data: XOR<pickup_wasteUpdateManyMutationInput, pickup_wasteUncheckedUpdateManyWithoutManagementInput>
  }

  export type dropboxCreateWithoutPickup_wasteInput = {
    name: string
    address: string
    district_address?: $Enums.dropbox_district_address | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    capacity?: number | null
    status?: $Enums.dropbox_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type dropboxUncheckedCreateWithoutPickup_wasteInput = {
    dropbox_id?: number
    name: string
    address: string
    district_address?: $Enums.dropbox_district_address | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    capacity?: number | null
    status?: $Enums.dropbox_status | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type dropboxCreateOrConnectWithoutPickup_wasteInput = {
    where: dropboxWhereUniqueInput
    create: XOR<dropboxCreateWithoutPickup_wasteInput, dropboxUncheckedCreateWithoutPickup_wasteInput>
  }

  export type courierCreateWithoutPickup_wasteInput = {
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    courier_points?: courier_pointsCreateNestedManyWithoutCourierInput
  }

  export type courierUncheckedCreateWithoutPickup_wasteInput = {
    courier_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    account_number?: string | null
    nik?: string | null
    ktp_url?: string | null
    kk_url?: string | null
    photo?: string | null
    is_verified?: boolean | null
    status?: $Enums.courier_status | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    courier_points?: courier_pointsUncheckedCreateNestedManyWithoutCourierInput
  }

  export type courierCreateOrConnectWithoutPickup_wasteInput = {
    where: courierWhereUniqueInput
    create: XOR<courierCreateWithoutPickup_wasteInput, courierUncheckedCreateWithoutPickup_wasteInput>
  }

  export type communityCreateWithoutPickup_wasteInput = {
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    community_points?: community_pointsCreateNestedManyWithoutCommunityInput
  }

  export type communityUncheckedCreateWithoutPickup_wasteInput = {
    community_id?: number
    name: string
    email: string
    password?: string | null
    phone?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    photo?: string | null
    is_verified?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    community_points?: community_pointsUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type communityCreateOrConnectWithoutPickup_wasteInput = {
    where: communityWhereUniqueInput
    create: XOR<communityCreateWithoutPickup_wasteInput, communityUncheckedCreateWithoutPickup_wasteInput>
  }

  export type managementCreateWithoutPickup_wasteInput = {
    name: string
    email: string
    password?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    phone?: string | null
    photo?: string | null
    is_verified?: boolean | null
    is_admin?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type managementUncheckedCreateWithoutPickup_wasteInput = {
    management_id?: number
    name: string
    email: string
    password?: string | null
    date_of_birth?: Date | string | null
    address?: string | null
    phone?: string | null
    photo?: string | null
    is_verified?: boolean | null
    is_admin?: boolean | null
    otp_code?: string | null
    otp_expiry?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type managementCreateOrConnectWithoutPickup_wasteInput = {
    where: managementWhereUniqueInput
    create: XOR<managementCreateWithoutPickup_wasteInput, managementUncheckedCreateWithoutPickup_wasteInput>
  }

  export type dropboxUpsertWithoutPickup_wasteInput = {
    update: XOR<dropboxUpdateWithoutPickup_wasteInput, dropboxUncheckedUpdateWithoutPickup_wasteInput>
    create: XOR<dropboxCreateWithoutPickup_wasteInput, dropboxUncheckedCreateWithoutPickup_wasteInput>
    where?: dropboxWhereInput
  }

  export type dropboxUpdateToOneWithWhereWithoutPickup_wasteInput = {
    where?: dropboxWhereInput
    data: XOR<dropboxUpdateWithoutPickup_wasteInput, dropboxUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type dropboxUpdateWithoutPickup_wasteInput = {
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    district_address?: NullableEnumdropbox_district_addressFieldUpdateOperationsInput | $Enums.dropbox_district_address | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumdropbox_statusFieldUpdateOperationsInput | $Enums.dropbox_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type dropboxUncheckedUpdateWithoutPickup_wasteInput = {
    dropbox_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    district_address?: NullableEnumdropbox_district_addressFieldUpdateOperationsInput | $Enums.dropbox_district_address | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableEnumdropbox_statusFieldUpdateOperationsInput | $Enums.dropbox_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courierUpsertWithoutPickup_wasteInput = {
    update: XOR<courierUpdateWithoutPickup_wasteInput, courierUncheckedUpdateWithoutPickup_wasteInput>
    create: XOR<courierCreateWithoutPickup_wasteInput, courierUncheckedCreateWithoutPickup_wasteInput>
    where?: courierWhereInput
  }

  export type courierUpdateToOneWithWhereWithoutPickup_wasteInput = {
    where?: courierWhereInput
    data: XOR<courierUpdateWithoutPickup_wasteInput, courierUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type courierUpdateWithoutPickup_wasteInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courier_points?: courier_pointsUpdateManyWithoutCourierNestedInput
  }

  export type courierUncheckedUpdateWithoutPickup_wasteInput = {
    courier_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    nik?: NullableStringFieldUpdateOperationsInput | string | null
    ktp_url?: NullableStringFieldUpdateOperationsInput | string | null
    kk_url?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: NullableEnumcourier_statusFieldUpdateOperationsInput | $Enums.courier_status | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courier_points?: courier_pointsUncheckedUpdateManyWithoutCourierNestedInput
  }

  export type communityUpsertWithoutPickup_wasteInput = {
    update: XOR<communityUpdateWithoutPickup_wasteInput, communityUncheckedUpdateWithoutPickup_wasteInput>
    create: XOR<communityCreateWithoutPickup_wasteInput, communityUncheckedCreateWithoutPickup_wasteInput>
    where?: communityWhereInput
  }

  export type communityUpdateToOneWithWhereWithoutPickup_wasteInput = {
    where?: communityWhereInput
    data: XOR<communityUpdateWithoutPickup_wasteInput, communityUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type communityUpdateWithoutPickup_wasteInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community_points?: community_pointsUpdateManyWithoutCommunityNestedInput
  }

  export type communityUncheckedUpdateWithoutPickup_wasteInput = {
    community_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    community_points?: community_pointsUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type managementUpsertWithoutPickup_wasteInput = {
    update: XOR<managementUpdateWithoutPickup_wasteInput, managementUncheckedUpdateWithoutPickup_wasteInput>
    create: XOR<managementCreateWithoutPickup_wasteInput, managementUncheckedCreateWithoutPickup_wasteInput>
    where?: managementWhereInput
  }

  export type managementUpdateToOneWithWhereWithoutPickup_wasteInput = {
    where?: managementWhereInput
    data: XOR<managementUpdateWithoutPickup_wasteInput, managementUncheckedUpdateWithoutPickup_wasteInput>
  }

  export type managementUpdateWithoutPickup_wasteInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type managementUncheckedUpdateWithoutPickup_wasteInput = {
    management_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    date_of_birth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    is_verified?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    otp_expiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type waste_typeCreateWithoutWasteInput = {
    waste_type_name: $Enums.waste_type_waste_type_name
    image?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type waste_typeUncheckedCreateWithoutWasteInput = {
    waste_type_id?: number
    waste_type_name: $Enums.waste_type_waste_type_name
    image?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type waste_typeCreateOrConnectWithoutWasteInput = {
    where: waste_typeWhereUniqueInput
    create: XOR<waste_typeCreateWithoutWasteInput, waste_typeUncheckedCreateWithoutWasteInput>
  }

  export type waste_typeUpsertWithoutWasteInput = {
    update: XOR<waste_typeUpdateWithoutWasteInput, waste_typeUncheckedUpdateWithoutWasteInput>
    create: XOR<waste_typeCreateWithoutWasteInput, waste_typeUncheckedCreateWithoutWasteInput>
    where?: waste_typeWhereInput
  }

  export type waste_typeUpdateToOneWithWhereWithoutWasteInput = {
    where?: waste_typeWhereInput
    data: XOR<waste_typeUpdateWithoutWasteInput, waste_typeUncheckedUpdateWithoutWasteInput>
  }

  export type waste_typeUpdateWithoutWasteInput = {
    waste_type_name?: Enumwaste_type_waste_type_nameFieldUpdateOperationsInput | $Enums.waste_type_waste_type_name
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type waste_typeUncheckedUpdateWithoutWasteInput = {
    waste_type_id?: IntFieldUpdateOperationsInput | number
    waste_type_name?: Enumwaste_type_waste_type_nameFieldUpdateOperationsInput | $Enums.waste_type_waste_type_name
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteCreateWithoutWaste_typeInput = {
    waste_name: string
    point?: number | null
    image?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type wasteUncheckedCreateWithoutWaste_typeInput = {
    waste_id?: number
    waste_name: string
    point?: number | null
    image?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type wasteCreateOrConnectWithoutWaste_typeInput = {
    where: wasteWhereUniqueInput
    create: XOR<wasteCreateWithoutWaste_typeInput, wasteUncheckedCreateWithoutWaste_typeInput>
  }

  export type wasteCreateManyWaste_typeInputEnvelope = {
    data: wasteCreateManyWaste_typeInput | wasteCreateManyWaste_typeInput[]
    skipDuplicates?: boolean
  }

  export type wasteUpsertWithWhereUniqueWithoutWaste_typeInput = {
    where: wasteWhereUniqueInput
    update: XOR<wasteUpdateWithoutWaste_typeInput, wasteUncheckedUpdateWithoutWaste_typeInput>
    create: XOR<wasteCreateWithoutWaste_typeInput, wasteUncheckedCreateWithoutWaste_typeInput>
  }

  export type wasteUpdateWithWhereUniqueWithoutWaste_typeInput = {
    where: wasteWhereUniqueInput
    data: XOR<wasteUpdateWithoutWaste_typeInput, wasteUncheckedUpdateWithoutWaste_typeInput>
  }

  export type wasteUpdateManyWithWhereWithoutWaste_typeInput = {
    where: wasteScalarWhereInput
    data: XOR<wasteUpdateManyMutationInput, wasteUncheckedUpdateManyWithoutWaste_typeInput>
  }

  export type wasteScalarWhereInput = {
    AND?: wasteScalarWhereInput | wasteScalarWhereInput[]
    OR?: wasteScalarWhereInput[]
    NOT?: wasteScalarWhereInput | wasteScalarWhereInput[]
    waste_id?: IntFilter<"waste"> | number
    waste_name?: StringFilter<"waste"> | string
    point?: IntNullableFilter<"waste"> | number | null
    waste_type_id?: IntNullableFilter<"waste"> | number | null
    image?: StringNullableFilter<"waste"> | string | null
    description?: StringNullableFilter<"waste"> | string | null
    created_at?: DateTimeNullableFilter<"waste"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"waste"> | Date | string | null
  }

  export type community_pointsCreateManyCommunityInput = {
    points_id?: number
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteCreateManyCommunityInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    courier_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type community_pointsUpdateWithoutCommunityInput = {
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_pointsUncheckedUpdateWithoutCommunityInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type community_pointsUncheckedUpdateManyWithoutCommunityInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUpdateWithoutCommunityInput = {
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dropbox?: dropboxUpdateOneWithoutPickup_wasteNestedInput
    courier?: courierUpdateOneWithoutPickup_wasteNestedInput
    management?: managementUpdateOneWithoutPickup_wasteNestedInput
  }

  export type pickup_wasteUncheckedUpdateWithoutCommunityInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUncheckedUpdateManyWithoutCommunityInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courier_pointsCreateManyCourierInput = {
    points_id?: number
    total_points?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteCreateManyCourierInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    community_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type courier_pointsUpdateWithoutCourierInput = {
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courier_pointsUncheckedUpdateWithoutCourierInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type courier_pointsUncheckedUpdateManyWithoutCourierInput = {
    points_id?: IntFieldUpdateOperationsInput | number
    total_points?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUpdateWithoutCourierInput = {
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dropbox?: dropboxUpdateOneWithoutPickup_wasteNestedInput
    community?: communityUpdateOneWithoutPickup_wasteNestedInput
    management?: managementUpdateOneWithoutPickup_wasteNestedInput
  }

  export type pickup_wasteUncheckedUpdateWithoutCourierInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUncheckedUpdateManyWithoutCourierInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteCreateManyDropboxInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    courier_id?: number | null
    community_id?: number | null
    management_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteUpdateWithoutDropboxInput = {
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    courier?: courierUpdateOneWithoutPickup_wasteNestedInput
    community?: communityUpdateOneWithoutPickup_wasteNestedInput
    management?: managementUpdateOneWithoutPickup_wasteNestedInput
  }

  export type pickup_wasteUncheckedUpdateWithoutDropboxInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUncheckedUpdateManyWithoutDropboxInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    management_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteCreateManyManagementInput = {
    pickup_id?: number
    pickup_date: Date | string
    pickup_address: string
    pickup_status?: $Enums.pickup_waste_pickup_status | null
    dropbox_id?: number | null
    courier_id?: number | null
    community_id?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type pickup_wasteUpdateWithoutManagementInput = {
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dropbox?: dropboxUpdateOneWithoutPickup_wasteNestedInput
    courier?: courierUpdateOneWithoutPickup_wasteNestedInput
    community?: communityUpdateOneWithoutPickup_wasteNestedInput
  }

  export type pickup_wasteUncheckedUpdateWithoutManagementInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pickup_wasteUncheckedUpdateManyWithoutManagementInput = {
    pickup_id?: IntFieldUpdateOperationsInput | number
    pickup_date?: DateTimeFieldUpdateOperationsInput | Date | string
    pickup_address?: StringFieldUpdateOperationsInput | string
    pickup_status?: NullableEnumpickup_waste_pickup_statusFieldUpdateOperationsInput | $Enums.pickup_waste_pickup_status | null
    dropbox_id?: NullableIntFieldUpdateOperationsInput | number | null
    courier_id?: NullableIntFieldUpdateOperationsInput | number | null
    community_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteCreateManyWaste_typeInput = {
    waste_id?: number
    waste_name: string
    point?: number | null
    image?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type wasteUpdateWithoutWaste_typeInput = {
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteUncheckedUpdateWithoutWaste_typeInput = {
    waste_id?: IntFieldUpdateOperationsInput | number
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wasteUncheckedUpdateManyWithoutWaste_typeInput = {
    waste_id?: IntFieldUpdateOperationsInput | number
    waste_name?: StringFieldUpdateOperationsInput | string
    point?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CommunityCountOutputTypeDefaultArgs instead
     */
    export type CommunityCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CommunityCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CourierCountOutputTypeDefaultArgs instead
     */
    export type CourierCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CourierCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DropboxCountOutputTypeDefaultArgs instead
     */
    export type DropboxCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DropboxCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ManagementCountOutputTypeDefaultArgs instead
     */
    export type ManagementCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ManagementCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Waste_typeCountOutputTypeDefaultArgs instead
     */
    export type Waste_typeCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Waste_typeCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use communityDefaultArgs instead
     */
    export type communityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = communityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use community_pointsDefaultArgs instead
     */
    export type community_pointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = community_pointsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use courierDefaultArgs instead
     */
    export type courierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = courierDefaultArgs<ExtArgs>
    /**
     * @deprecated Use courier_pointsDefaultArgs instead
     */
    export type courier_pointsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = courier_pointsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use dropboxDefaultArgs instead
     */
    export type dropboxArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = dropboxDefaultArgs<ExtArgs>
    /**
     * @deprecated Use managementDefaultArgs instead
     */
    export type managementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = managementDefaultArgs<ExtArgs>
    /**
     * @deprecated Use pickup_wasteDefaultArgs instead
     */
    export type pickup_wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = pickup_wasteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use wasteDefaultArgs instead
     */
    export type wasteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = wasteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use waste_typeDefaultArgs instead
     */
    export type waste_typeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = waste_typeDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}