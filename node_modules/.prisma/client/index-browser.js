
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.21.1
 * Query Engine version: bf0e5e8a04cada8225617067eaa03d041e2bba36
 */
Prisma.prismaVersion = {
  client: "5.21.1",
  engine: "bf0e5e8a04cada8225617067eaa03d041e2bba36"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CommunityScalarFieldEnum = {
  community_id: 'community_id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone: 'phone',
  date_of_birth: 'date_of_birth',
  address: 'address',
  photo: 'photo',
  is_verified: 'is_verified',
  otp_code: 'otp_code',
  otp_expiry: 'otp_expiry',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Community_pointsScalarFieldEnum = {
  points_id: 'points_id',
  community_id: 'community_id',
  total_points: 'total_points',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CourierScalarFieldEnum = {
  courier_id: 'courier_id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone: 'phone',
  date_of_birth: 'date_of_birth',
  address: 'address',
  account_number: 'account_number',
  nik: 'nik',
  ktp_url: 'ktp_url',
  kk_url: 'kk_url',
  photo: 'photo',
  is_verified: 'is_verified',
  status: 'status',
  otp_code: 'otp_code',
  otp_expiry: 'otp_expiry',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Courier_pointsScalarFieldEnum = {
  points_id: 'points_id',
  courier_id: 'courier_id',
  total_points: 'total_points',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DropboxScalarFieldEnum = {
  dropbox_id: 'dropbox_id',
  name: 'name',
  address: 'address',
  district_address: 'district_address',
  longitude: 'longitude',
  latitude: 'latitude',
  capacity: 'capacity',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ManagementScalarFieldEnum = {
  management_id: 'management_id',
  name: 'name',
  email: 'email',
  password: 'password',
  date_of_birth: 'date_of_birth',
  address: 'address',
  phone: 'phone',
  photo: 'photo',
  is_verified: 'is_verified',
  is_admin: 'is_admin',
  otp_code: 'otp_code',
  otp_expiry: 'otp_expiry',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Pickup_wasteScalarFieldEnum = {
  pickup_id: 'pickup_id',
  pickup_date: 'pickup_date',
  pickup_address: 'pickup_address',
  pickup_status: 'pickup_status',
  dropbox_id: 'dropbox_id',
  courier_id: 'courier_id',
  community_id: 'community_id',
  management_id: 'management_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WasteScalarFieldEnum = {
  waste_id: 'waste_id',
  waste_name: 'waste_name',
  point: 'point',
  waste_type_id: 'waste_type_id',
  image: 'image',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Waste_typeScalarFieldEnum = {
  waste_type_id: 'waste_type_id',
  waste_type_name: 'waste_type_name',
  image: 'image',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.courier_status = exports.$Enums.courier_status = {
  Pending: 'Pending',
  Approved: 'Approved',
  Reject: 'Reject'
};

exports.dropbox_district_address = exports.$Enums.dropbox_district_address = {
  Bandung_Utara: 'Bandung_Utara',
  Bandung_Selatan: 'Bandung_Selatan',
  Bandung_Timur: 'Bandung_Timur',
  Bandung_Barat: 'Bandung_Barat',
  Cimahi: 'Cimahi',
  Kabupaten_Bandung: 'Kabupaten_Bandung',
  Kabupaten_Bandung_Barat: 'Kabupaten_Bandung_Barat'
};

exports.dropbox_status = exports.$Enums.dropbox_status = {
  Full: 'Full',
  Available: 'Available'
};

exports.pickup_waste_pickup_status = exports.$Enums.pickup_waste_pickup_status = {
  pending: 'pending',
  accepted: 'accepted',
  completed: 'completed',
  cancelled: 'cancelled'
};

exports.waste_type_waste_type_name = exports.$Enums.waste_type_waste_type_name = {
  Large_Household_Apllience: 'Large_Household_Apllience',
  Small_Household_Appliances: 'Small_Household_Appliances',
  IT_Equipment: 'IT_Equipment',
  Lamps: 'Lamps',
  Toys: 'Toys',
  Screens_and_Monitors: 'Screens_and_Monitors',
  Other_Electronic_Devices: 'Other_Electronic_Devices'
};

exports.Prisma.ModelName = {
  community: 'community',
  community_points: 'community_points',
  courier: 'courier',
  courier_points: 'courier_points',
  dropbox: 'dropbox',
  management: 'management',
  pickup_waste: 'pickup_waste',
  waste: 'waste',
  waste_type: 'waste_type'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
